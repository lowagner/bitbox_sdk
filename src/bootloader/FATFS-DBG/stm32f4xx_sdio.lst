ARM GAS  /tmp/ccDT7MPS.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3	@ Tag_ABI_HardFP_use
   4              		.eabi_attribute 28, 1	@ Tag_ABI_VFP_args
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1	@ Tag_ABI_FP_denormal
   7              		.eabi_attribute 21, 1	@ Tag_ABI_FP_exceptions
   8              		.eabi_attribute 23, 3	@ Tag_ABI_FP_number_model
   9              		.eabi_attribute 24, 1	@ Tag_ABI_align8_needed
  10              		.eabi_attribute 25, 1	@ Tag_ABI_align8_preserved
  11              		.eabi_attribute 26, 1	@ Tag_ABI_enum_size
  12              		.eabi_attribute 30, 4	@ Tag_ABI_optimization_goals
  13              		.eabi_attribute 34, 1	@ Tag_CPU_unaligned_access
  14              		.eabi_attribute 18, 4	@ Tag_ABI_PCS_wchar_t
  15              		.file	"stm32f4xx_sdio.c"
  16              	@ GNU C (GNU Tools for ARM Embedded Processors) version 4.7.4 20130913 (release) [ARM/embedded-4_7-
  17              	@	compiled by GNU C version 4.7.3, GMP version 5.0.5, MPFR version 3.1.1-p2, MPC version 0.9
  18              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  19              	@ options passed:  -I . -I ../ -I cmsis/ -imultilib armv7e-m/fpu
  20              	@ -iprefix /usr/bin/../lib/gcc/arm-none-eabi/4.7.4/
  21              	@ -isysroot /usr/bin/../arm-none-eabi -MD stm32f4xx_sdio.d
  22              	@ -MF .dep/stm32f4xx_sdio.o.d -MP -MQ stm32f4xx_sdio.o -D__USES_INITFINI__
  23              	@ -D __FPU_USED=1 -D __arm__ -D __ASSEMBLY__ -D USE_STDPERIPH_DRIVER
  24              	@ -D STM32F4XX -D HSE_VALUE=8000000 -D __FPU_PRESENT=1 -D __FPU_USED=1
  25              	@ -D STM32F405VG -D USE_USB_OTG_FS -D RUN_FROM_FLASH=1 stm32f4xx_sdio.c
  26              	@ -mthumb -mcpu=cortex-m4 -mfloat-abi=hard -mfpu=fpv4-sp-d16 -mthumb
  27              	@ -auxbase-strip stm32f4xx_sdio.o -gdwarf-2 -Os -Wall -Wstrict-prototypes
  28              	@ -std=gnu99 -falign-functions=16 -fno-inline -fomit-frame-pointer
  29              	@ -fverbose-asm -ffunction-sections -fdata-sections
  30              	@ options enabled:  -fauto-inc-dec -fbranch-count-reg -fcaller-saves
  31              	@ -fcombine-stack-adjustments -fcommon -fcompare-elim -fcprop-registers
  32              	@ -fcrossjumping -fcse-follow-jumps -fdata-sections -fdebug-types-section
  33              	@ -fdefer-pop -fdelete-null-pointer-checks -fdevirtualize -fdwarf2-cfi-asm
  34              	@ -fearly-inlining -feliminate-unused-debug-types -fexpensive-optimizations
  35              	@ -fforward-propagate -ffunction-cse -ffunction-sections -fgcse -fgcse-lm
  36              	@ -fgnu-runtime -fguess-branch-probability -fident -fif-conversion
  37              	@ -fif-conversion2 -findirect-inlining -finline-atomics -finline-functions
  38              	@ -finline-functions-called-once -finline-small-functions -fipa-cp
  39              	@ -fipa-profile -fipa-pure-const -fipa-reference -fipa-sra
  40              	@ -fira-share-save-slots -fira-share-spill-slots -fivopts
  41              	@ -fkeep-static-consts -fleading-underscore -fmath-errno -fmerge-constants
  42              	@ -fmerge-debug-strings -fomit-frame-pointer -foptimize-register-move
  43              	@ -foptimize-sibling-calls -fpartial-inlining -fpeephole -fpeephole2
  44              	@ -fprefetch-loop-arrays -freg-struct-return -fregmove -frename-registers
  45              	@ -freorder-blocks -freorder-functions -frerun-cse-after-loop
  46              	@ -fsched-critical-path-heuristic -fsched-dep-count-heuristic
  47              	@ -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
  48              	@ -fsched-rank-heuristic -fsched-spec -fsched-spec-insn-heuristic
  49              	@ -fsched-stalled-insns-dep -fschedule-insns2 -fsection-anchors
  50              	@ -fshow-column -fshrink-wrap -fsigned-zeros -fsplit-ivs-in-unroller
  51              	@ -fsplit-wide-types -fstrict-aliasing -fstrict-overflow
  52              	@ -fstrict-volatile-bitfields -fthread-jumps -ftoplevel-reorder
  53              	@ -ftrapping-math -ftree-bit-ccp -ftree-builtin-call-dce -ftree-ccp
  54              	@ -ftree-ch -ftree-copy-prop -ftree-copyrename -ftree-cselim -ftree-dce
  55              	@ -ftree-dominator-opts -ftree-dse -ftree-forwprop -ftree-fre
  56              	@ -ftree-loop-if-convert -ftree-loop-im -ftree-loop-ivcanon
  57              	@ -ftree-loop-optimize -ftree-parallelize-loops= -ftree-phiprop -ftree-pre
ARM GAS  /tmp/ccDT7MPS.s 			page 2


  58              	@ -ftree-pta -ftree-reassoc -ftree-scev-cprop -ftree-sink
  59              	@ -ftree-slp-vectorize -ftree-sra -ftree-switch-conversion
  60              	@ -ftree-tail-merge -ftree-ter -ftree-vect-loop-version -ftree-vrp
  61              	@ -funit-at-a-time -funroll-loops -fvar-tracking -fvar-tracking-assignments
  62              	@ -fverbose-asm -fweb -fzero-initialized-in-bss -mlittle-endian
  63              	@ -msched-prolog -mthumb -munaligned-access -mvectorize-with-neon-quad
  64              	
  65              		.text
  66              	.Ltext0:
  67              		.cfi_sections	.debug_frame
  68              		.section	.text.SDIO_DeInit,"ax",%progbits
  69              		.align	1
  70              		.global	SDIO_DeInit
  71              		.thumb
  72              		.thumb_func
  73              		.type	SDIO_DeInit, %function
  74              	SDIO_DeInit:
  75              	.LFB110:
  76              		.file 1 "stm32f4xx_sdio.c"
   1:stm32f4xx_sdio.c **** /**
   2:stm32f4xx_sdio.c ****   ******************************************************************************
   3:stm32f4xx_sdio.c ****   * @file    stm32f4xx_sdio.c
   4:stm32f4xx_sdio.c ****   * @author  MCD Application Team
   5:stm32f4xx_sdio.c ****   * @version V1.1.0
   6:stm32f4xx_sdio.c ****   * @date    11-January-2013
   7:stm32f4xx_sdio.c ****   * @brief   This file provides firmware functions to manage the following 
   8:stm32f4xx_sdio.c ****   *          functionalities of the Secure digital input/output interface (SDIO) 
   9:stm32f4xx_sdio.c ****   *          peripheral:
  10:stm32f4xx_sdio.c ****   *           + Initialization and Configuration
  11:stm32f4xx_sdio.c ****   *           + Command path state machine (CPSM) management
  12:stm32f4xx_sdio.c ****   *           + Data path state machine (DPSM) management
  13:stm32f4xx_sdio.c ****   *           + SDIO IO Cards mode management
  14:stm32f4xx_sdio.c ****   *           + CE-ATA mode management
  15:stm32f4xx_sdio.c ****   *           + DMA transfers management
  16:stm32f4xx_sdio.c ****   *           + Interrupts and flags management
  17:stm32f4xx_sdio.c ****   *
  18:stm32f4xx_sdio.c **** @verbatim
  19:stm32f4xx_sdio.c **** 
  20:stm32f4xx_sdio.c ****  ===================================================================
  21:stm32f4xx_sdio.c ****                  ##### How to use this driver #####
  22:stm32f4xx_sdio.c ****  ===================================================================
  23:stm32f4xx_sdio.c ****  [..]
  24:stm32f4xx_sdio.c ****    (#) The SDIO clock (SDIOCLK = 48 MHz) is coming from a specific output of PLL 
  25:stm32f4xx_sdio.c ****        (PLL48CLK). Before to start working with SDIO peripheral make sure that the
  26:stm32f4xx_sdio.c ****        PLL is well configured.
  27:stm32f4xx_sdio.c ****        The SDIO peripheral uses two clock signals:
  28:stm32f4xx_sdio.c ****        (++) SDIO adapter clock (SDIOCLK = 48 MHz)
  29:stm32f4xx_sdio.c ****        (++) APB2 bus clock (PCLK2)
  30:stm32f4xx_sdio.c ****        
  31:stm32f4xx_sdio.c ****        -@@- PCLK2 and SDIO_CK clock frequencies must respect the following condition:
  32:stm32f4xx_sdio.c ****            Frequency(PCLK2) >= (3 / 8 x Frequency(SDIO_CK))
  33:stm32f4xx_sdio.c ****   
  34:stm32f4xx_sdio.c ****    (#) Enable peripheral clock using RCC_APB2PeriphClockCmd(RCC_APB2Periph_SDIO, ENABLE).
  35:stm32f4xx_sdio.c ****   
  36:stm32f4xx_sdio.c ****    (#) According to the SDIO mode, enable the GPIO clocks using 
  37:stm32f4xx_sdio.c ****        RCC_AHB1PeriphClockCmd() function. 
  38:stm32f4xx_sdio.c ****        The I/O can be one of the following configurations:
ARM GAS  /tmp/ccDT7MPS.s 			page 3


  39:stm32f4xx_sdio.c ****        (++) 1-bit data length: SDIO_CMD, SDIO_CK and D0.
  40:stm32f4xx_sdio.c ****        (++) 4-bit data length: SDIO_CMD, SDIO_CK and D[3:0].
  41:stm32f4xx_sdio.c ****        (++) 8-bit data length: SDIO_CMD, SDIO_CK and D[7:0].      
  42:stm32f4xx_sdio.c ****   
  43:stm32f4xx_sdio.c ****    (#) Peripheral alternate function: 
  44:stm32f4xx_sdio.c ****        (++) Connect the pin to the desired peripherals' Alternate Function (AF) 
  45:stm32f4xx_sdio.c ****            using GPIO_PinAFConfig() function
  46:stm32f4xx_sdio.c ****        (++) Configure the desired pin in alternate function by: 
  47:stm32f4xx_sdio.c ****            GPIO_InitStruct->GPIO_Mode = GPIO_Mode_AF
  48:stm32f4xx_sdio.c ****        (++) Select the type, pull-up/pull-down and output speed via GPIO_PuPd, 
  49:stm32f4xx_sdio.c ****            GPIO_OType and GPIO_Speed members
  50:stm32f4xx_sdio.c ****        (++) Call GPIO_Init() function
  51:stm32f4xx_sdio.c ****   
  52:stm32f4xx_sdio.c ****    (#) Program the Clock Edge, Clock Bypass, Clock Power Save, Bus Wide, 
  53:stm32f4xx_sdio.c ****        hardware, flow control and the Clock Divider using the SDIO_Init()
  54:stm32f4xx_sdio.c ****        function.
  55:stm32f4xx_sdio.c ****   
  56:stm32f4xx_sdio.c ****    (#) Enable the Power ON State using the SDIO_SetPowerState(SDIO_PowerState_ON) 
  57:stm32f4xx_sdio.c ****        function.
  58:stm32f4xx_sdio.c ****                 
  59:stm32f4xx_sdio.c ****    (#) Enable the clock using the SDIO_ClockCmd() function.
  60:stm32f4xx_sdio.c ****   
  61:stm32f4xx_sdio.c ****    (#) Enable the NVIC and the corresponding interrupt using the function 
  62:stm32f4xx_sdio.c ****        SDIO_ITConfig() if you need to use interrupt mode. 
  63:stm32f4xx_sdio.c ****   
  64:stm32f4xx_sdio.c ****    (#) When using the DMA mode 
  65:stm32f4xx_sdio.c ****        (++) Configure the DMA using DMA_Init() function
  66:stm32f4xx_sdio.c ****        (++) Active the needed channel Request using SDIO_DMACmd() function
  67:stm32f4xx_sdio.c ****   
  68:stm32f4xx_sdio.c ****    (#) Enable the DMA using the DMA_Cmd() function, when using DMA mode. 
  69:stm32f4xx_sdio.c ****   
  70:stm32f4xx_sdio.c ****    (#) To control the CPSM (Command Path State Machine) and send 
  71:stm32f4xx_sdio.c ****        commands to the card use the SDIO_SendCommand(), 
  72:stm32f4xx_sdio.c ****        SDIO_GetCommandResponse() and SDIO_GetResponse() functions. First, user has
  73:stm32f4xx_sdio.c ****        to fill the command structure (pointer to SDIO_CmdInitTypeDef) according 
  74:stm32f4xx_sdio.c ****        to the selected command to be sent.
  75:stm32f4xx_sdio.c ****        The parameters that should be filled are:
  76:stm32f4xx_sdio.c ****        (++) Command Argument
  77:stm32f4xx_sdio.c ****        (++) Command Index
  78:stm32f4xx_sdio.c ****        (++) Command Response type
  79:stm32f4xx_sdio.c ****        (++) Command Wait
  80:stm32f4xx_sdio.c ****        (++) CPSM Status (Enable or Disable).
  81:stm32f4xx_sdio.c ****   
  82:stm32f4xx_sdio.c ****        -@@- To check if the command is well received, read the SDIO_CMDRESP
  83:stm32f4xx_sdio.c ****            register using the SDIO_GetCommandResponse().
  84:stm32f4xx_sdio.c ****            The SDIO responses registers (SDIO_RESP1 to SDIO_RESP2), use the
  85:stm32f4xx_sdio.c ****            SDIO_GetResponse() function.
  86:stm32f4xx_sdio.c ****   
  87:stm32f4xx_sdio.c ****    (#) To control the DPSM (Data Path State Machine) and send/receive 
  88:stm32f4xx_sdio.c ****        data to/from the card use the SDIO_DataConfig(), SDIO_GetDataCounter(), 
  89:stm32f4xx_sdio.c ****        SDIO_ReadData(), SDIO_WriteData() and SDIO_GetFIFOCount() functions.
  90:stm32f4xx_sdio.c ****   
  91:stm32f4xx_sdio.c ****  *** Read Operations ***
  92:stm32f4xx_sdio.c ****  =======================
  93:stm32f4xx_sdio.c ****  [..]
  94:stm32f4xx_sdio.c ****    (#) First, user has to fill the data structure (pointer to
  95:stm32f4xx_sdio.c ****        SDIO_DataInitTypeDef) according to the selected data type to be received.
ARM GAS  /tmp/ccDT7MPS.s 			page 4


  96:stm32f4xx_sdio.c ****        The parameters that should be filled are:
  97:stm32f4xx_sdio.c ****        (++) Data TimeOut
  98:stm32f4xx_sdio.c ****        (++) Data Length
  99:stm32f4xx_sdio.c ****        (++) Data Block size
 100:stm32f4xx_sdio.c ****        (++) Data Transfer direction: should be from card (To SDIO)
 101:stm32f4xx_sdio.c ****        (++) Data Transfer mode
 102:stm32f4xx_sdio.c ****        (++) DPSM Status (Enable or Disable)
 103:stm32f4xx_sdio.c ****                                      
 104:stm32f4xx_sdio.c ****    (#) Configure the SDIO resources to receive the data from the card
 105:stm32f4xx_sdio.c ****        according to selected transfer mode (Refer to Step 8, 9 and 10).
 106:stm32f4xx_sdio.c ****   
 107:stm32f4xx_sdio.c ****    (#)  Send the selected Read command (refer to step 11).
 108:stm32f4xx_sdio.c ****                     
 109:stm32f4xx_sdio.c ****    (#) Use the SDIO flags/interrupts to check the transfer status.
 110:stm32f4xx_sdio.c ****   
 111:stm32f4xx_sdio.c ****  *** Write Operations ***
 112:stm32f4xx_sdio.c ****  ========================
 113:stm32f4xx_sdio.c ****  [..]
 114:stm32f4xx_sdio.c ****    (#) First, user has to fill the data structure (pointer to
 115:stm32f4xx_sdio.c ****        SDIO_DataInitTypeDef) according to the selected data type to be received.
 116:stm32f4xx_sdio.c ****        The parameters that should be filled are:
 117:stm32f4xx_sdio.c ****        (++) Data TimeOut
 118:stm32f4xx_sdio.c ****        (++) Data Length
 119:stm32f4xx_sdio.c ****        (++) Data Block size
 120:stm32f4xx_sdio.c ****        (++) Data Transfer direction:  should be to card (To CARD)
 121:stm32f4xx_sdio.c ****        (++) Data Transfer mode
 122:stm32f4xx_sdio.c ****        (++) DPSM Status (Enable or Disable)
 123:stm32f4xx_sdio.c ****   
 124:stm32f4xx_sdio.c ****    (#) Configure the SDIO resources to send the data to the card according to 
 125:stm32f4xx_sdio.c ****        selected transfer mode (Refer to Step 8, 9 and 10).
 126:stm32f4xx_sdio.c ****                      
 127:stm32f4xx_sdio.c ****    (#) Send the selected Write command (refer to step 11).
 128:stm32f4xx_sdio.c ****                     
 129:stm32f4xx_sdio.c ****    (#) Use the SDIO flags/interrupts to check the transfer status.
 130:stm32f4xx_sdio.c ****   
 131:stm32f4xx_sdio.c ****   
 132:stm32f4xx_sdio.c **** @endverbatim
 133:stm32f4xx_sdio.c ****   *
 134:stm32f4xx_sdio.c ****   *
 135:stm32f4xx_sdio.c ****   ******************************************************************************
 136:stm32f4xx_sdio.c ****   * @attention
 137:stm32f4xx_sdio.c ****   *
 138:stm32f4xx_sdio.c ****   * <h2><center>&copy; COPYRIGHT 2013 STMicroelectronics</center></h2>
 139:stm32f4xx_sdio.c ****   *
 140:stm32f4xx_sdio.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
 141:stm32f4xx_sdio.c ****   * You may not use this file except in compliance with the License.
 142:stm32f4xx_sdio.c ****   * You may obtain a copy of the License at:
 143:stm32f4xx_sdio.c ****   *
 144:stm32f4xx_sdio.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
 145:stm32f4xx_sdio.c ****   *
 146:stm32f4xx_sdio.c ****   * Unless required by applicable law or agreed to in writing, software 
 147:stm32f4xx_sdio.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
 148:stm32f4xx_sdio.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 149:stm32f4xx_sdio.c ****   * See the License for the specific language governing permissions and
 150:stm32f4xx_sdio.c ****   * limitations under the License.
 151:stm32f4xx_sdio.c ****   *
 152:stm32f4xx_sdio.c ****   ******************************************************************************
ARM GAS  /tmp/ccDT7MPS.s 			page 5


 153:stm32f4xx_sdio.c ****   */
 154:stm32f4xx_sdio.c **** 
 155:stm32f4xx_sdio.c **** /* Includes ------------------------------------------------------------------*/
 156:stm32f4xx_sdio.c **** #include "stm32f4xx_sdio.h"
 157:stm32f4xx_sdio.c **** #include "stm32f4xx_rcc.h"
 158:stm32f4xx_sdio.c **** 
 159:stm32f4xx_sdio.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
 160:stm32f4xx_sdio.c ****   * @{
 161:stm32f4xx_sdio.c ****   */
 162:stm32f4xx_sdio.c **** 
 163:stm32f4xx_sdio.c **** /** @defgroup SDIO 
 164:stm32f4xx_sdio.c ****   * @brief SDIO driver modules
 165:stm32f4xx_sdio.c ****   * @{
 166:stm32f4xx_sdio.c ****   */ 
 167:stm32f4xx_sdio.c **** 
 168:stm32f4xx_sdio.c **** /* Private typedef -----------------------------------------------------------*/
 169:stm32f4xx_sdio.c **** /* Private define ------------------------------------------------------------*/
 170:stm32f4xx_sdio.c **** 
 171:stm32f4xx_sdio.c **** /* ------------ SDIO registers bit address in the alias region ----------- */
 172:stm32f4xx_sdio.c **** #define SDIO_OFFSET                (SDIO_BASE - PERIPH_BASE)
 173:stm32f4xx_sdio.c **** 
 174:stm32f4xx_sdio.c **** /* --- CLKCR Register ---*/
 175:stm32f4xx_sdio.c **** /* Alias word address of CLKEN bit */
 176:stm32f4xx_sdio.c **** #define CLKCR_OFFSET              (SDIO_OFFSET + 0x04)
 177:stm32f4xx_sdio.c **** #define CLKEN_BitNumber           0x08
 178:stm32f4xx_sdio.c **** #define CLKCR_CLKEN_BB            (PERIPH_BB_BASE + (CLKCR_OFFSET * 32) + (CLKEN_BitNumber * 4))
 179:stm32f4xx_sdio.c **** 
 180:stm32f4xx_sdio.c **** /* --- CMD Register ---*/
 181:stm32f4xx_sdio.c **** /* Alias word address of SDIOSUSPEND bit */
 182:stm32f4xx_sdio.c **** #define CMD_OFFSET                (SDIO_OFFSET + 0x0C)
 183:stm32f4xx_sdio.c **** #define SDIOSUSPEND_BitNumber     0x0B
 184:stm32f4xx_sdio.c **** #define CMD_SDIOSUSPEND_BB        (PERIPH_BB_BASE + (CMD_OFFSET * 32) + (SDIOSUSPEND_BitNumber * 4)
 185:stm32f4xx_sdio.c **** 
 186:stm32f4xx_sdio.c **** /* Alias word address of ENCMDCOMPL bit */
 187:stm32f4xx_sdio.c **** #define ENCMDCOMPL_BitNumber      0x0C
 188:stm32f4xx_sdio.c **** #define CMD_ENCMDCOMPL_BB         (PERIPH_BB_BASE + (CMD_OFFSET * 32) + (ENCMDCOMPL_BitNumber * 4))
 189:stm32f4xx_sdio.c **** 
 190:stm32f4xx_sdio.c **** /* Alias word address of NIEN bit */
 191:stm32f4xx_sdio.c **** #define NIEN_BitNumber            0x0D
 192:stm32f4xx_sdio.c **** #define CMD_NIEN_BB               (PERIPH_BB_BASE + (CMD_OFFSET * 32) + (NIEN_BitNumber * 4))
 193:stm32f4xx_sdio.c **** 
 194:stm32f4xx_sdio.c **** /* Alias word address of ATACMD bit */
 195:stm32f4xx_sdio.c **** #define ATACMD_BitNumber          0x0E
 196:stm32f4xx_sdio.c **** #define CMD_ATACMD_BB             (PERIPH_BB_BASE + (CMD_OFFSET * 32) + (ATACMD_BitNumber * 4))
 197:stm32f4xx_sdio.c **** 
 198:stm32f4xx_sdio.c **** /* --- DCTRL Register ---*/
 199:stm32f4xx_sdio.c **** /* Alias word address of DMAEN bit */
 200:stm32f4xx_sdio.c **** #define DCTRL_OFFSET              (SDIO_OFFSET + 0x2C)
 201:stm32f4xx_sdio.c **** #define DMAEN_BitNumber           0x03
 202:stm32f4xx_sdio.c **** #define DCTRL_DMAEN_BB            (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (DMAEN_BitNumber * 4))
 203:stm32f4xx_sdio.c **** 
 204:stm32f4xx_sdio.c **** /* Alias word address of RWSTART bit */
 205:stm32f4xx_sdio.c **** #define RWSTART_BitNumber         0x08
 206:stm32f4xx_sdio.c **** #define DCTRL_RWSTART_BB          (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (RWSTART_BitNumber * 4))
 207:stm32f4xx_sdio.c **** 
 208:stm32f4xx_sdio.c **** /* Alias word address of RWSTOP bit */
 209:stm32f4xx_sdio.c **** #define RWSTOP_BitNumber          0x09
ARM GAS  /tmp/ccDT7MPS.s 			page 6


 210:stm32f4xx_sdio.c **** #define DCTRL_RWSTOP_BB           (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (RWSTOP_BitNumber * 4))
 211:stm32f4xx_sdio.c **** 
 212:stm32f4xx_sdio.c **** /* Alias word address of RWMOD bit */
 213:stm32f4xx_sdio.c **** #define RWMOD_BitNumber           0x0A
 214:stm32f4xx_sdio.c **** #define DCTRL_RWMOD_BB            (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (RWMOD_BitNumber * 4))
 215:stm32f4xx_sdio.c **** 
 216:stm32f4xx_sdio.c **** /* Alias word address of SDIOEN bit */
 217:stm32f4xx_sdio.c **** #define SDIOEN_BitNumber          0x0B
 218:stm32f4xx_sdio.c **** #define DCTRL_SDIOEN_BB           (PERIPH_BB_BASE + (DCTRL_OFFSET * 32) + (SDIOEN_BitNumber * 4))
 219:stm32f4xx_sdio.c **** 
 220:stm32f4xx_sdio.c **** /* ---------------------- SDIO registers bit mask ------------------------ */
 221:stm32f4xx_sdio.c **** /* --- CLKCR Register ---*/
 222:stm32f4xx_sdio.c **** /* CLKCR register clear mask */
 223:stm32f4xx_sdio.c **** #define CLKCR_CLEAR_MASK         ((uint32_t)0xFFFF8100) 
 224:stm32f4xx_sdio.c **** 
 225:stm32f4xx_sdio.c **** /* --- PWRCTRL Register ---*/
 226:stm32f4xx_sdio.c **** /* SDIO PWRCTRL Mask */
 227:stm32f4xx_sdio.c **** #define PWR_PWRCTRL_MASK         ((uint32_t)0xFFFFFFFC)
 228:stm32f4xx_sdio.c **** 
 229:stm32f4xx_sdio.c **** /* --- DCTRL Register ---*/
 230:stm32f4xx_sdio.c **** /* SDIO DCTRL Clear Mask */
 231:stm32f4xx_sdio.c **** #define DCTRL_CLEAR_MASK         ((uint32_t)0xFFFFFF08)
 232:stm32f4xx_sdio.c **** 
 233:stm32f4xx_sdio.c **** /* --- CMD Register ---*/
 234:stm32f4xx_sdio.c **** /* CMD Register clear mask */
 235:stm32f4xx_sdio.c **** #define CMD_CLEAR_MASK           ((uint32_t)0xFFFFF800)
 236:stm32f4xx_sdio.c **** 
 237:stm32f4xx_sdio.c **** /* SDIO RESP Registers Address */
 238:stm32f4xx_sdio.c **** #define SDIO_RESP_ADDR           ((uint32_t)(SDIO_BASE + 0x14))
 239:stm32f4xx_sdio.c **** 
 240:stm32f4xx_sdio.c **** /* Private macro -------------------------------------------------------------*/
 241:stm32f4xx_sdio.c **** /* Private variables ---------------------------------------------------------*/
 242:stm32f4xx_sdio.c **** /* Private function prototypes -----------------------------------------------*/
 243:stm32f4xx_sdio.c **** /* Private functions ---------------------------------------------------------*/
 244:stm32f4xx_sdio.c **** 
 245:stm32f4xx_sdio.c **** /** @defgroup SDIO_Private_Functions
 246:stm32f4xx_sdio.c ****   * @{
 247:stm32f4xx_sdio.c ****   */
 248:stm32f4xx_sdio.c **** 
 249:stm32f4xx_sdio.c **** /** @defgroup SDIO_Group1 Initialization and Configuration functions
 250:stm32f4xx_sdio.c ****  *  @brief   Initialization and Configuration functions 
 251:stm32f4xx_sdio.c ****  *
 252:stm32f4xx_sdio.c **** @verbatim   
 253:stm32f4xx_sdio.c ****  ===============================================================================
 254:stm32f4xx_sdio.c ****               ##### Initialization and Configuration functions #####
 255:stm32f4xx_sdio.c ****  ===============================================================================
 256:stm32f4xx_sdio.c **** 
 257:stm32f4xx_sdio.c **** @endverbatim
 258:stm32f4xx_sdio.c ****   * @{
 259:stm32f4xx_sdio.c ****   */
 260:stm32f4xx_sdio.c **** 
 261:stm32f4xx_sdio.c **** /**
 262:stm32f4xx_sdio.c ****   * @brief  Deinitializes the SDIO peripheral registers to their default reset values.
 263:stm32f4xx_sdio.c ****   * @param  None
 264:stm32f4xx_sdio.c ****   * @retval None
 265:stm32f4xx_sdio.c ****   */
 266:stm32f4xx_sdio.c **** void SDIO_DeInit(void)
ARM GAS  /tmp/ccDT7MPS.s 			page 7


 267:stm32f4xx_sdio.c **** {
  77              		.loc 1 267 0
  78              		.cfi_startproc
  79              		@ args = 0, pretend = 0, frame = 0
  80              		@ frame_needed = 0, uses_anonymous_args = 0
  81 0000 08B5     		push	{r3, lr}	@
  82              	.LCFI0:
  83              		.cfi_def_cfa_offset 8
  84              		.cfi_offset 3, -8
  85              		.cfi_offset 14, -4
 268:stm32f4xx_sdio.c ****   RCC_APB2PeriphResetCmd(RCC_APB2Periph_SDIO, ENABLE);
  86              		.loc 1 268 0
  87 0002 0121     		movs	r1, #1	@,
  88 0004 4FF40060 		mov	r0, #2048	@,
  89 0008 FFF7FEFF 		bl	RCC_APB2PeriphResetCmd	@
  90              	.LVL0:
 269:stm32f4xx_sdio.c ****   RCC_APB2PeriphResetCmd(RCC_APB2Periph_SDIO, DISABLE);
  91              		.loc 1 269 0
  92 000c 4FF40060 		mov	r0, #2048	@,
  93 0010 0021     		movs	r1, #0	@,
 270:stm32f4xx_sdio.c **** }
  94              		.loc 1 270 0
  95 0012 BDE80840 		pop	{r3, lr}	@
 269:stm32f4xx_sdio.c ****   RCC_APB2PeriphResetCmd(RCC_APB2Periph_SDIO, DISABLE);
  96              		.loc 1 269 0
  97 0016 FFF7FEBF 		b	RCC_APB2PeriphResetCmd	@
  98              	.LVL1:
  99              		.cfi_endproc
 100              	.LFE110:
 101              		.size	SDIO_DeInit, .-SDIO_DeInit
 102              		.section	.text.SDIO_Init,"ax",%progbits
 103              		.align	1
 104              		.global	SDIO_Init
 105              		.thumb
 106              		.thumb_func
 107              		.type	SDIO_Init, %function
 108              	SDIO_Init:
 109              	.LFB111:
 271:stm32f4xx_sdio.c **** 
 272:stm32f4xx_sdio.c **** /**
 273:stm32f4xx_sdio.c ****   * @brief  Initializes the SDIO peripheral according to the specified 
 274:stm32f4xx_sdio.c ****   *         parameters in the SDIO_InitStruct.
 275:stm32f4xx_sdio.c ****   * @param  SDIO_InitStruct : pointer to a SDIO_InitTypeDef structure 
 276:stm32f4xx_sdio.c ****   *         that contains the configuration information for the SDIO peripheral.
 277:stm32f4xx_sdio.c ****   * @retval None
 278:stm32f4xx_sdio.c ****   */
 279:stm32f4xx_sdio.c **** void SDIO_Init(SDIO_InitTypeDef* SDIO_InitStruct)
 280:stm32f4xx_sdio.c **** {
 110              		.loc 1 280 0
 111              		.cfi_startproc
 112              		@ args = 0, pretend = 0, frame = 0
 113              		@ frame_needed = 0, uses_anonymous_args = 0
 114              	.LVL2:
 281:stm32f4xx_sdio.c ****   uint32_t tmpreg = 0;
 282:stm32f4xx_sdio.c ****     
 283:stm32f4xx_sdio.c ****   /* Check the parameters */
 284:stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CLOCK_EDGE(SDIO_InitStruct->SDIO_ClockEdge));
ARM GAS  /tmp/ccDT7MPS.s 			page 8


 285:stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CLOCK_BYPASS(SDIO_InitStruct->SDIO_ClockBypass));
 286:stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CLOCK_POWER_SAVE(SDIO_InitStruct->SDIO_ClockPowerSave));
 287:stm32f4xx_sdio.c ****   assert_param(IS_SDIO_BUS_WIDE(SDIO_InitStruct->SDIO_BusWide));
 288:stm32f4xx_sdio.c ****   assert_param(IS_SDIO_HARDWARE_FLOW_CONTROL(SDIO_InitStruct->SDIO_HardwareFlowControl)); 
 289:stm32f4xx_sdio.c ****    
 290:stm32f4xx_sdio.c **** /*---------------------------- SDIO CLKCR Configuration ------------------------*/  
 291:stm32f4xx_sdio.c ****   /* Get the SDIO CLKCR value */
 292:stm32f4xx_sdio.c ****   tmpreg = SDIO->CLKCR;
 293:stm32f4xx_sdio.c ****   
 294:stm32f4xx_sdio.c ****   /* Clear CLKDIV, PWRSAV, BYPASS, WIDBUS, NEGEDGE, HWFC_EN bits */
 295:stm32f4xx_sdio.c ****   tmpreg &= CLKCR_CLEAR_MASK;
 296:stm32f4xx_sdio.c ****   
 297:stm32f4xx_sdio.c ****   /* Set CLKDIV bits according to SDIO_ClockDiv value */
 298:stm32f4xx_sdio.c ****   /* Set PWRSAV bit according to SDIO_ClockPowerSave value */
 299:stm32f4xx_sdio.c ****   /* Set BYPASS bit according to SDIO_ClockBypass value */
 300:stm32f4xx_sdio.c ****   /* Set WIDBUS bits according to SDIO_BusWide value */
 301:stm32f4xx_sdio.c ****   /* Set NEGEDGE bits according to SDIO_ClockEdge value */
 302:stm32f4xx_sdio.c ****   /* Set HWFC_EN bits according to SDIO_HardwareFlowControl value */
 303:stm32f4xx_sdio.c ****   tmpreg |= (SDIO_InitStruct->SDIO_ClockDiv  | SDIO_InitStruct->SDIO_ClockPowerSave |
 115              		.loc 1 303 0
 116 0000 8168     		ldr	r1, [r0, #8]	@ SDIO_InitStruct_5(D)->SDIO_ClockPowerSave, SDIO_InitStruct_5(D)->SDIO_ClockPowe
 292:stm32f4xx_sdio.c ****   tmpreg = SDIO->CLKCR;
 117              		.loc 1 292 0
 118 0002 0A4A     		ldr	r2, .L3	@ tmp150,
 280:stm32f4xx_sdio.c **** {
 119              		.loc 1 280 0
 120 0004 10B5     		push	{r4, lr}	@
 121              	.LCFI1:
 122              		.cfi_def_cfa_offset 8
 123              		.cfi_offset 4, -8
 124              		.cfi_offset 14, -4
 125              		.loc 1 303 0
 126 0006 4468     		ldr	r4, [r0, #4]	@ SDIO_InitStruct_5(D)->SDIO_ClockBypass, SDIO_InitStruct_5(D)->SDIO_ClockBypass
 292:stm32f4xx_sdio.c ****   tmpreg = SDIO->CLKCR;
 127              		.loc 1 292 0
 128 0008 5368     		ldr	r3, [r2, #4]	@ tmpreg, MEM[(struct SDIO_TypeDef *)1073818624B].CLKCR
 129              	.LVL3:
 130              		.loc 1 303 0
 131 000a 0C43     		orrs	r4, r4, r1	@, tmp151, SDIO_InitStruct_5(D)->SDIO_ClockBypass, SDIO_InitStruct_5(D)->SDIO_Cloc
 132 000c C168     		ldr	r1, [r0, #12]	@ SDIO_InitStruct_5(D)->SDIO_BusWide, SDIO_InitStruct_5(D)->SDIO_BusWide
 133 000e 0C43     		orrs	r4, r4, r1	@, tmp154, tmp151, SDIO_InitStruct_5(D)->SDIO_BusWide
 304:stm32f4xx_sdio.c ****              SDIO_InitStruct->SDIO_ClockBypass | SDIO_InitStruct->SDIO_BusWide |
 134              		.loc 1 304 0
 135 0010 0168     		ldr	r1, [r0, #0]	@ SDIO_InitStruct_5(D)->SDIO_ClockEdge, SDIO_InitStruct_5(D)->SDIO_ClockEdge
 136 0012 0C43     		orrs	r4, r4, r1	@, tmp156, tmp154, SDIO_InitStruct_5(D)->SDIO_ClockEdge
 137 0014 0169     		ldr	r1, [r0, #16]	@ SDIO_InitStruct_5(D)->SDIO_HardwareFlowControl, SDIO_InitStruct_5(D)->SDIO_Har
 303:stm32f4xx_sdio.c ****   tmpreg |= (SDIO_InitStruct->SDIO_ClockDiv  | SDIO_InitStruct->SDIO_ClockPowerSave |
 138              		.loc 1 303 0
 139 0016 007D     		ldrb	r0, [r0, #20]	@ zero_extendqisi2	@ SDIO_InitStruct_5(D)->SDIO_ClockDiv, SDIO_InitStruct_5(D)-
 140              	.LVL4:
 295:stm32f4xx_sdio.c ****   tmpreg &= CLKCR_CLEAR_MASK;
 141              		.loc 1 295 0
 142 0018 23F4FD43 		bic	r3, r3, #32384	@ tmp160, tmpreg,
 143              	.LVL5:
 144              		.loc 1 304 0
 145 001c 2143     		orrs	r1, r1, r4	@, tmp158, SDIO_InitStruct_5(D)->SDIO_HardwareFlowControl, tmp156
 295:stm32f4xx_sdio.c ****   tmpreg &= CLKCR_CLEAR_MASK;
ARM GAS  /tmp/ccDT7MPS.s 			page 9


 146              		.loc 1 295 0
 147 001e 23F07F03 		bic	r3, r3, #127	@ tmp160, tmp160,
 305:stm32f4xx_sdio.c ****              SDIO_InitStruct->SDIO_ClockEdge | SDIO_InitStruct->SDIO_HardwareFlowControl); 
 148              		.loc 1 305 0
 149 0022 1943     		orrs	r1, r1, r3	@, D.6110, tmp158, tmp160
 303:stm32f4xx_sdio.c ****   tmpreg |= (SDIO_InitStruct->SDIO_ClockDiv  | SDIO_InitStruct->SDIO_ClockPowerSave |
 150              		.loc 1 303 0
 151 0024 0143     		orrs	r1, r1, r0	@, tmpreg, D.6110, SDIO_InitStruct_5(D)->SDIO_ClockDiv
 152              	.LVL6:
 306:stm32f4xx_sdio.c ****   
 307:stm32f4xx_sdio.c ****   /* Write to SDIO CLKCR */
 308:stm32f4xx_sdio.c ****   SDIO->CLKCR = tmpreg;
 153              		.loc 1 308 0
 154 0026 5160     		str	r1, [r2, #4]	@ tmpreg, MEM[(struct SDIO_TypeDef *)1073818624B].CLKCR
 155 0028 10BD     		pop	{r4, pc}	@
 156              	.L4:
 157 002a 00BF     		.align	2
 158              	.L3:
 159 002c 002C0140 		.word	1073818624
 160              		.cfi_endproc
 161              	.LFE111:
 162              		.size	SDIO_Init, .-SDIO_Init
 163              		.section	.text.SDIO_StructInit,"ax",%progbits
 164              		.align	1
 165              		.global	SDIO_StructInit
 166              		.thumb
 167              		.thumb_func
 168              		.type	SDIO_StructInit, %function
 169              	SDIO_StructInit:
 170              	.LFB112:
 309:stm32f4xx_sdio.c **** }
 310:stm32f4xx_sdio.c **** 
 311:stm32f4xx_sdio.c **** /**
 312:stm32f4xx_sdio.c ****   * @brief  Fills each SDIO_InitStruct member with its default value.
 313:stm32f4xx_sdio.c ****   * @param  SDIO_InitStruct: pointer to an SDIO_InitTypeDef structure which 
 314:stm32f4xx_sdio.c ****   *         will be initialized.
 315:stm32f4xx_sdio.c ****   * @retval None
 316:stm32f4xx_sdio.c ****   */
 317:stm32f4xx_sdio.c **** void SDIO_StructInit(SDIO_InitTypeDef* SDIO_InitStruct)
 318:stm32f4xx_sdio.c **** {
 171              		.loc 1 318 0
 172              		.cfi_startproc
 173              		@ args = 0, pretend = 0, frame = 0
 174              		@ frame_needed = 0, uses_anonymous_args = 0
 175              		@ link register save eliminated.
 176              	.LVL7:
 319:stm32f4xx_sdio.c ****   /* SDIO_InitStruct members default value */
 320:stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_ClockDiv = 0x00;
 177              		.loc 1 320 0
 178 0000 0023     		movs	r3, #0	@ tmp135,
 179 0002 0375     		strb	r3, [r0, #20]	@ tmp135, SDIO_InitStruct_1(D)->SDIO_ClockDiv
 321:stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_ClockEdge = SDIO_ClockEdge_Rising;
 180              		.loc 1 321 0
 181 0004 0360     		str	r3, [r0, #0]	@ tmp135, SDIO_InitStruct_1(D)->SDIO_ClockEdge
 322:stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_ClockBypass = SDIO_ClockBypass_Disable;
 182              		.loc 1 322 0
 183 0006 4360     		str	r3, [r0, #4]	@ tmp135, SDIO_InitStruct_1(D)->SDIO_ClockBypass
ARM GAS  /tmp/ccDT7MPS.s 			page 10


 323:stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_ClockPowerSave = SDIO_ClockPowerSave_Disable;
 184              		.loc 1 323 0
 185 0008 8360     		str	r3, [r0, #8]	@ tmp135, SDIO_InitStruct_1(D)->SDIO_ClockPowerSave
 324:stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_BusWide = SDIO_BusWide_1b;
 186              		.loc 1 324 0
 187 000a C360     		str	r3, [r0, #12]	@ tmp135, SDIO_InitStruct_1(D)->SDIO_BusWide
 325:stm32f4xx_sdio.c ****   SDIO_InitStruct->SDIO_HardwareFlowControl = SDIO_HardwareFlowControl_Disable;
 188              		.loc 1 325 0
 189 000c 0361     		str	r3, [r0, #16]	@ tmp135, SDIO_InitStruct_1(D)->SDIO_HardwareFlowControl
 190 000e 7047     		bx	lr	@
 191              		.cfi_endproc
 192              	.LFE112:
 193              		.size	SDIO_StructInit, .-SDIO_StructInit
 194              		.section	.text.SDIO_ClockCmd,"ax",%progbits
 195              		.align	1
 196              		.global	SDIO_ClockCmd
 197              		.thumb
 198              		.thumb_func
 199              		.type	SDIO_ClockCmd, %function
 200              	SDIO_ClockCmd:
 201              	.LFB113:
 326:stm32f4xx_sdio.c **** }
 327:stm32f4xx_sdio.c **** 
 328:stm32f4xx_sdio.c **** /**
 329:stm32f4xx_sdio.c ****   * @brief  Enables or disables the SDIO Clock.
 330:stm32f4xx_sdio.c ****   * @param  NewState: new state of the SDIO Clock. 
 331:stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 332:stm32f4xx_sdio.c ****   * @retval None
 333:stm32f4xx_sdio.c ****   */
 334:stm32f4xx_sdio.c **** void SDIO_ClockCmd(FunctionalState NewState)
 335:stm32f4xx_sdio.c **** {
 202              		.loc 1 335 0
 203              		.cfi_startproc
 204              		@ args = 0, pretend = 0, frame = 0
 205              		@ frame_needed = 0, uses_anonymous_args = 0
 206              		@ link register save eliminated.
 207              	.LVL8:
 336:stm32f4xx_sdio.c ****   /* Check the parameters */
 337:stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 338:stm32f4xx_sdio.c ****   
 339:stm32f4xx_sdio.c ****   *(__IO uint32_t *) CLKCR_CLKEN_BB = (uint32_t)NewState;
 208              		.loc 1 339 0
 209 0000 014B     		ldr	r3, .L7	@ tmp136,
 210 0002 1860     		str	r0, [r3, #0]	@ NewState, MEM[(volatile uint32_t *)1109754016B]
 211 0004 7047     		bx	lr	@
 212              	.L8:
 213 0006 00BF     		.align	2
 214              	.L7:
 215 0008 A0802542 		.word	1109754016
 216              		.cfi_endproc
 217              	.LFE113:
 218              		.size	SDIO_ClockCmd, .-SDIO_ClockCmd
 219              		.section	.text.SDIO_SetPowerState,"ax",%progbits
 220              		.align	1
 221              		.global	SDIO_SetPowerState
 222              		.thumb
 223              		.thumb_func
ARM GAS  /tmp/ccDT7MPS.s 			page 11


 224              		.type	SDIO_SetPowerState, %function
 225              	SDIO_SetPowerState:
 226              	.LFB114:
 340:stm32f4xx_sdio.c **** }
 341:stm32f4xx_sdio.c **** 
 342:stm32f4xx_sdio.c **** /**
 343:stm32f4xx_sdio.c ****   * @brief  Sets the power status of the controller.
 344:stm32f4xx_sdio.c ****   * @param  SDIO_PowerState: new state of the Power state. 
 345:stm32f4xx_sdio.c ****   *          This parameter can be one of the following values:
 346:stm32f4xx_sdio.c ****   *            @arg SDIO_PowerState_OFF: SDIO Power OFF
 347:stm32f4xx_sdio.c ****   *            @arg SDIO_PowerState_ON: SDIO Power ON
 348:stm32f4xx_sdio.c ****   * @retval None
 349:stm32f4xx_sdio.c ****   */
 350:stm32f4xx_sdio.c **** void SDIO_SetPowerState(uint32_t SDIO_PowerState)
 351:stm32f4xx_sdio.c **** {
 227              		.loc 1 351 0
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 0
 230              		@ frame_needed = 0, uses_anonymous_args = 0
 231              		@ link register save eliminated.
 232              	.LVL9:
 352:stm32f4xx_sdio.c ****   /* Check the parameters */
 353:stm32f4xx_sdio.c ****   assert_param(IS_SDIO_POWER_STATE(SDIO_PowerState));
 354:stm32f4xx_sdio.c ****   
 355:stm32f4xx_sdio.c ****   SDIO->POWER = SDIO_PowerState;
 233              		.loc 1 355 0
 234 0000 014B     		ldr	r3, .L10	@ tmp135,
 235 0002 1860     		str	r0, [r3, #0]	@ SDIO_PowerState, MEM[(struct SDIO_TypeDef *)1073818624B].POWER
 236 0004 7047     		bx	lr	@
 237              	.L11:
 238 0006 00BF     		.align	2
 239              	.L10:
 240 0008 002C0140 		.word	1073818624
 241              		.cfi_endproc
 242              	.LFE114:
 243              		.size	SDIO_SetPowerState, .-SDIO_SetPowerState
 244              		.section	.text.SDIO_GetPowerState,"ax",%progbits
 245              		.align	1
 246              		.global	SDIO_GetPowerState
 247              		.thumb
 248              		.thumb_func
 249              		.type	SDIO_GetPowerState, %function
 250              	SDIO_GetPowerState:
 251              	.LFB115:
 356:stm32f4xx_sdio.c **** }
 357:stm32f4xx_sdio.c **** 
 358:stm32f4xx_sdio.c **** /**
 359:stm32f4xx_sdio.c ****   * @brief  Gets the power status of the controller.
 360:stm32f4xx_sdio.c ****   * @param  None
 361:stm32f4xx_sdio.c ****   * @retval Power status of the controller. The returned value can be one of the 
 362:stm32f4xx_sdio.c ****   *         following values:
 363:stm32f4xx_sdio.c ****   *            - 0x00: Power OFF
 364:stm32f4xx_sdio.c ****   *            - 0x02: Power UP
 365:stm32f4xx_sdio.c ****   *            - 0x03: Power ON 
 366:stm32f4xx_sdio.c ****   */
 367:stm32f4xx_sdio.c **** uint32_t SDIO_GetPowerState(void)
 368:stm32f4xx_sdio.c **** {
ARM GAS  /tmp/ccDT7MPS.s 			page 12


 252              		.loc 1 368 0
 253              		.cfi_startproc
 254              		@ args = 0, pretend = 0, frame = 0
 255              		@ frame_needed = 0, uses_anonymous_args = 0
 256              		@ link register save eliminated.
 369:stm32f4xx_sdio.c ****   return (SDIO->POWER & (~PWR_PWRCTRL_MASK));
 257              		.loc 1 369 0
 258 0000 024B     		ldr	r3, .L13	@ tmp137,
 259 0002 1868     		ldr	r0, [r3, #0]	@ D.6093, MEM[(struct SDIO_TypeDef *)1073818624B].POWER
 370:stm32f4xx_sdio.c **** }
 260              		.loc 1 370 0
 261 0004 00F00300 		and	r0, r0, #3	@, D.6093,
 262 0008 7047     		bx	lr	@
 263              	.L14:
 264 000a 00BF     		.align	2
 265              	.L13:
 266 000c 002C0140 		.word	1073818624
 267              		.cfi_endproc
 268              	.LFE115:
 269              		.size	SDIO_GetPowerState, .-SDIO_GetPowerState
 270              		.section	.text.SDIO_SendCommand,"ax",%progbits
 271              		.align	1
 272              		.global	SDIO_SendCommand
 273              		.thumb
 274              		.thumb_func
 275              		.type	SDIO_SendCommand, %function
 276              	SDIO_SendCommand:
 277              	.LFB116:
 371:stm32f4xx_sdio.c **** 
 372:stm32f4xx_sdio.c **** /**
 373:stm32f4xx_sdio.c ****   * @}
 374:stm32f4xx_sdio.c ****   */
 375:stm32f4xx_sdio.c **** 
 376:stm32f4xx_sdio.c **** /** @defgroup SDIO_Group2 Command path state machine (CPSM) management functions
 377:stm32f4xx_sdio.c ****  *  @brief   Command path state machine (CPSM) management functions 
 378:stm32f4xx_sdio.c ****  *
 379:stm32f4xx_sdio.c **** @verbatim   
 380:stm32f4xx_sdio.c ****  ===============================================================================
 381:stm32f4xx_sdio.c ****         ##### Command path state machine (CPSM) management functions #####
 382:stm32f4xx_sdio.c ****  ===============================================================================  
 383:stm32f4xx_sdio.c **** 
 384:stm32f4xx_sdio.c ****   This section provide functions allowing to program and read the Command path 
 385:stm32f4xx_sdio.c ****   state machine (CPSM).
 386:stm32f4xx_sdio.c **** 
 387:stm32f4xx_sdio.c **** @endverbatim
 388:stm32f4xx_sdio.c ****   * @{
 389:stm32f4xx_sdio.c ****   */
 390:stm32f4xx_sdio.c **** 
 391:stm32f4xx_sdio.c **** /**
 392:stm32f4xx_sdio.c ****   * @brief  Initializes the SDIO Command according to the specified 
 393:stm32f4xx_sdio.c ****   *         parameters in the SDIO_CmdInitStruct and send the command.
 394:stm32f4xx_sdio.c ****   * @param  SDIO_CmdInitStruct : pointer to a SDIO_CmdInitTypeDef 
 395:stm32f4xx_sdio.c ****   *         structure that contains the configuration information for the SDIO 
 396:stm32f4xx_sdio.c ****   *         command.
 397:stm32f4xx_sdio.c ****   * @retval None
 398:stm32f4xx_sdio.c ****   */
 399:stm32f4xx_sdio.c **** void SDIO_SendCommand(SDIO_CmdInitTypeDef *SDIO_CmdInitStruct)
ARM GAS  /tmp/ccDT7MPS.s 			page 13


 400:stm32f4xx_sdio.c **** {
 278              		.loc 1 400 0
 279              		.cfi_startproc
 280              		@ args = 0, pretend = 0, frame = 0
 281              		@ frame_needed = 0, uses_anonymous_args = 0
 282              	.LVL10:
 401:stm32f4xx_sdio.c ****   uint32_t tmpreg = 0;
 402:stm32f4xx_sdio.c ****   
 403:stm32f4xx_sdio.c ****   /* Check the parameters */
 404:stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CMD_INDEX(SDIO_CmdInitStruct->SDIO_CmdIndex));
 405:stm32f4xx_sdio.c ****   assert_param(IS_SDIO_RESPONSE(SDIO_CmdInitStruct->SDIO_Response));
 406:stm32f4xx_sdio.c ****   assert_param(IS_SDIO_WAIT(SDIO_CmdInitStruct->SDIO_Wait));
 407:stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CPSM(SDIO_CmdInitStruct->SDIO_CPSM));
 408:stm32f4xx_sdio.c ****   
 409:stm32f4xx_sdio.c **** /*---------------------------- SDIO ARG Configuration ------------------------*/
 410:stm32f4xx_sdio.c ****   /* Set the SDIO Argument value */
 411:stm32f4xx_sdio.c ****   SDIO->ARG = SDIO_CmdInitStruct->SDIO_Argument;
 283              		.loc 1 411 0
 284 0000 0268     		ldr	r2, [r0, #0]	@ D.6083, SDIO_CmdInitStruct_3(D)->SDIO_Argument
 285 0002 094B     		ldr	r3, .L16	@ tmp146,
 400:stm32f4xx_sdio.c **** {
 286              		.loc 1 400 0
 287 0004 10B5     		push	{r4, lr}	@
 288              	.LCFI2:
 289              		.cfi_def_cfa_offset 8
 290              		.cfi_offset 4, -8
 291              		.cfi_offset 14, -4
 292              		.loc 1 411 0
 293 0006 9A60     		str	r2, [r3, #8]	@ D.6083, MEM[(struct SDIO_TypeDef *)1073818624B].ARG
 412:stm32f4xx_sdio.c ****   
 413:stm32f4xx_sdio.c **** /*---------------------------- SDIO CMD Configuration ------------------------*/  
 414:stm32f4xx_sdio.c ****   /* Get the SDIO CMD value */
 415:stm32f4xx_sdio.c ****   tmpreg = SDIO->CMD;
 294              		.loc 1 415 0
 295 0008 D968     		ldr	r1, [r3, #12]	@ tmpreg, MEM[(struct SDIO_TypeDef *)1073818624B].CMD
 296              	.LVL11:
 416:stm32f4xx_sdio.c ****   /* Clear CMDINDEX, WAITRESP, WAITINT, WAITPEND, CPSMEN bits */
 417:stm32f4xx_sdio.c ****   tmpreg &= CMD_CLEAR_MASK;
 297              		.loc 1 417 0
 298 000a 21F4FF64 		bic	r4, r1, #2040	@ tmpreg, tmpreg,
 299 000e 24F00702 		bic	r2, r4, #7	@ tmpreg, tmpreg,
 300              	.LVL12:
 418:stm32f4xx_sdio.c ****   /* Set CMDINDEX bits according to SDIO_CmdIndex value */
 419:stm32f4xx_sdio.c ****   /* Set WAITRESP bits according to SDIO_Response value */
 420:stm32f4xx_sdio.c ****   /* Set WAITINT and WAITPEND bits according to SDIO_Wait value */
 421:stm32f4xx_sdio.c ****   /* Set CPSMEN bits according to SDIO_CPSM value */
 422:stm32f4xx_sdio.c ****   tmpreg |= (uint32_t)SDIO_CmdInitStruct->SDIO_CmdIndex | SDIO_CmdInitStruct->SDIO_Response
 301              		.loc 1 422 0
 302 0012 4168     		ldr	r1, [r0, #4]	@ SDIO_CmdInitStruct_3(D)->SDIO_CmdIndex, SDIO_CmdInitStruct_3(D)->SDIO_CmdIndex
 303 0014 8468     		ldr	r4, [r0, #8]	@ SDIO_CmdInitStruct_3(D)->SDIO_Response, SDIO_CmdInitStruct_3(D)->SDIO_Response
 304 0016 0C43     		orrs	r4, r4, r1	@, tmp149, SDIO_CmdInitStruct_3(D)->SDIO_Response, SDIO_CmdInitStruct_3(D)->SDIO_C
 423:stm32f4xx_sdio.c ****            | SDIO_CmdInitStruct->SDIO_Wait | SDIO_CmdInitStruct->SDIO_CPSM;
 305              		.loc 1 423 0
 306 0018 C168     		ldr	r1, [r0, #12]	@ SDIO_CmdInitStruct_3(D)->SDIO_Wait, SDIO_CmdInitStruct_3(D)->SDIO_Wait
 307 001a 0069     		ldr	r0, [r0, #16]	@ SDIO_CmdInitStruct_3(D)->SDIO_CPSM, SDIO_CmdInitStruct_3(D)->SDIO_CPSM
 308              	.LVL13:
 309 001c 2143     		orrs	r1, r1, r4	@, tmp152, SDIO_CmdInitStruct_3(D)->SDIO_Wait, tmp149
ARM GAS  /tmp/ccDT7MPS.s 			page 14


 310 001e 0143     		orrs	r1, r1, r0	@, tmp154, tmp152, SDIO_CmdInitStruct_3(D)->SDIO_CPSM
 422:stm32f4xx_sdio.c ****   tmpreg |= (uint32_t)SDIO_CmdInitStruct->SDIO_CmdIndex | SDIO_CmdInitStruct->SDIO_Response
 311              		.loc 1 422 0
 312 0020 0A43     		orrs	r2, r2, r1	@, tmpreg, tmpreg, tmp154
 313              	.LVL14:
 424:stm32f4xx_sdio.c ****   
 425:stm32f4xx_sdio.c ****   /* Write to SDIO CMD */
 426:stm32f4xx_sdio.c ****   SDIO->CMD = tmpreg;
 314              		.loc 1 426 0
 315 0022 DA60     		str	r2, [r3, #12]	@ tmpreg, MEM[(struct SDIO_TypeDef *)1073818624B].CMD
 316 0024 10BD     		pop	{r4, pc}	@
 317              	.L17:
 318 0026 00BF     		.align	2
 319              	.L16:
 320 0028 002C0140 		.word	1073818624
 321              		.cfi_endproc
 322              	.LFE116:
 323              		.size	SDIO_SendCommand, .-SDIO_SendCommand
 324              		.section	.text.SDIO_CmdStructInit,"ax",%progbits
 325              		.align	1
 326              		.global	SDIO_CmdStructInit
 327              		.thumb
 328              		.thumb_func
 329              		.type	SDIO_CmdStructInit, %function
 330              	SDIO_CmdStructInit:
 331              	.LFB117:
 427:stm32f4xx_sdio.c **** }
 428:stm32f4xx_sdio.c **** 
 429:stm32f4xx_sdio.c **** /**
 430:stm32f4xx_sdio.c ****   * @brief  Fills each SDIO_CmdInitStruct member with its default value.
 431:stm32f4xx_sdio.c ****   * @param  SDIO_CmdInitStruct: pointer to an SDIO_CmdInitTypeDef 
 432:stm32f4xx_sdio.c ****   *         structure which will be initialized.
 433:stm32f4xx_sdio.c ****   * @retval None
 434:stm32f4xx_sdio.c ****   */
 435:stm32f4xx_sdio.c **** void SDIO_CmdStructInit(SDIO_CmdInitTypeDef* SDIO_CmdInitStruct)
 436:stm32f4xx_sdio.c **** {
 332              		.loc 1 436 0
 333              		.cfi_startproc
 334              		@ args = 0, pretend = 0, frame = 0
 335              		@ frame_needed = 0, uses_anonymous_args = 0
 336              		@ link register save eliminated.
 337              	.LVL15:
 437:stm32f4xx_sdio.c ****   /* SDIO_CmdInitStruct members default value */
 438:stm32f4xx_sdio.c ****   SDIO_CmdInitStruct->SDIO_Argument = 0x00;
 338              		.loc 1 438 0
 339 0000 0023     		movs	r3, #0	@ tmp135,
 340 0002 0360     		str	r3, [r0, #0]	@ tmp135, SDIO_CmdInitStruct_1(D)->SDIO_Argument
 439:stm32f4xx_sdio.c ****   SDIO_CmdInitStruct->SDIO_CmdIndex = 0x00;
 341              		.loc 1 439 0
 342 0004 4360     		str	r3, [r0, #4]	@ tmp135, SDIO_CmdInitStruct_1(D)->SDIO_CmdIndex
 440:stm32f4xx_sdio.c ****   SDIO_CmdInitStruct->SDIO_Response = SDIO_Response_No;
 343              		.loc 1 440 0
 344 0006 8360     		str	r3, [r0, #8]	@ tmp135, SDIO_CmdInitStruct_1(D)->SDIO_Response
 441:stm32f4xx_sdio.c ****   SDIO_CmdInitStruct->SDIO_Wait = SDIO_Wait_No;
 345              		.loc 1 441 0
 346 0008 C360     		str	r3, [r0, #12]	@ tmp135, SDIO_CmdInitStruct_1(D)->SDIO_Wait
 442:stm32f4xx_sdio.c ****   SDIO_CmdInitStruct->SDIO_CPSM = SDIO_CPSM_Disable;
ARM GAS  /tmp/ccDT7MPS.s 			page 15


 347              		.loc 1 442 0
 348 000a 0361     		str	r3, [r0, #16]	@ tmp135, SDIO_CmdInitStruct_1(D)->SDIO_CPSM
 349 000c 7047     		bx	lr	@
 350              		.cfi_endproc
 351              	.LFE117:
 352              		.size	SDIO_CmdStructInit, .-SDIO_CmdStructInit
 353              		.section	.text.SDIO_GetCommandResponse,"ax",%progbits
 354              		.align	1
 355              		.global	SDIO_GetCommandResponse
 356              		.thumb
 357              		.thumb_func
 358              		.type	SDIO_GetCommandResponse, %function
 359              	SDIO_GetCommandResponse:
 360              	.LFB118:
 443:stm32f4xx_sdio.c **** }
 444:stm32f4xx_sdio.c **** 
 445:stm32f4xx_sdio.c **** /**
 446:stm32f4xx_sdio.c ****   * @brief  Returns command index of last command for which response received.
 447:stm32f4xx_sdio.c ****   * @param  None
 448:stm32f4xx_sdio.c ****   * @retval Returns the command index of the last command response received.
 449:stm32f4xx_sdio.c ****   */
 450:stm32f4xx_sdio.c **** uint8_t SDIO_GetCommandResponse(void)
 451:stm32f4xx_sdio.c **** {
 361              		.loc 1 451 0
 362              		.cfi_startproc
 363              		@ args = 0, pretend = 0, frame = 0
 364              		@ frame_needed = 0, uses_anonymous_args = 0
 365              		@ link register save eliminated.
 452:stm32f4xx_sdio.c ****   return (uint8_t)(SDIO->RESPCMD);
 366              		.loc 1 452 0
 367 0000 014B     		ldr	r3, .L20	@ tmp137,
 368 0002 1869     		ldr	r0, [r3, #16]	@ D.6080, MEM[(struct SDIO_TypeDef *)1073818624B].RESPCMD
 453:stm32f4xx_sdio.c **** }
 369              		.loc 1 453 0
 370 0004 C0B2     		uxtb	r0, r0	@, D.6080
 371 0006 7047     		bx	lr	@
 372              	.L21:
 373              		.align	2
 374              	.L20:
 375 0008 002C0140 		.word	1073818624
 376              		.cfi_endproc
 377              	.LFE118:
 378              		.size	SDIO_GetCommandResponse, .-SDIO_GetCommandResponse
 379              		.section	.text.SDIO_GetResponse,"ax",%progbits
 380              		.align	1
 381              		.global	SDIO_GetResponse
 382              		.thumb
 383              		.thumb_func
 384              		.type	SDIO_GetResponse, %function
 385              	SDIO_GetResponse:
 386              	.LFB119:
 454:stm32f4xx_sdio.c **** 
 455:stm32f4xx_sdio.c **** /**
 456:stm32f4xx_sdio.c ****   * @brief  Returns response received from the card for the last command.
 457:stm32f4xx_sdio.c ****   * @param  SDIO_RESP: Specifies the SDIO response register. 
 458:stm32f4xx_sdio.c ****   *          This parameter can be one of the following values:
 459:stm32f4xx_sdio.c ****   *            @arg SDIO_RESP1: Response Register 1
ARM GAS  /tmp/ccDT7MPS.s 			page 16


 460:stm32f4xx_sdio.c ****   *            @arg SDIO_RESP2: Response Register 2
 461:stm32f4xx_sdio.c ****   *            @arg SDIO_RESP3: Response Register 3
 462:stm32f4xx_sdio.c ****   *            @arg SDIO_RESP4: Response Register 4
 463:stm32f4xx_sdio.c ****   * @retval The Corresponding response register value.
 464:stm32f4xx_sdio.c ****   */
 465:stm32f4xx_sdio.c **** uint32_t SDIO_GetResponse(uint32_t SDIO_RESP)
 466:stm32f4xx_sdio.c **** {
 387              		.loc 1 466 0
 388              		.cfi_startproc
 389              		@ args = 0, pretend = 0, frame = 8
 390              		@ frame_needed = 0, uses_anonymous_args = 0
 391              		@ link register save eliminated.
 392              	.LVL16:
 467:stm32f4xx_sdio.c ****   __IO uint32_t tmp = 0;
 468:stm32f4xx_sdio.c **** 
 469:stm32f4xx_sdio.c ****   /* Check the parameters */
 470:stm32f4xx_sdio.c ****   assert_param(IS_SDIO_RESP(SDIO_RESP));
 471:stm32f4xx_sdio.c **** 
 472:stm32f4xx_sdio.c ****   tmp = SDIO_RESP_ADDR + SDIO_RESP;
 393              		.loc 1 472 0
 394 0000 0449     		ldr	r1, .L23	@ tmp.0,
 395              	.LVL17:
 466:stm32f4xx_sdio.c **** {
 396              		.loc 1 466 0
 397 0002 82B0     		sub	sp, sp, #8	@,,
 398              	.LCFI3:
 399              		.cfi_def_cfa_offset 8
 400              		.loc 1 472 0
 401 0004 4018     		adds	r0, r0, r1	@ tmp.0, SDIO_RESP, tmp.0
 402              	.LVL18:
 467:stm32f4xx_sdio.c ****   __IO uint32_t tmp = 0;
 403              		.loc 1 467 0
 404 0006 0023     		movs	r3, #0	@ tmp140,
 405 0008 0193     		str	r3, [sp, #4]	@ tmp140, tmp
 406              	.LVL19:
 407              		.loc 1 472 0
 408 000a 0190     		str	r0, [sp, #4]	@ tmp.0, tmp
 473:stm32f4xx_sdio.c ****   
 474:stm32f4xx_sdio.c ****   return (*(__IO uint32_t *) tmp); 
 409              		.loc 1 474 0
 410 000c 019A     		ldr	r2, [sp, #4]	@ tmp.1, tmp
 411 000e 1068     		ldr	r0, [r2, #0]	@ D.6074, *tmp.2_4
 412              	.LVL20:
 475:stm32f4xx_sdio.c **** }
 413              		.loc 1 475 0
 414 0010 02B0     		add	sp, sp, #8	@,,
 415 0012 7047     		bx	lr
 416              	.L24:
 417              		.align	2
 418              	.L23:
 419 0014 142C0140 		.word	1073818644
 420              		.cfi_endproc
 421              	.LFE119:
 422              		.size	SDIO_GetResponse, .-SDIO_GetResponse
 423              		.section	.text.SDIO_DataConfig,"ax",%progbits
 424              		.align	1
 425              		.global	SDIO_DataConfig
ARM GAS  /tmp/ccDT7MPS.s 			page 17


 426              		.thumb
 427              		.thumb_func
 428              		.type	SDIO_DataConfig, %function
 429              	SDIO_DataConfig:
 430              	.LFB120:
 476:stm32f4xx_sdio.c **** 
 477:stm32f4xx_sdio.c **** /**
 478:stm32f4xx_sdio.c ****   * @}
 479:stm32f4xx_sdio.c ****   */
 480:stm32f4xx_sdio.c **** 
 481:stm32f4xx_sdio.c **** /** @defgroup SDIO_Group3 Data path state machine (DPSM) management functions
 482:stm32f4xx_sdio.c ****  *  @brief   Data path state machine (DPSM) management functions
 483:stm32f4xx_sdio.c ****  *
 484:stm32f4xx_sdio.c **** @verbatim   
 485:stm32f4xx_sdio.c ****  ===============================================================================
 486:stm32f4xx_sdio.c ****          ##### Data path state machine (DPSM) management functions #####
 487:stm32f4xx_sdio.c ****  ===============================================================================  
 488:stm32f4xx_sdio.c **** 
 489:stm32f4xx_sdio.c ****   This section provide functions allowing to program and read the Data path 
 490:stm32f4xx_sdio.c ****   state machine (DPSM).
 491:stm32f4xx_sdio.c **** 
 492:stm32f4xx_sdio.c **** @endverbatim
 493:stm32f4xx_sdio.c ****   * @{
 494:stm32f4xx_sdio.c ****   */
 495:stm32f4xx_sdio.c **** 
 496:stm32f4xx_sdio.c **** /**
 497:stm32f4xx_sdio.c ****   * @brief  Initializes the SDIO data path according to the specified 
 498:stm32f4xx_sdio.c ****   *         parameters in the SDIO_DataInitStruct.
 499:stm32f4xx_sdio.c ****   * @param  SDIO_DataInitStruct : pointer to a SDIO_DataInitTypeDef structure 
 500:stm32f4xx_sdio.c ****   *         that contains the configuration information for the SDIO command.
 501:stm32f4xx_sdio.c ****   * @retval None
 502:stm32f4xx_sdio.c ****   */
 503:stm32f4xx_sdio.c **** void SDIO_DataConfig(SDIO_DataInitTypeDef* SDIO_DataInitStruct)
 504:stm32f4xx_sdio.c **** {
 431              		.loc 1 504 0
 432              		.cfi_startproc
 433              		@ args = 0, pretend = 0, frame = 0
 434              		@ frame_needed = 0, uses_anonymous_args = 0
 435              	.LVL21:
 505:stm32f4xx_sdio.c ****   uint32_t tmpreg = 0;
 506:stm32f4xx_sdio.c ****   
 507:stm32f4xx_sdio.c ****   /* Check the parameters */
 508:stm32f4xx_sdio.c ****   assert_param(IS_SDIO_DATA_LENGTH(SDIO_DataInitStruct->SDIO_DataLength));
 509:stm32f4xx_sdio.c ****   assert_param(IS_SDIO_BLOCK_SIZE(SDIO_DataInitStruct->SDIO_DataBlockSize));
 510:stm32f4xx_sdio.c ****   assert_param(IS_SDIO_TRANSFER_DIR(SDIO_DataInitStruct->SDIO_TransferDir));
 511:stm32f4xx_sdio.c ****   assert_param(IS_SDIO_TRANSFER_MODE(SDIO_DataInitStruct->SDIO_TransferMode));
 512:stm32f4xx_sdio.c ****   assert_param(IS_SDIO_DPSM(SDIO_DataInitStruct->SDIO_DPSM));
 513:stm32f4xx_sdio.c **** 
 514:stm32f4xx_sdio.c **** /*---------------------------- SDIO DTIMER Configuration ---------------------*/
 515:stm32f4xx_sdio.c ****   /* Set the SDIO Data TimeOut value */
 516:stm32f4xx_sdio.c ****   SDIO->DTIMER = SDIO_DataInitStruct->SDIO_DataTimeOut;
 436              		.loc 1 516 0
 437 0000 0268     		ldr	r2, [r0, #0]	@ D.6064, SDIO_DataInitStruct_3(D)->SDIO_DataTimeOut
 438 0002 094B     		ldr	r3, .L26	@ tmp147,
 504:stm32f4xx_sdio.c **** {
 439              		.loc 1 504 0
 440 0004 10B5     		push	{r4, lr}	@
ARM GAS  /tmp/ccDT7MPS.s 			page 18


 441              	.LCFI4:
 442              		.cfi_def_cfa_offset 8
 443              		.cfi_offset 4, -8
 444              		.cfi_offset 14, -4
 445              		.loc 1 516 0
 446 0006 5A62     		str	r2, [r3, #36]	@ D.6064, MEM[(struct SDIO_TypeDef *)1073818624B].DTIMER
 517:stm32f4xx_sdio.c **** 
 518:stm32f4xx_sdio.c **** /*---------------------------- SDIO DLEN Configuration -----------------------*/
 519:stm32f4xx_sdio.c ****   /* Set the SDIO DataLength value */
 520:stm32f4xx_sdio.c ****   SDIO->DLEN = SDIO_DataInitStruct->SDIO_DataLength;
 447              		.loc 1 520 0
 448 0008 4168     		ldr	r1, [r0, #4]	@ D.6065, SDIO_DataInitStruct_3(D)->SDIO_DataLength
 449 000a 9962     		str	r1, [r3, #40]	@ D.6065, MEM[(struct SDIO_TypeDef *)1073818624B].DLEN
 521:stm32f4xx_sdio.c **** 
 522:stm32f4xx_sdio.c **** /*---------------------------- SDIO DCTRL Configuration ----------------------*/  
 523:stm32f4xx_sdio.c ****   /* Get the SDIO DCTRL value */
 524:stm32f4xx_sdio.c ****   tmpreg = SDIO->DCTRL;
 525:stm32f4xx_sdio.c ****   /* Clear DEN, DTMODE, DTDIR and DBCKSIZE bits */
 526:stm32f4xx_sdio.c ****   tmpreg &= DCTRL_CLEAR_MASK;
 527:stm32f4xx_sdio.c ****   /* Set DEN bit according to SDIO_DPSM value */
 528:stm32f4xx_sdio.c ****   /* Set DTMODE bit according to SDIO_TransferMode value */
 529:stm32f4xx_sdio.c ****   /* Set DTDIR bit according to SDIO_TransferDir value */
 530:stm32f4xx_sdio.c ****   /* Set DBCKSIZE bits according to SDIO_DataBlockSize value */
 531:stm32f4xx_sdio.c ****   tmpreg |= (uint32_t)SDIO_DataInitStruct->SDIO_DataBlockSize | SDIO_DataInitStruct->SDIO_TransferD
 450              		.loc 1 531 0
 451 000c C268     		ldr	r2, [r0, #12]	@ SDIO_DataInitStruct_3(D)->SDIO_TransferDir, SDIO_DataInitStruct_3(D)->SDIO_Tra
 452 000e 8168     		ldr	r1, [r0, #8]	@ SDIO_DataInitStruct_3(D)->SDIO_DataBlockSize, SDIO_DataInitStruct_3(D)->SDIO_Da
 524:stm32f4xx_sdio.c ****   tmpreg = SDIO->DCTRL;
 453              		.loc 1 524 0
 454 0010 DC6A     		ldr	r4, [r3, #44]	@ tmpreg, MEM[(struct SDIO_TypeDef *)1073818624B].DCTRL
 455              	.LVL22:
 456              		.loc 1 531 0
 457 0012 1143     		orrs	r1, r1, r2	@, tmp150, SDIO_DataInitStruct_3(D)->SDIO_DataBlockSize, SDIO_DataInitStruct_3(D)-
 532:stm32f4xx_sdio.c ****            | SDIO_DataInitStruct->SDIO_TransferMode | SDIO_DataInitStruct->SDIO_DPSM;
 458              		.loc 1 532 0
 459 0014 0269     		ldr	r2, [r0, #16]	@ SDIO_DataInitStruct_3(D)->SDIO_TransferMode, SDIO_DataInitStruct_3(D)->SDIO_Tr
 460 0016 4069     		ldr	r0, [r0, #20]	@ SDIO_DataInitStruct_3(D)->SDIO_DPSM, SDIO_DataInitStruct_3(D)->SDIO_DPSM
 461              	.LVL23:
 462 0018 1143     		orrs	r1, r1, r2	@, tmp153, tmp150, SDIO_DataInitStruct_3(D)->SDIO_TransferMode
 526:stm32f4xx_sdio.c ****   tmpreg &= DCTRL_CLEAR_MASK;
 463              		.loc 1 526 0
 464 001a 24F0F704 		bic	r4, r4, #247	@ tmpreg, tmpreg,
 465              	.LVL24:
 466              		.loc 1 532 0
 467 001e 0143     		orrs	r1, r1, r0	@, tmp155, tmp153, SDIO_DataInitStruct_3(D)->SDIO_DPSM
 531:stm32f4xx_sdio.c ****   tmpreg |= (uint32_t)SDIO_DataInitStruct->SDIO_DataBlockSize | SDIO_DataInitStruct->SDIO_TransferD
 468              		.loc 1 531 0
 469 0020 2143     		orrs	r1, r1, r4	@, tmpreg, tmp155, tmpreg
 470              	.LVL25:
 533:stm32f4xx_sdio.c **** 
 534:stm32f4xx_sdio.c ****   /* Write to SDIO DCTRL */
 535:stm32f4xx_sdio.c ****   SDIO->DCTRL = tmpreg;
 471              		.loc 1 535 0
 472 0022 D962     		str	r1, [r3, #44]	@ tmpreg, MEM[(struct SDIO_TypeDef *)1073818624B].DCTRL
 473 0024 10BD     		pop	{r4, pc}	@
 474              	.L27:
 475 0026 00BF     		.align	2
ARM GAS  /tmp/ccDT7MPS.s 			page 19


 476              	.L26:
 477 0028 002C0140 		.word	1073818624
 478              		.cfi_endproc
 479              	.LFE120:
 480              		.size	SDIO_DataConfig, .-SDIO_DataConfig
 481              		.section	.text.SDIO_DataStructInit,"ax",%progbits
 482              		.align	1
 483              		.global	SDIO_DataStructInit
 484              		.thumb
 485              		.thumb_func
 486              		.type	SDIO_DataStructInit, %function
 487              	SDIO_DataStructInit:
 488              	.LFB121:
 536:stm32f4xx_sdio.c **** }
 537:stm32f4xx_sdio.c **** 
 538:stm32f4xx_sdio.c **** /**
 539:stm32f4xx_sdio.c ****   * @brief  Fills each SDIO_DataInitStruct member with its default value.
 540:stm32f4xx_sdio.c ****   * @param  SDIO_DataInitStruct: pointer to an SDIO_DataInitTypeDef structure 
 541:stm32f4xx_sdio.c ****   *         which will be initialized.
 542:stm32f4xx_sdio.c ****   * @retval None
 543:stm32f4xx_sdio.c ****   */
 544:stm32f4xx_sdio.c **** void SDIO_DataStructInit(SDIO_DataInitTypeDef* SDIO_DataInitStruct)
 545:stm32f4xx_sdio.c **** {
 489              		.loc 1 545 0
 490              		.cfi_startproc
 491              		@ args = 0, pretend = 0, frame = 0
 492              		@ frame_needed = 0, uses_anonymous_args = 0
 493              		@ link register save eliminated.
 494              	.LVL26:
 546:stm32f4xx_sdio.c ****   /* SDIO_DataInitStruct members default value */
 547:stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_DataTimeOut = 0xFFFFFFFF;
 548:stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_DataLength = 0x00;
 495              		.loc 1 548 0
 496 0000 0021     		movs	r1, #0	@ tmp136,
 547:stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_DataTimeOut = 0xFFFFFFFF;
 497              		.loc 1 547 0
 498 0002 4FF0FF33 		mov	r3, #-1	@ tmp135,
 499 0006 0360     		str	r3, [r0, #0]	@ tmp135, SDIO_DataInitStruct_1(D)->SDIO_DataTimeOut
 500              		.loc 1 548 0
 501 0008 4160     		str	r1, [r0, #4]	@ tmp136, SDIO_DataInitStruct_1(D)->SDIO_DataLength
 549:stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_DataBlockSize = SDIO_DataBlockSize_1b;
 502              		.loc 1 549 0
 503 000a 8160     		str	r1, [r0, #8]	@ tmp136, SDIO_DataInitStruct_1(D)->SDIO_DataBlockSize
 550:stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_TransferDir = SDIO_TransferDir_ToCard;
 504              		.loc 1 550 0
 505 000c C160     		str	r1, [r0, #12]	@ tmp136, SDIO_DataInitStruct_1(D)->SDIO_TransferDir
 551:stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_TransferMode = SDIO_TransferMode_Block;  
 506              		.loc 1 551 0
 507 000e 0161     		str	r1, [r0, #16]	@ tmp136, SDIO_DataInitStruct_1(D)->SDIO_TransferMode
 552:stm32f4xx_sdio.c ****   SDIO_DataInitStruct->SDIO_DPSM = SDIO_DPSM_Disable;
 508              		.loc 1 552 0
 509 0010 4161     		str	r1, [r0, #20]	@ tmp136, SDIO_DataInitStruct_1(D)->SDIO_DPSM
 510 0012 7047     		bx	lr	@
 511              		.cfi_endproc
 512              	.LFE121:
 513              		.size	SDIO_DataStructInit, .-SDIO_DataStructInit
 514              		.section	.text.SDIO_GetDataCounter,"ax",%progbits
ARM GAS  /tmp/ccDT7MPS.s 			page 20


 515              		.align	1
 516              		.global	SDIO_GetDataCounter
 517              		.thumb
 518              		.thumb_func
 519              		.type	SDIO_GetDataCounter, %function
 520              	SDIO_GetDataCounter:
 521              	.LFB122:
 553:stm32f4xx_sdio.c **** }
 554:stm32f4xx_sdio.c **** 
 555:stm32f4xx_sdio.c **** /**
 556:stm32f4xx_sdio.c ****   * @brief  Returns number of remaining data bytes to be transferred.
 557:stm32f4xx_sdio.c ****   * @param  None
 558:stm32f4xx_sdio.c ****   * @retval Number of remaining data bytes to be transferred
 559:stm32f4xx_sdio.c ****   */
 560:stm32f4xx_sdio.c **** uint32_t SDIO_GetDataCounter(void)
 561:stm32f4xx_sdio.c **** { 
 522              		.loc 1 561 0
 523              		.cfi_startproc
 524              		@ args = 0, pretend = 0, frame = 0
 525              		@ frame_needed = 0, uses_anonymous_args = 0
 526              		@ link register save eliminated.
 562:stm32f4xx_sdio.c ****   return SDIO->DCOUNT;
 527              		.loc 1 562 0
 528 0000 014B     		ldr	r3, .L30	@ tmp136,
 529 0002 186B     		ldr	r0, [r3, #48]	@ D.6060, MEM[(struct SDIO_TypeDef *)1073818624B].DCOUNT
 563:stm32f4xx_sdio.c **** }
 530              		.loc 1 563 0
 531 0004 7047     		bx	lr	@
 532              	.L31:
 533 0006 00BF     		.align	2
 534              	.L30:
 535 0008 002C0140 		.word	1073818624
 536              		.cfi_endproc
 537              	.LFE122:
 538              		.size	SDIO_GetDataCounter, .-SDIO_GetDataCounter
 539              		.section	.text.SDIO_ReadData,"ax",%progbits
 540              		.align	1
 541              		.global	SDIO_ReadData
 542              		.thumb
 543              		.thumb_func
 544              		.type	SDIO_ReadData, %function
 545              	SDIO_ReadData:
 546              	.LFB123:
 564:stm32f4xx_sdio.c **** 
 565:stm32f4xx_sdio.c **** /**
 566:stm32f4xx_sdio.c ****   * @brief  Read one data word from Rx FIFO.
 567:stm32f4xx_sdio.c ****   * @param  None
 568:stm32f4xx_sdio.c ****   * @retval Data received
 569:stm32f4xx_sdio.c ****   */
 570:stm32f4xx_sdio.c **** uint32_t SDIO_ReadData(void)
 571:stm32f4xx_sdio.c **** { 
 547              		.loc 1 571 0
 548              		.cfi_startproc
 549              		@ args = 0, pretend = 0, frame = 0
 550              		@ frame_needed = 0, uses_anonymous_args = 0
 551              		@ link register save eliminated.
 572:stm32f4xx_sdio.c ****   return SDIO->FIFO;
ARM GAS  /tmp/ccDT7MPS.s 			page 21


 552              		.loc 1 572 0
 553 0000 014B     		ldr	r3, .L33	@ tmp136,
 554 0002 D3F88000 		ldr	r0, [r3, #128]	@ D.6057, MEM[(struct SDIO_TypeDef *)1073818624B].FIFO
 573:stm32f4xx_sdio.c **** }
 555              		.loc 1 573 0
 556 0006 7047     		bx	lr	@
 557              	.L34:
 558              		.align	2
 559              	.L33:
 560 0008 002C0140 		.word	1073818624
 561              		.cfi_endproc
 562              	.LFE123:
 563              		.size	SDIO_ReadData, .-SDIO_ReadData
 564              		.section	.text.SDIO_WriteData,"ax",%progbits
 565              		.align	1
 566              		.global	SDIO_WriteData
 567              		.thumb
 568              		.thumb_func
 569              		.type	SDIO_WriteData, %function
 570              	SDIO_WriteData:
 571              	.LFB124:
 574:stm32f4xx_sdio.c **** 
 575:stm32f4xx_sdio.c **** /**
 576:stm32f4xx_sdio.c ****   * @brief  Write one data word to Tx FIFO.
 577:stm32f4xx_sdio.c ****   * @param  Data: 32-bit data word to write.
 578:stm32f4xx_sdio.c ****   * @retval None
 579:stm32f4xx_sdio.c ****   */
 580:stm32f4xx_sdio.c **** void SDIO_WriteData(uint32_t Data)
 581:stm32f4xx_sdio.c **** { 
 572              		.loc 1 581 0
 573              		.cfi_startproc
 574              		@ args = 0, pretend = 0, frame = 0
 575              		@ frame_needed = 0, uses_anonymous_args = 0
 576              		@ link register save eliminated.
 577              	.LVL27:
 582:stm32f4xx_sdio.c ****   SDIO->FIFO = Data;
 578              		.loc 1 582 0
 579 0000 014B     		ldr	r3, .L36	@ tmp135,
 580 0002 C3F88000 		str	r0, [r3, #128]	@ Data, MEM[(struct SDIO_TypeDef *)1073818624B].FIFO
 581 0006 7047     		bx	lr	@
 582              	.L37:
 583              		.align	2
 584              	.L36:
 585 0008 002C0140 		.word	1073818624
 586              		.cfi_endproc
 587              	.LFE124:
 588              		.size	SDIO_WriteData, .-SDIO_WriteData
 589              		.section	.text.SDIO_GetFIFOCount,"ax",%progbits
 590              		.align	1
 591              		.global	SDIO_GetFIFOCount
 592              		.thumb
 593              		.thumb_func
 594              		.type	SDIO_GetFIFOCount, %function
 595              	SDIO_GetFIFOCount:
 596              	.LFB125:
 583:stm32f4xx_sdio.c **** }
 584:stm32f4xx_sdio.c **** 
ARM GAS  /tmp/ccDT7MPS.s 			page 22


 585:stm32f4xx_sdio.c **** /**
 586:stm32f4xx_sdio.c ****   * @brief  Returns the number of words left to be written to or read from FIFO.	
 587:stm32f4xx_sdio.c ****   * @param  None
 588:stm32f4xx_sdio.c ****   * @retval Remaining number of words.
 589:stm32f4xx_sdio.c ****   */
 590:stm32f4xx_sdio.c **** uint32_t SDIO_GetFIFOCount(void)
 591:stm32f4xx_sdio.c **** { 
 597              		.loc 1 591 0
 598              		.cfi_startproc
 599              		@ args = 0, pretend = 0, frame = 0
 600              		@ frame_needed = 0, uses_anonymous_args = 0
 601              		@ link register save eliminated.
 592:stm32f4xx_sdio.c ****   return SDIO->FIFOCNT;
 602              		.loc 1 592 0
 603 0000 014B     		ldr	r3, .L39	@ tmp136,
 604 0002 986C     		ldr	r0, [r3, #72]	@ D.6053, MEM[(struct SDIO_TypeDef *)1073818624B].FIFOCNT
 593:stm32f4xx_sdio.c **** }
 605              		.loc 1 593 0
 606 0004 7047     		bx	lr	@
 607              	.L40:
 608 0006 00BF     		.align	2
 609              	.L39:
 610 0008 002C0140 		.word	1073818624
 611              		.cfi_endproc
 612              	.LFE125:
 613              		.size	SDIO_GetFIFOCount, .-SDIO_GetFIFOCount
 614              		.section	.text.SDIO_StartSDIOReadWait,"ax",%progbits
 615              		.align	1
 616              		.global	SDIO_StartSDIOReadWait
 617              		.thumb
 618              		.thumb_func
 619              		.type	SDIO_StartSDIOReadWait, %function
 620              	SDIO_StartSDIOReadWait:
 621              	.LFB126:
 594:stm32f4xx_sdio.c **** 
 595:stm32f4xx_sdio.c **** /**
 596:stm32f4xx_sdio.c ****   * @}
 597:stm32f4xx_sdio.c ****   */
 598:stm32f4xx_sdio.c **** 
 599:stm32f4xx_sdio.c **** /** @defgroup SDIO_Group4 SDIO IO Cards mode management functions
 600:stm32f4xx_sdio.c ****  *  @brief   SDIO IO Cards mode management functions
 601:stm32f4xx_sdio.c ****  *
 602:stm32f4xx_sdio.c **** @verbatim   
 603:stm32f4xx_sdio.c ****  ===============================================================================
 604:stm32f4xx_sdio.c ****                ##### SDIO IO Cards mode management functions #####
 605:stm32f4xx_sdio.c ****  ===============================================================================  
 606:stm32f4xx_sdio.c **** 
 607:stm32f4xx_sdio.c ****   This section provide functions allowing to program and read the SDIO IO Cards.
 608:stm32f4xx_sdio.c **** 
 609:stm32f4xx_sdio.c **** @endverbatim
 610:stm32f4xx_sdio.c ****   * @{
 611:stm32f4xx_sdio.c ****   */
 612:stm32f4xx_sdio.c **** 
 613:stm32f4xx_sdio.c **** /**
 614:stm32f4xx_sdio.c ****   * @brief  Starts the SD I/O Read Wait operation.	
 615:stm32f4xx_sdio.c ****   * @param  NewState: new state of the Start SDIO Read Wait operation. 
 616:stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
ARM GAS  /tmp/ccDT7MPS.s 			page 23


 617:stm32f4xx_sdio.c ****   * @retval None
 618:stm32f4xx_sdio.c ****   */
 619:stm32f4xx_sdio.c **** void SDIO_StartSDIOReadWait(FunctionalState NewState)
 620:stm32f4xx_sdio.c **** { 
 622              		.loc 1 620 0
 623              		.cfi_startproc
 624              		@ args = 0, pretend = 0, frame = 0
 625              		@ frame_needed = 0, uses_anonymous_args = 0
 626              		@ link register save eliminated.
 627              	.LVL28:
 621:stm32f4xx_sdio.c ****   /* Check the parameters */
 622:stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 623:stm32f4xx_sdio.c ****   
 624:stm32f4xx_sdio.c ****   *(__IO uint32_t *) DCTRL_RWSTART_BB = (uint32_t) NewState;
 628              		.loc 1 624 0
 629 0000 014B     		ldr	r3, .L42	@ tmp136,
 630 0002 1860     		str	r0, [r3, #0]	@ NewState, MEM[(volatile uint32_t *)1109755296B]
 631 0004 7047     		bx	lr	@
 632              	.L43:
 633 0006 00BF     		.align	2
 634              	.L42:
 635 0008 A0852542 		.word	1109755296
 636              		.cfi_endproc
 637              	.LFE126:
 638              		.size	SDIO_StartSDIOReadWait, .-SDIO_StartSDIOReadWait
 639              		.section	.text.SDIO_StopSDIOReadWait,"ax",%progbits
 640              		.align	1
 641              		.global	SDIO_StopSDIOReadWait
 642              		.thumb
 643              		.thumb_func
 644              		.type	SDIO_StopSDIOReadWait, %function
 645              	SDIO_StopSDIOReadWait:
 646              	.LFB127:
 625:stm32f4xx_sdio.c **** }
 626:stm32f4xx_sdio.c **** 
 627:stm32f4xx_sdio.c **** /**
 628:stm32f4xx_sdio.c ****   * @brief  Stops the SD I/O Read Wait operation.	
 629:stm32f4xx_sdio.c ****   * @param  NewState: new state of the Stop SDIO Read Wait operation. 
 630:stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 631:stm32f4xx_sdio.c ****   * @retval None
 632:stm32f4xx_sdio.c ****   */
 633:stm32f4xx_sdio.c **** void SDIO_StopSDIOReadWait(FunctionalState NewState)
 634:stm32f4xx_sdio.c **** { 
 647              		.loc 1 634 0
 648              		.cfi_startproc
 649              		@ args = 0, pretend = 0, frame = 0
 650              		@ frame_needed = 0, uses_anonymous_args = 0
 651              		@ link register save eliminated.
 652              	.LVL29:
 635:stm32f4xx_sdio.c ****   /* Check the parameters */
 636:stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 637:stm32f4xx_sdio.c ****   
 638:stm32f4xx_sdio.c ****   *(__IO uint32_t *) DCTRL_RWSTOP_BB = (uint32_t) NewState;
 653              		.loc 1 638 0
 654 0000 014B     		ldr	r3, .L45	@ tmp136,
 655 0002 1860     		str	r0, [r3, #0]	@ NewState, MEM[(volatile uint32_t *)1109755300B]
 656 0004 7047     		bx	lr	@
ARM GAS  /tmp/ccDT7MPS.s 			page 24


 657              	.L46:
 658 0006 00BF     		.align	2
 659              	.L45:
 660 0008 A4852542 		.word	1109755300
 661              		.cfi_endproc
 662              	.LFE127:
 663              		.size	SDIO_StopSDIOReadWait, .-SDIO_StopSDIOReadWait
 664              		.section	.text.SDIO_SetSDIOReadWaitMode,"ax",%progbits
 665              		.align	1
 666              		.global	SDIO_SetSDIOReadWaitMode
 667              		.thumb
 668              		.thumb_func
 669              		.type	SDIO_SetSDIOReadWaitMode, %function
 670              	SDIO_SetSDIOReadWaitMode:
 671              	.LFB128:
 639:stm32f4xx_sdio.c **** }
 640:stm32f4xx_sdio.c **** 
 641:stm32f4xx_sdio.c **** /**
 642:stm32f4xx_sdio.c ****   * @brief  Sets one of the two options of inserting read wait interval.
 643:stm32f4xx_sdio.c ****   * @param  SDIO_ReadWaitMode: SD I/O Read Wait operation mode.
 644:stm32f4xx_sdio.c ****   *          This parameter can be:
 645:stm32f4xx_sdio.c ****   *            @arg SDIO_ReadWaitMode_CLK: Read Wait control by stopping SDIOCLK
 646:stm32f4xx_sdio.c ****   *            @arg SDIO_ReadWaitMode_DATA2: Read Wait control using SDIO_DATA2
 647:stm32f4xx_sdio.c ****   * @retval None
 648:stm32f4xx_sdio.c ****   */
 649:stm32f4xx_sdio.c **** void SDIO_SetSDIOReadWaitMode(uint32_t SDIO_ReadWaitMode)
 650:stm32f4xx_sdio.c **** {
 672              		.loc 1 650 0
 673              		.cfi_startproc
 674              		@ args = 0, pretend = 0, frame = 0
 675              		@ frame_needed = 0, uses_anonymous_args = 0
 676              		@ link register save eliminated.
 677              	.LVL30:
 651:stm32f4xx_sdio.c ****   /* Check the parameters */
 652:stm32f4xx_sdio.c ****   assert_param(IS_SDIO_READWAIT_MODE(SDIO_ReadWaitMode));
 653:stm32f4xx_sdio.c ****   
 654:stm32f4xx_sdio.c ****   *(__IO uint32_t *) DCTRL_RWMOD_BB = SDIO_ReadWaitMode;
 678              		.loc 1 654 0
 679 0000 014B     		ldr	r3, .L48	@ tmp135,
 680 0002 1860     		str	r0, [r3, #0]	@ SDIO_ReadWaitMode, MEM[(volatile uint32_t *)1109755304B]
 681 0004 7047     		bx	lr	@
 682              	.L49:
 683 0006 00BF     		.align	2
 684              	.L48:
 685 0008 A8852542 		.word	1109755304
 686              		.cfi_endproc
 687              	.LFE128:
 688              		.size	SDIO_SetSDIOReadWaitMode, .-SDIO_SetSDIOReadWaitMode
 689              		.section	.text.SDIO_SetSDIOOperation,"ax",%progbits
 690              		.align	1
 691              		.global	SDIO_SetSDIOOperation
 692              		.thumb
 693              		.thumb_func
 694              		.type	SDIO_SetSDIOOperation, %function
 695              	SDIO_SetSDIOOperation:
 696              	.LFB129:
 655:stm32f4xx_sdio.c **** }
ARM GAS  /tmp/ccDT7MPS.s 			page 25


 656:stm32f4xx_sdio.c **** 
 657:stm32f4xx_sdio.c **** /**
 658:stm32f4xx_sdio.c ****   * @brief  Enables or disables the SD I/O Mode Operation.
 659:stm32f4xx_sdio.c ****   * @param  NewState: new state of SDIO specific operation. 
 660:stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 661:stm32f4xx_sdio.c ****   * @retval None
 662:stm32f4xx_sdio.c ****   */
 663:stm32f4xx_sdio.c **** void SDIO_SetSDIOOperation(FunctionalState NewState)
 664:stm32f4xx_sdio.c **** { 
 697              		.loc 1 664 0
 698              		.cfi_startproc
 699              		@ args = 0, pretend = 0, frame = 0
 700              		@ frame_needed = 0, uses_anonymous_args = 0
 701              		@ link register save eliminated.
 702              	.LVL31:
 665:stm32f4xx_sdio.c ****   /* Check the parameters */
 666:stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 667:stm32f4xx_sdio.c ****   
 668:stm32f4xx_sdio.c ****   *(__IO uint32_t *) DCTRL_SDIOEN_BB = (uint32_t)NewState;
 703              		.loc 1 668 0
 704 0000 014B     		ldr	r3, .L51	@ tmp136,
 705 0002 1860     		str	r0, [r3, #0]	@ NewState, MEM[(volatile uint32_t *)1109755308B]
 706 0004 7047     		bx	lr	@
 707              	.L52:
 708 0006 00BF     		.align	2
 709              	.L51:
 710 0008 AC852542 		.word	1109755308
 711              		.cfi_endproc
 712              	.LFE129:
 713              		.size	SDIO_SetSDIOOperation, .-SDIO_SetSDIOOperation
 714              		.section	.text.SDIO_SendSDIOSuspendCmd,"ax",%progbits
 715              		.align	1
 716              		.global	SDIO_SendSDIOSuspendCmd
 717              		.thumb
 718              		.thumb_func
 719              		.type	SDIO_SendSDIOSuspendCmd, %function
 720              	SDIO_SendSDIOSuspendCmd:
 721              	.LFB130:
 669:stm32f4xx_sdio.c **** }
 670:stm32f4xx_sdio.c **** 
 671:stm32f4xx_sdio.c **** /**
 672:stm32f4xx_sdio.c ****   * @brief  Enables or disables the SD I/O Mode suspend command sending.
 673:stm32f4xx_sdio.c ****   * @param  NewState: new state of the SD I/O Mode suspend command.
 674:stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 675:stm32f4xx_sdio.c ****   * @retval None
 676:stm32f4xx_sdio.c ****   */
 677:stm32f4xx_sdio.c **** void SDIO_SendSDIOSuspendCmd(FunctionalState NewState)
 678:stm32f4xx_sdio.c **** { 
 722              		.loc 1 678 0
 723              		.cfi_startproc
 724              		@ args = 0, pretend = 0, frame = 0
 725              		@ frame_needed = 0, uses_anonymous_args = 0
 726              		@ link register save eliminated.
 727              	.LVL32:
 679:stm32f4xx_sdio.c ****   /* Check the parameters */
 680:stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 681:stm32f4xx_sdio.c ****   
ARM GAS  /tmp/ccDT7MPS.s 			page 26


 682:stm32f4xx_sdio.c ****   *(__IO uint32_t *) CMD_SDIOSUSPEND_BB = (uint32_t)NewState;
 728              		.loc 1 682 0
 729 0000 014B     		ldr	r3, .L54	@ tmp136,
 730 0002 1860     		str	r0, [r3, #0]	@ NewState, MEM[(volatile uint32_t *)1109754284B]
 731 0004 7047     		bx	lr	@
 732              	.L55:
 733 0006 00BF     		.align	2
 734              	.L54:
 735 0008 AC812542 		.word	1109754284
 736              		.cfi_endproc
 737              	.LFE130:
 738              		.size	SDIO_SendSDIOSuspendCmd, .-SDIO_SendSDIOSuspendCmd
 739              		.section	.text.SDIO_CommandCompletionCmd,"ax",%progbits
 740              		.align	1
 741              		.global	SDIO_CommandCompletionCmd
 742              		.thumb
 743              		.thumb_func
 744              		.type	SDIO_CommandCompletionCmd, %function
 745              	SDIO_CommandCompletionCmd:
 746              	.LFB131:
 683:stm32f4xx_sdio.c **** }
 684:stm32f4xx_sdio.c **** 
 685:stm32f4xx_sdio.c **** /**
 686:stm32f4xx_sdio.c ****   * @}
 687:stm32f4xx_sdio.c ****   */
 688:stm32f4xx_sdio.c **** 
 689:stm32f4xx_sdio.c **** /** @defgroup SDIO_Group5 CE-ATA mode management functions
 690:stm32f4xx_sdio.c ****  *  @brief   CE-ATA mode management functions
 691:stm32f4xx_sdio.c ****  *
 692:stm32f4xx_sdio.c **** @verbatim   
 693:stm32f4xx_sdio.c ****  ===============================================================================
 694:stm32f4xx_sdio.c ****                   ##### CE-ATA mode management functions #####
 695:stm32f4xx_sdio.c ****  ===============================================================================  
 696:stm32f4xx_sdio.c **** 
 697:stm32f4xx_sdio.c ****   This section provide functions allowing to program and read the CE-ATA card.
 698:stm32f4xx_sdio.c **** 
 699:stm32f4xx_sdio.c **** @endverbatim
 700:stm32f4xx_sdio.c ****   * @{
 701:stm32f4xx_sdio.c ****   */
 702:stm32f4xx_sdio.c **** 
 703:stm32f4xx_sdio.c **** /**
 704:stm32f4xx_sdio.c ****   * @brief  Enables or disables the command completion signal.
 705:stm32f4xx_sdio.c ****   * @param  NewState: new state of command completion signal. 
 706:stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 707:stm32f4xx_sdio.c ****   * @retval None
 708:stm32f4xx_sdio.c ****   */
 709:stm32f4xx_sdio.c **** void SDIO_CommandCompletionCmd(FunctionalState NewState)
 710:stm32f4xx_sdio.c **** { 
 747              		.loc 1 710 0
 748              		.cfi_startproc
 749              		@ args = 0, pretend = 0, frame = 0
 750              		@ frame_needed = 0, uses_anonymous_args = 0
 751              		@ link register save eliminated.
 752              	.LVL33:
 711:stm32f4xx_sdio.c ****   /* Check the parameters */
 712:stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 713:stm32f4xx_sdio.c ****   
ARM GAS  /tmp/ccDT7MPS.s 			page 27


 714:stm32f4xx_sdio.c ****   *(__IO uint32_t *) CMD_ENCMDCOMPL_BB = (uint32_t)NewState;
 753              		.loc 1 714 0
 754 0000 014B     		ldr	r3, .L57	@ tmp136,
 755 0002 1860     		str	r0, [r3, #0]	@ NewState, MEM[(volatile uint32_t *)1109754288B]
 756 0004 7047     		bx	lr	@
 757              	.L58:
 758 0006 00BF     		.align	2
 759              	.L57:
 760 0008 B0812542 		.word	1109754288
 761              		.cfi_endproc
 762              	.LFE131:
 763              		.size	SDIO_CommandCompletionCmd, .-SDIO_CommandCompletionCmd
 764              		.section	.text.SDIO_CEATAITCmd,"ax",%progbits
 765              		.align	1
 766              		.global	SDIO_CEATAITCmd
 767              		.thumb
 768              		.thumb_func
 769              		.type	SDIO_CEATAITCmd, %function
 770              	SDIO_CEATAITCmd:
 771              	.LFB132:
 715:stm32f4xx_sdio.c **** }
 716:stm32f4xx_sdio.c **** 
 717:stm32f4xx_sdio.c **** /**
 718:stm32f4xx_sdio.c ****   * @brief  Enables or disables the CE-ATA interrupt.
 719:stm32f4xx_sdio.c ****   * @param  NewState: new state of CE-ATA interrupt. 
 720:stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 721:stm32f4xx_sdio.c ****   * @retval None
 722:stm32f4xx_sdio.c ****   */
 723:stm32f4xx_sdio.c **** void SDIO_CEATAITCmd(FunctionalState NewState)
 724:stm32f4xx_sdio.c **** { 
 772              		.loc 1 724 0
 773              		.cfi_startproc
 774              		@ args = 0, pretend = 0, frame = 0
 775              		@ frame_needed = 0, uses_anonymous_args = 0
 776              		@ link register save eliminated.
 777              	.LVL34:
 725:stm32f4xx_sdio.c ****   /* Check the parameters */
 726:stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 727:stm32f4xx_sdio.c ****   
 728:stm32f4xx_sdio.c ****   *(__IO uint32_t *) CMD_NIEN_BB = (uint32_t)((~((uint32_t)NewState)) & ((uint32_t)0x1));
 778              		.loc 1 728 0
 779 0000 00F00100 		and	r0, r0, #1	@ tmp138, NewState,
 780              	.LVL35:
 781 0004 024B     		ldr	r3, .L60	@ tmp141,
 782 0006 80F00101 		eor	r1, r0, #1	@ D.6041, tmp138,
 783 000a 1960     		str	r1, [r3, #0]	@ D.6041, MEM[(volatile uint32_t *)1109754292B]
 784 000c 7047     		bx	lr	@
 785              	.L61:
 786 000e 00BF     		.align	2
 787              	.L60:
 788 0010 B4812542 		.word	1109754292
 789              		.cfi_endproc
 790              	.LFE132:
 791              		.size	SDIO_CEATAITCmd, .-SDIO_CEATAITCmd
 792              		.section	.text.SDIO_SendCEATACmd,"ax",%progbits
 793              		.align	1
 794              		.global	SDIO_SendCEATACmd
ARM GAS  /tmp/ccDT7MPS.s 			page 28


 795              		.thumb
 796              		.thumb_func
 797              		.type	SDIO_SendCEATACmd, %function
 798              	SDIO_SendCEATACmd:
 799              	.LFB133:
 729:stm32f4xx_sdio.c **** }
 730:stm32f4xx_sdio.c **** 
 731:stm32f4xx_sdio.c **** /**
 732:stm32f4xx_sdio.c ****   * @brief  Sends CE-ATA command (CMD61).
 733:stm32f4xx_sdio.c ****   * @param  NewState: new state of CE-ATA command. 
 734:stm32f4xx_sdio.c ****   *         This parameter can be: ENABLE or DISABLE.
 735:stm32f4xx_sdio.c ****   * @retval None
 736:stm32f4xx_sdio.c ****   */
 737:stm32f4xx_sdio.c **** void SDIO_SendCEATACmd(FunctionalState NewState)
 738:stm32f4xx_sdio.c **** { 
 800              		.loc 1 738 0
 801              		.cfi_startproc
 802              		@ args = 0, pretend = 0, frame = 0
 803              		@ frame_needed = 0, uses_anonymous_args = 0
 804              		@ link register save eliminated.
 805              	.LVL36:
 739:stm32f4xx_sdio.c ****   /* Check the parameters */
 740:stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 741:stm32f4xx_sdio.c ****   
 742:stm32f4xx_sdio.c ****   *(__IO uint32_t *) CMD_ATACMD_BB = (uint32_t)NewState;
 806              		.loc 1 742 0
 807 0000 014B     		ldr	r3, .L63	@ tmp136,
 808 0002 1860     		str	r0, [r3, #0]	@ NewState, MEM[(volatile uint32_t *)1109754296B]
 809 0004 7047     		bx	lr	@
 810              	.L64:
 811 0006 00BF     		.align	2
 812              	.L63:
 813 0008 B8812542 		.word	1109754296
 814              		.cfi_endproc
 815              	.LFE133:
 816              		.size	SDIO_SendCEATACmd, .-SDIO_SendCEATACmd
 817              		.section	.text.SDIO_DMACmd,"ax",%progbits
 818              		.align	1
 819              		.global	SDIO_DMACmd
 820              		.thumb
 821              		.thumb_func
 822              		.type	SDIO_DMACmd, %function
 823              	SDIO_DMACmd:
 824              	.LFB134:
 743:stm32f4xx_sdio.c **** }
 744:stm32f4xx_sdio.c **** 
 745:stm32f4xx_sdio.c **** /**
 746:stm32f4xx_sdio.c ****   * @}
 747:stm32f4xx_sdio.c ****   */
 748:stm32f4xx_sdio.c **** 
 749:stm32f4xx_sdio.c **** /** @defgroup SDIO_Group6 DMA transfers management functions
 750:stm32f4xx_sdio.c ****  *  @brief   DMA transfers management functions
 751:stm32f4xx_sdio.c ****  *
 752:stm32f4xx_sdio.c **** @verbatim   
 753:stm32f4xx_sdio.c ****  ===============================================================================
 754:stm32f4xx_sdio.c ****                   ##### DMA transfers management functions #####
 755:stm32f4xx_sdio.c ****  ===============================================================================  
ARM GAS  /tmp/ccDT7MPS.s 			page 29


 756:stm32f4xx_sdio.c **** 
 757:stm32f4xx_sdio.c ****   This section provide functions allowing to program SDIO DMA transfer.
 758:stm32f4xx_sdio.c **** 
 759:stm32f4xx_sdio.c **** @endverbatim
 760:stm32f4xx_sdio.c ****   * @{
 761:stm32f4xx_sdio.c ****   */
 762:stm32f4xx_sdio.c **** 
 763:stm32f4xx_sdio.c **** /**
 764:stm32f4xx_sdio.c ****   * @brief  Enables or disables the SDIO DMA request.
 765:stm32f4xx_sdio.c ****   * @param  NewState: new state of the selected SDIO DMA request.
 766:stm32f4xx_sdio.c ****   *          This parameter can be: ENABLE or DISABLE.
 767:stm32f4xx_sdio.c ****   * @retval None
 768:stm32f4xx_sdio.c ****   */
 769:stm32f4xx_sdio.c **** void SDIO_DMACmd(FunctionalState NewState)
 770:stm32f4xx_sdio.c **** {
 825              		.loc 1 770 0
 826              		.cfi_startproc
 827              		@ args = 0, pretend = 0, frame = 0
 828              		@ frame_needed = 0, uses_anonymous_args = 0
 829              		@ link register save eliminated.
 830              	.LVL37:
 771:stm32f4xx_sdio.c ****   /* Check the parameters */
 772:stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 773:stm32f4xx_sdio.c ****   
 774:stm32f4xx_sdio.c ****   *(__IO uint32_t *) DCTRL_DMAEN_BB = (uint32_t)NewState;
 831              		.loc 1 774 0
 832 0000 014B     		ldr	r3, .L66	@ tmp136,
 833 0002 1860     		str	r0, [r3, #0]	@ NewState, MEM[(volatile uint32_t *)1109755276B]
 834 0004 7047     		bx	lr	@
 835              	.L67:
 836 0006 00BF     		.align	2
 837              	.L66:
 838 0008 8C852542 		.word	1109755276
 839              		.cfi_endproc
 840              	.LFE134:
 841              		.size	SDIO_DMACmd, .-SDIO_DMACmd
 842              		.section	.text.SDIO_ITConfig,"ax",%progbits
 843              		.align	1
 844              		.global	SDIO_ITConfig
 845              		.thumb
 846              		.thumb_func
 847              		.type	SDIO_ITConfig, %function
 848              	SDIO_ITConfig:
 849              	.LFB135:
 775:stm32f4xx_sdio.c **** }
 776:stm32f4xx_sdio.c **** 
 777:stm32f4xx_sdio.c **** /**
 778:stm32f4xx_sdio.c ****   * @}
 779:stm32f4xx_sdio.c ****   */
 780:stm32f4xx_sdio.c **** 
 781:stm32f4xx_sdio.c **** /** @defgroup SDIO_Group7 Interrupts and flags management functions
 782:stm32f4xx_sdio.c ****  *  @brief   Interrupts and flags management functions  
 783:stm32f4xx_sdio.c ****  *
 784:stm32f4xx_sdio.c **** @verbatim   
 785:stm32f4xx_sdio.c ****  ===============================================================================
 786:stm32f4xx_sdio.c ****               ##### Interrupts and flags management functions #####
 787:stm32f4xx_sdio.c ****  ===============================================================================  
ARM GAS  /tmp/ccDT7MPS.s 			page 30


 788:stm32f4xx_sdio.c **** 
 789:stm32f4xx_sdio.c **** 
 790:stm32f4xx_sdio.c **** @endverbatim
 791:stm32f4xx_sdio.c ****   * @{
 792:stm32f4xx_sdio.c ****   */
 793:stm32f4xx_sdio.c **** 
 794:stm32f4xx_sdio.c **** /**
 795:stm32f4xx_sdio.c ****   * @brief  Enables or disables the SDIO interrupts.
 796:stm32f4xx_sdio.c ****   * @param  SDIO_IT: specifies the SDIO interrupt sources to be enabled or disabled.
 797:stm32f4xx_sdio.c ****   *          This parameter can be one or a combination of the following values:
 798:stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CCRCFAIL: Command response received (CRC check failed) interrupt
 799:stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DCRCFAIL: Data block sent/received (CRC check failed) interrupt
 800:stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CTIMEOUT: Command response timeout interrupt
 801:stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DTIMEOUT: Data timeout interrupt
 802:stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXUNDERR: Transmit FIFO underrun error interrupt
 803:stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXOVERR:  Received FIFO overrun error interrupt
 804:stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDREND:  Command response received (CRC check passed) interrupt
 805:stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDSENT:  Command sent (no response required) interrupt
 806:stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DATAEND:  Data end (data counter, SDIDCOUNT, is zero) interrupt
 807:stm32f4xx_sdio.c ****   *            @arg SDIO_IT_STBITERR: Start bit not detected on all data signals in wide 
 808:stm32f4xx_sdio.c ****   *                                   bus mode interrupt
 809:stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DBCKEND:  Data block sent/received (CRC check passed) interrupt
 810:stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDACT:   Command transfer in progress interrupt
 811:stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXACT:    Data transmit in progress interrupt
 812:stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXACT:    Data receive in progress interrupt
 813:stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOHE: Transmit FIFO Half Empty interrupt
 814:stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOHF: Receive FIFO Half Full interrupt
 815:stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOF:  Transmit FIFO full interrupt
 816:stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOF:  Receive FIFO full interrupt
 817:stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOE:  Transmit FIFO empty interrupt
 818:stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOE:  Receive FIFO empty interrupt
 819:stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXDAVL:   Data available in transmit FIFO interrupt
 820:stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXDAVL:   Data available in receive FIFO interrupt
 821:stm32f4xx_sdio.c ****   *            @arg SDIO_IT_SDIOIT:   SD I/O interrupt received interrupt
 822:stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CEATAEND: CE-ATA command completion signal received for CMD61 interrupt
 823:stm32f4xx_sdio.c ****   * @param  NewState: new state of the specified SDIO interrupts.
 824:stm32f4xx_sdio.c ****   *          This parameter can be: ENABLE or DISABLE.
 825:stm32f4xx_sdio.c ****   * @retval None 
 826:stm32f4xx_sdio.c ****   */
 827:stm32f4xx_sdio.c **** void SDIO_ITConfig(uint32_t SDIO_IT, FunctionalState NewState)
 828:stm32f4xx_sdio.c **** {
 850              		.loc 1 828 0
 851              		.cfi_startproc
 852              		@ args = 0, pretend = 0, frame = 0
 853              		@ frame_needed = 0, uses_anonymous_args = 0
 854              		@ link register save eliminated.
 855              	.LVL38:
 856 0000 044B     		ldr	r3, .L73	@ tmp146,
 829:stm32f4xx_sdio.c ****   /* Check the parameters */
 830:stm32f4xx_sdio.c ****   assert_param(IS_SDIO_IT(SDIO_IT));
 831:stm32f4xx_sdio.c ****   assert_param(IS_FUNCTIONAL_STATE(NewState));
 832:stm32f4xx_sdio.c ****   
 833:stm32f4xx_sdio.c ****   if (NewState != DISABLE)
 834:stm32f4xx_sdio.c ****   {
 835:stm32f4xx_sdio.c ****     /* Enable the SDIO interrupts */
 836:stm32f4xx_sdio.c ****     SDIO->MASK |= SDIO_IT;
 857              		.loc 1 836 0
ARM GAS  /tmp/ccDT7MPS.s 			page 31


 858 0002 DA6B     		ldr	r2, [r3, #60]	@ D.6027,
 833:stm32f4xx_sdio.c ****   if (NewState != DISABLE)
 859              		.loc 1 833 0
 860 0004 09B1     		cbz	r1, .L69	@ NewState,
 861              		.loc 1 836 0
 862 0006 1043     		orrs	r0, r0, r2	@, D.6028, SDIO_IT, D.6027
 863              	.LVL39:
 864 0008 01E0     		b	.L71	@
 865              	.LVL40:
 866              	.L69:
 837:stm32f4xx_sdio.c ****   }
 838:stm32f4xx_sdio.c ****   else
 839:stm32f4xx_sdio.c ****   {
 840:stm32f4xx_sdio.c ****     /* Disable the SDIO interrupts */
 841:stm32f4xx_sdio.c ****     SDIO->MASK &= ~SDIO_IT;
 867              		.loc 1 841 0
 868 000a 22EA0000 		bic	r0, r2, r0	@ D.6032, D.6030, SDIO_IT
 869              	.LVL41:
 870              	.L71:
 871 000e D863     		str	r0, [r3, #60]	@ D.6032,
 872 0010 7047     		bx	lr	@
 873              	.L74:
 874 0012 00BF     		.align	2
 875              	.L73:
 876 0014 002C0140 		.word	1073818624
 877              		.cfi_endproc
 878              	.LFE135:
 879              		.size	SDIO_ITConfig, .-SDIO_ITConfig
 880              		.section	.text.SDIO_GetFlagStatus,"ax",%progbits
 881              		.align	1
 882              		.global	SDIO_GetFlagStatus
 883              		.thumb
 884              		.thumb_func
 885              		.type	SDIO_GetFlagStatus, %function
 886              	SDIO_GetFlagStatus:
 887              	.LFB136:
 842:stm32f4xx_sdio.c ****   } 
 843:stm32f4xx_sdio.c **** }
 844:stm32f4xx_sdio.c **** 
 845:stm32f4xx_sdio.c **** /**
 846:stm32f4xx_sdio.c ****   * @brief  Checks whether the specified SDIO flag is set or not.
 847:stm32f4xx_sdio.c ****   * @param  SDIO_FLAG: specifies the flag to check. 
 848:stm32f4xx_sdio.c ****   *          This parameter can be one of the following values:
 849:stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CCRCFAIL: Command response received (CRC check failed)
 850:stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DCRCFAIL: Data block sent/received (CRC check failed)
 851:stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CTIMEOUT: Command response timeout
 852:stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DTIMEOUT: Data timeout
 853:stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXUNDERR: Transmit FIFO underrun error
 854:stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXOVERR:  Received FIFO overrun error
 855:stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CMDREND:  Command response received (CRC check passed)
 856:stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CMDSENT:  Command sent (no response required)
 857:stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DATAEND:  Data end (data counter, SDIDCOUNT, is zero)
 858:stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_STBITERR: Start bit not detected on all data signals in wide bus mode
 859:stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DBCKEND:  Data block sent/received (CRC check passed)
 860:stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CMDACT:   Command transfer in progress
 861:stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXACT:    Data transmit in progress
 862:stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXACT:    Data receive in progress
ARM GAS  /tmp/ccDT7MPS.s 			page 32


 863:stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXFIFOHE: Transmit FIFO Half Empty
 864:stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXFIFOHF: Receive FIFO Half Full
 865:stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXFIFOF:  Transmit FIFO full
 866:stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXFIFOF:  Receive FIFO full
 867:stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXFIFOE:  Transmit FIFO empty
 868:stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXFIFOE:  Receive FIFO empty
 869:stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXDAVL:   Data available in transmit FIFO
 870:stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXDAVL:   Data available in receive FIFO
 871:stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_SDIOIT:   SD I/O interrupt received
 872:stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CEATAEND: CE-ATA command completion signal received for CMD61
 873:stm32f4xx_sdio.c ****   * @retval The new state of SDIO_FLAG (SET or RESET).
 874:stm32f4xx_sdio.c ****   */
 875:stm32f4xx_sdio.c **** FlagStatus SDIO_GetFlagStatus(uint32_t SDIO_FLAG)
 876:stm32f4xx_sdio.c **** { 
 888              		.loc 1 876 0
 889              		.cfi_startproc
 890              		@ args = 0, pretend = 0, frame = 0
 891              		@ frame_needed = 0, uses_anonymous_args = 0
 892              		@ link register save eliminated.
 893              	.LVL42:
 877:stm32f4xx_sdio.c ****   FlagStatus bitstatus = RESET;
 878:stm32f4xx_sdio.c ****   
 879:stm32f4xx_sdio.c ****   /* Check the parameters */
 880:stm32f4xx_sdio.c ****   assert_param(IS_SDIO_FLAG(SDIO_FLAG));
 881:stm32f4xx_sdio.c ****   
 882:stm32f4xx_sdio.c ****   if ((SDIO->STA & SDIO_FLAG) != (uint32_t)RESET)
 894              		.loc 1 882 0
 895 0000 034B     		ldr	r3, .L76	@ tmp140,
 896 0002 596B     		ldr	r1, [r3, #52]	@ D.6017, MEM[(struct SDIO_TypeDef *)1073818624B].STA
 897              	.LVL43:
 898 0004 0842     		tst	r0, r1	@ SDIO_FLAG, D.6017
 883:stm32f4xx_sdio.c ****   {
 884:stm32f4xx_sdio.c ****     bitstatus = SET;
 885:stm32f4xx_sdio.c ****   }
 886:stm32f4xx_sdio.c ****   else
 887:stm32f4xx_sdio.c ****   {
 888:stm32f4xx_sdio.c ****     bitstatus = RESET;
 889:stm32f4xx_sdio.c ****   }
 890:stm32f4xx_sdio.c ****   return bitstatus;
 891:stm32f4xx_sdio.c **** }
 899              		.loc 1 891 0
 900 0006 0CBF     		ite	eq	@
 901 0008 0020     		moveq	r0, #0	@,
 902 000a 0120     		movne	r0, #1	@,
 903              	.LVL44:
 904 000c 7047     		bx	lr	@
 905              	.L77:
 906 000e 00BF     		.align	2
 907              	.L76:
 908 0010 002C0140 		.word	1073818624
 909              		.cfi_endproc
 910              	.LFE136:
 911              		.size	SDIO_GetFlagStatus, .-SDIO_GetFlagStatus
 912              		.section	.text.SDIO_ClearFlag,"ax",%progbits
 913              		.align	1
 914              		.global	SDIO_ClearFlag
 915              		.thumb
ARM GAS  /tmp/ccDT7MPS.s 			page 33


 916              		.thumb_func
 917              		.type	SDIO_ClearFlag, %function
 918              	SDIO_ClearFlag:
 919              	.LFB137:
 892:stm32f4xx_sdio.c **** 
 893:stm32f4xx_sdio.c **** /**
 894:stm32f4xx_sdio.c ****   * @brief  Clears the SDIO's pending flags.
 895:stm32f4xx_sdio.c ****   * @param  SDIO_FLAG: specifies the flag to clear.  
 896:stm32f4xx_sdio.c ****   *          This parameter can be one or a combination of the following values:
 897:stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CCRCFAIL: Command response received (CRC check failed)
 898:stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DCRCFAIL: Data block sent/received (CRC check failed)
 899:stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CTIMEOUT: Command response timeout
 900:stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DTIMEOUT: Data timeout
 901:stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_TXUNDERR: Transmit FIFO underrun error
 902:stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_RXOVERR:  Received FIFO overrun error
 903:stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CMDREND:  Command response received (CRC check passed)
 904:stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CMDSENT:  Command sent (no response required)
 905:stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DATAEND:  Data end (data counter, SDIDCOUNT, is zero)
 906:stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_STBITERR: Start bit not detected on all data signals in wide bus mode
 907:stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_DBCKEND:  Data block sent/received (CRC check passed)
 908:stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_SDIOIT:   SD I/O interrupt received
 909:stm32f4xx_sdio.c ****   *            @arg SDIO_FLAG_CEATAEND: CE-ATA command completion signal received for CMD61
 910:stm32f4xx_sdio.c ****   * @retval None
 911:stm32f4xx_sdio.c ****   */
 912:stm32f4xx_sdio.c **** void SDIO_ClearFlag(uint32_t SDIO_FLAG)
 913:stm32f4xx_sdio.c **** { 
 920              		.loc 1 913 0
 921              		.cfi_startproc
 922              		@ args = 0, pretend = 0, frame = 0
 923              		@ frame_needed = 0, uses_anonymous_args = 0
 924              		@ link register save eliminated.
 925              	.LVL45:
 914:stm32f4xx_sdio.c ****   /* Check the parameters */
 915:stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CLEAR_FLAG(SDIO_FLAG));
 916:stm32f4xx_sdio.c ****    
 917:stm32f4xx_sdio.c ****   SDIO->ICR = SDIO_FLAG;
 926              		.loc 1 917 0
 927 0000 014B     		ldr	r3, .L79	@ tmp135,
 928 0002 9863     		str	r0, [r3, #56]	@ SDIO_FLAG, MEM[(struct SDIO_TypeDef *)1073818624B].ICR
 929 0004 7047     		bx	lr	@
 930              	.L80:
 931 0006 00BF     		.align	2
 932              	.L79:
 933 0008 002C0140 		.word	1073818624
 934              		.cfi_endproc
 935              	.LFE137:
 936              		.size	SDIO_ClearFlag, .-SDIO_ClearFlag
 937              		.section	.text.SDIO_GetITStatus,"ax",%progbits
 938              		.align	1
 939              		.global	SDIO_GetITStatus
 940              		.thumb
 941              		.thumb_func
 942              		.type	SDIO_GetITStatus, %function
 943              	SDIO_GetITStatus:
 944              	.LFB138:
 918:stm32f4xx_sdio.c **** }
 919:stm32f4xx_sdio.c **** 
ARM GAS  /tmp/ccDT7MPS.s 			page 34


 920:stm32f4xx_sdio.c **** /**
 921:stm32f4xx_sdio.c ****   * @brief  Checks whether the specified SDIO interrupt has occurred or not.
 922:stm32f4xx_sdio.c ****   * @param  SDIO_IT: specifies the SDIO interrupt source to check. 
 923:stm32f4xx_sdio.c ****   *          This parameter can be one of the following values:
 924:stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CCRCFAIL: Command response received (CRC check failed) interrupt
 925:stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DCRCFAIL: Data block sent/received (CRC check failed) interrupt
 926:stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CTIMEOUT: Command response timeout interrupt
 927:stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DTIMEOUT: Data timeout interrupt
 928:stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXUNDERR: Transmit FIFO underrun error interrupt
 929:stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXOVERR:  Received FIFO overrun error interrupt
 930:stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDREND:  Command response received (CRC check passed) interrupt
 931:stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDSENT:  Command sent (no response required) interrupt
 932:stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DATAEND:  Data end (data counter, SDIDCOUNT, is zero) interrupt
 933:stm32f4xx_sdio.c ****   *            @arg SDIO_IT_STBITERR: Start bit not detected on all data signals in wide 
 934:stm32f4xx_sdio.c ****   *                                   bus mode interrupt
 935:stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DBCKEND:  Data block sent/received (CRC check passed) interrupt
 936:stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDACT:   Command transfer in progress interrupt
 937:stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXACT:    Data transmit in progress interrupt
 938:stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXACT:    Data receive in progress interrupt
 939:stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOHE: Transmit FIFO Half Empty interrupt
 940:stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOHF: Receive FIFO Half Full interrupt
 941:stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOF:  Transmit FIFO full interrupt
 942:stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOF:  Receive FIFO full interrupt
 943:stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXFIFOE:  Transmit FIFO empty interrupt
 944:stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXFIFOE:  Receive FIFO empty interrupt
 945:stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXDAVL:   Data available in transmit FIFO interrupt
 946:stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXDAVL:   Data available in receive FIFO interrupt
 947:stm32f4xx_sdio.c ****   *            @arg SDIO_IT_SDIOIT:   SD I/O interrupt received interrupt
 948:stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CEATAEND: CE-ATA command completion signal received for CMD61 interrupt
 949:stm32f4xx_sdio.c ****   * @retval The new state of SDIO_IT (SET or RESET).
 950:stm32f4xx_sdio.c ****   */
 951:stm32f4xx_sdio.c **** ITStatus SDIO_GetITStatus(uint32_t SDIO_IT)
 952:stm32f4xx_sdio.c **** { 
 945              		.loc 1 952 0
 946              		.cfi_startproc
 947              		@ args = 0, pretend = 0, frame = 0
 948              		@ frame_needed = 0, uses_anonymous_args = 0
 949              		@ link register save eliminated.
 950              	.LVL46:
 953:stm32f4xx_sdio.c ****   ITStatus bitstatus = RESET;
 954:stm32f4xx_sdio.c ****   
 955:stm32f4xx_sdio.c ****   /* Check the parameters */
 956:stm32f4xx_sdio.c ****   assert_param(IS_SDIO_GET_IT(SDIO_IT));
 957:stm32f4xx_sdio.c ****   if ((SDIO->STA & SDIO_IT) != (uint32_t)RESET)  
 951              		.loc 1 957 0
 952 0000 034B     		ldr	r3, .L82	@ tmp140,
 953 0002 596B     		ldr	r1, [r3, #52]	@ D.6008, MEM[(struct SDIO_TypeDef *)1073818624B].STA
 954              	.LVL47:
 955 0004 0842     		tst	r0, r1	@ SDIO_IT, D.6008
 958:stm32f4xx_sdio.c ****   {
 959:stm32f4xx_sdio.c ****     bitstatus = SET;
 960:stm32f4xx_sdio.c ****   }
 961:stm32f4xx_sdio.c ****   else
 962:stm32f4xx_sdio.c ****   {
 963:stm32f4xx_sdio.c ****     bitstatus = RESET;
 964:stm32f4xx_sdio.c ****   }
 965:stm32f4xx_sdio.c ****   return bitstatus;
ARM GAS  /tmp/ccDT7MPS.s 			page 35


 966:stm32f4xx_sdio.c **** }
 956              		.loc 1 966 0
 957 0006 0CBF     		ite	eq	@
 958 0008 0020     		moveq	r0, #0	@,
 959 000a 0120     		movne	r0, #1	@,
 960              	.LVL48:
 961 000c 7047     		bx	lr	@
 962              	.L83:
 963 000e 00BF     		.align	2
 964              	.L82:
 965 0010 002C0140 		.word	1073818624
 966              		.cfi_endproc
 967              	.LFE138:
 968              		.size	SDIO_GetITStatus, .-SDIO_GetITStatus
 969              		.section	.text.SDIO_ClearITPendingBit,"ax",%progbits
 970              		.align	1
 971              		.global	SDIO_ClearITPendingBit
 972              		.thumb
 973              		.thumb_func
 974              		.type	SDIO_ClearITPendingBit, %function
 975              	SDIO_ClearITPendingBit:
 976              	.LFB139:
 967:stm32f4xx_sdio.c **** 
 968:stm32f4xx_sdio.c **** /**
 969:stm32f4xx_sdio.c ****   * @brief  Clears the SDIO's interrupt pending bits.
 970:stm32f4xx_sdio.c ****   * @param  SDIO_IT: specifies the interrupt pending bit to clear. 
 971:stm32f4xx_sdio.c ****   *          This parameter can be one or a combination of the following values:
 972:stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CCRCFAIL: Command response received (CRC check failed) interrupt
 973:stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DCRCFAIL: Data block sent/received (CRC check failed) interrupt
 974:stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CTIMEOUT: Command response timeout interrupt
 975:stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DTIMEOUT: Data timeout interrupt
 976:stm32f4xx_sdio.c ****   *            @arg SDIO_IT_TXUNDERR: Transmit FIFO underrun error interrupt
 977:stm32f4xx_sdio.c ****   *            @arg SDIO_IT_RXOVERR:  Received FIFO overrun error interrupt
 978:stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDREND:  Command response received (CRC check passed) interrupt
 979:stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CMDSENT:  Command sent (no response required) interrupt
 980:stm32f4xx_sdio.c ****   *            @arg SDIO_IT_DATAEND:  Data end (data counter, SDIO_DCOUNT, is zero) interrupt
 981:stm32f4xx_sdio.c ****   *            @arg SDIO_IT_STBITERR: Start bit not detected on all data signals in wide 
 982:stm32f4xx_sdio.c ****   *                                   bus mode interrupt
 983:stm32f4xx_sdio.c ****   *            @arg SDIO_IT_SDIOIT:   SD I/O interrupt received interrupt
 984:stm32f4xx_sdio.c ****   *            @arg SDIO_IT_CEATAEND: CE-ATA command completion signal received for CMD61
 985:stm32f4xx_sdio.c ****   * @retval None
 986:stm32f4xx_sdio.c ****   */
 987:stm32f4xx_sdio.c **** void SDIO_ClearITPendingBit(uint32_t SDIO_IT)
 988:stm32f4xx_sdio.c **** { 
 977              		.loc 1 988 0
 978              		.cfi_startproc
 979              		@ args = 0, pretend = 0, frame = 0
 980              		@ frame_needed = 0, uses_anonymous_args = 0
 981              		@ link register save eliminated.
 982              	.LVL49:
 989:stm32f4xx_sdio.c ****   /* Check the parameters */
 990:stm32f4xx_sdio.c ****   assert_param(IS_SDIO_CLEAR_IT(SDIO_IT));
 991:stm32f4xx_sdio.c ****    
 992:stm32f4xx_sdio.c ****   SDIO->ICR = SDIO_IT;
 983              		.loc 1 992 0
 984 0000 014B     		ldr	r3, .L85	@ tmp135,
 985 0002 9863     		str	r0, [r3, #56]	@ SDIO_IT, MEM[(struct SDIO_TypeDef *)1073818624B].ICR
ARM GAS  /tmp/ccDT7MPS.s 			page 36


 986 0004 7047     		bx	lr	@
 987              	.L86:
 988 0006 00BF     		.align	2
 989              	.L85:
 990 0008 002C0140 		.word	1073818624
 991              		.cfi_endproc
 992              	.LFE139:
 993              		.size	SDIO_ClearITPendingBit, .-SDIO_ClearITPendingBit
 994              		.text
 995              	.Letext0:
 996              		.file 2 "/usr/bin/../lib/gcc/arm-none-eabi/4.7.4/../../../../arm-none-eabi/include/stdint.h"
 997              		.file 3 "stm32f4xx.h"
 998              		.file 4 "stm32f4xx_sdio.h"
 999              		.file 5 "cmsis/core_cm4.h"
 1000              		.file 6 "stm32f4xx_rcc.h"
 1001              		.section	.debug_info,"",%progbits
 1002              	.Ldebug_info0:
 1003 0000 EB080000 		.4byte	0x8eb
 1004 0004 0200     		.2byte	0x2
 1005 0006 00000000 		.4byte	.Ldebug_abbrev0
 1006 000a 04       		.byte	0x4
 1007 000b 01       		.uleb128 0x1
 1008 000c B0030000 		.4byte	.LASF98
 1009 0010 01       		.byte	0x1
 1010 0011 23030000 		.4byte	.LASF99
 1011 0015 85000000 		.4byte	.LASF100
 1012 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1013 001d 00000000 		.4byte	0
 1014 0021 00000000 		.4byte	0
 1015 0025 00000000 		.4byte	.Ldebug_line0
 1016 0029 02       		.uleb128 0x2
 1017 002a 01       		.byte	0x1
 1018 002b 06       		.byte	0x6
 1019 002c 5E030000 		.4byte	.LASF0
 1020 0030 03       		.uleb128 0x3
 1021 0031 F5010000 		.4byte	.LASF4
 1022 0035 02       		.byte	0x2
 1023 0036 2A       		.byte	0x2a
 1024 0037 3B000000 		.4byte	0x3b
 1025 003b 02       		.uleb128 0x2
 1026 003c 01       		.byte	0x1
 1027 003d 08       		.byte	0x8
 1028 003e 3C030000 		.4byte	.LASF1
 1029 0042 02       		.uleb128 0x2
 1030 0043 02       		.byte	0x2
 1031 0044 05       		.byte	0x5
 1032 0045 C0010000 		.4byte	.LASF2
 1033 0049 02       		.uleb128 0x2
 1034 004a 02       		.byte	0x2
 1035 004b 07       		.byte	0x7
 1036 004c 46040000 		.4byte	.LASF3
 1037 0050 03       		.uleb128 0x3
 1038 0051 7B040000 		.4byte	.LASF5
 1039 0055 02       		.byte	0x2
 1040 0056 4F       		.byte	0x4f
 1041 0057 5B000000 		.4byte	0x5b
 1042 005b 02       		.uleb128 0x2
ARM GAS  /tmp/ccDT7MPS.s 			page 37


 1043 005c 04       		.byte	0x4
 1044 005d 05       		.byte	0x5
 1045 005e A7020000 		.4byte	.LASF6
 1046 0062 03       		.uleb128 0x3
 1047 0063 81030000 		.4byte	.LASF7
 1048 0067 02       		.byte	0x2
 1049 0068 50       		.byte	0x50
 1050 0069 6D000000 		.4byte	0x6d
 1051 006d 02       		.uleb128 0x2
 1052 006e 04       		.byte	0x4
 1053 006f 07       		.byte	0x7
 1054 0070 AA040000 		.4byte	.LASF8
 1055 0074 02       		.uleb128 0x2
 1056 0075 08       		.byte	0x8
 1057 0076 05       		.byte	0x5
 1058 0077 40010000 		.4byte	.LASF9
 1059 007b 02       		.uleb128 0x2
 1060 007c 08       		.byte	0x8
 1061 007d 07       		.byte	0x7
 1062 007e 6A030000 		.4byte	.LASF10
 1063 0082 04       		.uleb128 0x4
 1064 0083 04       		.byte	0x4
 1065 0084 05       		.byte	0x5
 1066 0085 696E7400 		.ascii	"int\000"
 1067 0089 02       		.uleb128 0x2
 1068 008a 04       		.byte	0x4
 1069 008b 07       		.byte	0x7
 1070 008c 9E030000 		.4byte	.LASF11
 1071 0090 02       		.uleb128 0x2
 1072 0091 04       		.byte	0x4
 1073 0092 07       		.byte	0x7
 1074 0093 CA000000 		.4byte	.LASF12
 1075 0097 05       		.uleb128 0x5
 1076 0098 62000000 		.4byte	0x62
 1077 009c 06       		.uleb128 0x6
 1078 009d 97000000 		.4byte	0x97
 1079 00a1 07       		.uleb128 0x7
 1080 00a2 62000000 		.4byte	0x62
 1081 00a6 B1000000 		.4byte	0xb1
 1082 00aa 08       		.uleb128 0x8
 1083 00ab 90000000 		.4byte	0x90
 1084 00af 01       		.byte	0x1
 1085 00b0 00       		.byte	0
 1086 00b1 05       		.uleb128 0x5
 1087 00b2 50000000 		.4byte	0x50
 1088 00b6 09       		.uleb128 0x9
 1089 00b7 01       		.byte	0x1
 1090 00b8 03       		.byte	0x3
 1091 00b9 1D01     		.2byte	0x11d
 1092 00bb CC000000 		.4byte	0xcc
 1093 00bf 0A       		.uleb128 0xa
 1094 00c0 48050000 		.4byte	.LASF13
 1095 00c4 00       		.sleb128 0
 1096 00c5 0B       		.uleb128 0xb
 1097 00c6 53455400 		.ascii	"SET\000"
 1098 00ca 01       		.sleb128 1
 1099 00cb 00       		.byte	0
ARM GAS  /tmp/ccDT7MPS.s 			page 38


 1100 00cc 0C       		.uleb128 0xc
 1101 00cd DF050000 		.4byte	.LASF14
 1102 00d1 03       		.byte	0x3
 1103 00d2 1D01     		.2byte	0x11d
 1104 00d4 B6000000 		.4byte	0xb6
 1105 00d8 0C       		.uleb128 0xc
 1106 00d9 8D040000 		.4byte	.LASF15
 1107 00dd 03       		.byte	0x3
 1108 00de 1D01     		.2byte	0x11d
 1109 00e0 B6000000 		.4byte	0xb6
 1110 00e4 09       		.uleb128 0x9
 1111 00e5 01       		.byte	0x1
 1112 00e6 03       		.byte	0x3
 1113 00e7 1F01     		.2byte	0x11f
 1114 00e9 FA000000 		.4byte	0xfa
 1115 00ed 0A       		.uleb128 0xa
 1116 00ee 20020000 		.4byte	.LASF16
 1117 00f2 00       		.sleb128 0
 1118 00f3 0A       		.uleb128 0xa
 1119 00f4 EA050000 		.4byte	.LASF17
 1120 00f8 01       		.sleb128 1
 1121 00f9 00       		.byte	0
 1122 00fa 0C       		.uleb128 0xc
 1123 00fb 6B020000 		.4byte	.LASF18
 1124 00ff 03       		.byte	0x3
 1125 0100 1F01     		.2byte	0x11f
 1126 0102 E4000000 		.4byte	0xe4
 1127 0106 0D       		.uleb128 0xd
 1128 0107 84       		.byte	0x84
 1129 0108 03       		.byte	0x3
 1130 0109 3303     		.2byte	0x333
 1131 010b 3D020000 		.4byte	0x23d
 1132 010f 0E       		.uleb128 0xe
 1133 0110 03020000 		.4byte	.LASF19
 1134 0114 03       		.byte	0x3
 1135 0115 3503     		.2byte	0x335
 1136 0117 97000000 		.4byte	0x97
 1137 011b 02       		.byte	0x2
 1138 011c 23       		.byte	0x23
 1139 011d 00       		.uleb128 0
 1140 011e 0E       		.uleb128 0xe
 1141 011f E2040000 		.4byte	.LASF20
 1142 0123 03       		.byte	0x3
 1143 0124 3603     		.2byte	0x336
 1144 0126 97000000 		.4byte	0x97
 1145 012a 02       		.byte	0x2
 1146 012b 23       		.byte	0x23
 1147 012c 04       		.uleb128 0x4
 1148 012d 0F       		.uleb128 0xf
 1149 012e 41524700 		.ascii	"ARG\000"
 1150 0132 03       		.byte	0x3
 1151 0133 3703     		.2byte	0x337
 1152 0135 97000000 		.4byte	0x97
 1153 0139 02       		.byte	0x2
 1154 013a 23       		.byte	0x23
 1155 013b 08       		.uleb128 0x8
 1156 013c 0F       		.uleb128 0xf
ARM GAS  /tmp/ccDT7MPS.s 			page 39


 1157 013d 434D4400 		.ascii	"CMD\000"
 1158 0141 03       		.byte	0x3
 1159 0142 3803     		.2byte	0x338
 1160 0144 97000000 		.4byte	0x97
 1161 0148 02       		.byte	0x2
 1162 0149 23       		.byte	0x23
 1163 014a 0C       		.uleb128 0xc
 1164 014b 0E       		.uleb128 0xe
 1165 014c C4050000 		.4byte	.LASF21
 1166 0150 03       		.byte	0x3
 1167 0151 3903     		.2byte	0x339
 1168 0153 9C000000 		.4byte	0x9c
 1169 0157 02       		.byte	0x2
 1170 0158 23       		.byte	0x23
 1171 0159 10       		.uleb128 0x10
 1172 015a 0E       		.uleb128 0xe
 1173 015b 63040000 		.4byte	.LASF22
 1174 015f 03       		.byte	0x3
 1175 0160 3A03     		.2byte	0x33a
 1176 0162 9C000000 		.4byte	0x9c
 1177 0166 02       		.byte	0x2
 1178 0167 23       		.byte	0x23
 1179 0168 14       		.uleb128 0x14
 1180 0169 0E       		.uleb128 0xe
 1181 016a 69040000 		.4byte	.LASF23
 1182 016e 03       		.byte	0x3
 1183 016f 3B03     		.2byte	0x33b
 1184 0171 9C000000 		.4byte	0x9c
 1185 0175 02       		.byte	0x2
 1186 0176 23       		.byte	0x23
 1187 0177 18       		.uleb128 0x18
 1188 0178 0E       		.uleb128 0xe
 1189 0179 6F040000 		.4byte	.LASF24
 1190 017d 03       		.byte	0x3
 1191 017e 3C03     		.2byte	0x33c
 1192 0180 9C000000 		.4byte	0x9c
 1193 0184 02       		.byte	0x2
 1194 0185 23       		.byte	0x23
 1195 0186 1C       		.uleb128 0x1c
 1196 0187 0E       		.uleb128 0xe
 1197 0188 75040000 		.4byte	.LASF25
 1198 018c 03       		.byte	0x3
 1199 018d 3D03     		.2byte	0x33d
 1200 018f 9C000000 		.4byte	0x9c
 1201 0193 02       		.byte	0x2
 1202 0194 23       		.byte	0x23
 1203 0195 20       		.uleb128 0x20
 1204 0196 0E       		.uleb128 0xe
 1205 0197 3A000000 		.4byte	.LASF26
 1206 019b 03       		.byte	0x3
 1207 019c 3E03     		.2byte	0x33e
 1208 019e 97000000 		.4byte	0x97
 1209 01a2 02       		.byte	0x2
 1210 01a3 23       		.byte	0x23
 1211 01a4 24       		.uleb128 0x24
 1212 01a5 0E       		.uleb128 0xe
 1213 01a6 F0010000 		.4byte	.LASF27
ARM GAS  /tmp/ccDT7MPS.s 			page 40


 1214 01aa 03       		.byte	0x3
 1215 01ab 3F03     		.2byte	0x33f
 1216 01ad 97000000 		.4byte	0x97
 1217 01b1 02       		.byte	0x2
 1218 01b2 23       		.byte	0x23
 1219 01b3 28       		.uleb128 0x28
 1220 01b4 0E       		.uleb128 0xe
 1221 01b5 FD010000 		.4byte	.LASF28
 1222 01b9 03       		.byte	0x3
 1223 01ba 4003     		.2byte	0x340
 1224 01bc 97000000 		.4byte	0x97
 1225 01c0 02       		.byte	0x2
 1226 01c1 23       		.byte	0x23
 1227 01c2 2C       		.uleb128 0x2c
 1228 01c3 0E       		.uleb128 0xe
 1229 01c4 2B010000 		.4byte	.LASF29
 1230 01c8 03       		.byte	0x3
 1231 01c9 4103     		.2byte	0x341
 1232 01cb 9C000000 		.4byte	0x9c
 1233 01cf 02       		.byte	0x2
 1234 01d0 23       		.byte	0x23
 1235 01d1 30       		.uleb128 0x30
 1236 01d2 0F       		.uleb128 0xf
 1237 01d3 53544100 		.ascii	"STA\000"
 1238 01d7 03       		.byte	0x3
 1239 01d8 4203     		.2byte	0x342
 1240 01da 9C000000 		.4byte	0x9c
 1241 01de 02       		.byte	0x2
 1242 01df 23       		.byte	0x23
 1243 01e0 34       		.uleb128 0x34
 1244 01e1 0F       		.uleb128 0xf
 1245 01e2 49435200 		.ascii	"ICR\000"
 1246 01e6 03       		.byte	0x3
 1247 01e7 4303     		.2byte	0x343
 1248 01e9 97000000 		.4byte	0x97
 1249 01ed 02       		.byte	0x2
 1250 01ee 23       		.byte	0x23
 1251 01ef 38       		.uleb128 0x38
 1252 01f0 0E       		.uleb128 0xe
 1253 01f1 AB030000 		.4byte	.LASF30
 1254 01f5 03       		.byte	0x3
 1255 01f6 4403     		.2byte	0x344
 1256 01f8 97000000 		.4byte	0x97
 1257 01fc 02       		.byte	0x2
 1258 01fd 23       		.byte	0x23
 1259 01fe 3C       		.uleb128 0x3c
 1260 01ff 0E       		.uleb128 0xe
 1261 0200 96040000 		.4byte	.LASF31
 1262 0204 03       		.byte	0x3
 1263 0205 4503     		.2byte	0x345
 1264 0207 A1000000 		.4byte	0xa1
 1265 020b 02       		.byte	0x2
 1266 020c 23       		.byte	0x23
 1267 020d 40       		.uleb128 0x40
 1268 020e 0E       		.uleb128 0xe
 1269 020f 9B050000 		.4byte	.LASF32
 1270 0213 03       		.byte	0x3
ARM GAS  /tmp/ccDT7MPS.s 			page 41


 1271 0214 4603     		.2byte	0x346
 1272 0216 9C000000 		.4byte	0x9c
 1273 021a 02       		.byte	0x2
 1274 021b 23       		.byte	0x23
 1275 021c 48       		.uleb128 0x48
 1276 021d 0E       		.uleb128 0xe
 1277 021e A0040000 		.4byte	.LASF33
 1278 0222 03       		.byte	0x3
 1279 0223 4703     		.2byte	0x347
 1280 0225 3D020000 		.4byte	0x23d
 1281 0229 02       		.byte	0x2
 1282 022a 23       		.byte	0x23
 1283 022b 4C       		.uleb128 0x4c
 1284 022c 0E       		.uleb128 0xe
 1285 022d A2020000 		.4byte	.LASF34
 1286 0231 03       		.byte	0x3
 1287 0232 4803     		.2byte	0x348
 1288 0234 97000000 		.4byte	0x97
 1289 0238 03       		.byte	0x3
 1290 0239 23       		.byte	0x23
 1291 023a 8001     		.uleb128 0x80
 1292 023c 00       		.byte	0
 1293 023d 07       		.uleb128 0x7
 1294 023e 62000000 		.4byte	0x62
 1295 0242 4D020000 		.4byte	0x24d
 1296 0246 08       		.uleb128 0x8
 1297 0247 90000000 		.4byte	0x90
 1298 024b 0C       		.byte	0xc
 1299 024c 00       		.byte	0
 1300 024d 0C       		.uleb128 0xc
 1301 024e F9030000 		.4byte	.LASF35
 1302 0252 03       		.byte	0x3
 1303 0253 4903     		.2byte	0x349
 1304 0255 06010000 		.4byte	0x106
 1305 0259 10       		.uleb128 0x10
 1306 025a 18       		.byte	0x18
 1307 025b 04       		.byte	0x4
 1308 025c 32       		.byte	0x32
 1309 025d B6020000 		.4byte	0x2b6
 1310 0261 11       		.uleb128 0x11
 1311 0262 00000000 		.4byte	.LASF36
 1312 0266 04       		.byte	0x4
 1313 0267 34       		.byte	0x34
 1314 0268 62000000 		.4byte	0x62
 1315 026c 02       		.byte	0x2
 1316 026d 23       		.byte	0x23
 1317 026e 00       		.uleb128 0
 1318 026f 11       		.uleb128 0x11
 1319 0270 0F000000 		.4byte	.LASF37
 1320 0274 04       		.byte	0x4
 1321 0275 37       		.byte	0x37
 1322 0276 62000000 		.4byte	0x62
 1323 027a 02       		.byte	0x2
 1324 027b 23       		.byte	0x23
 1325 027c 04       		.uleb128 0x4
 1326 027d 11       		.uleb128 0x11
 1327 027e F8020000 		.4byte	.LASF38
ARM GAS  /tmp/ccDT7MPS.s 			page 42


 1328 0282 04       		.byte	0x4
 1329 0283 3B       		.byte	0x3b
 1330 0284 62000000 		.4byte	0x62
 1331 0288 02       		.byte	0x2
 1332 0289 23       		.byte	0x23
 1333 028a 08       		.uleb128 0x8
 1334 028b 11       		.uleb128 0x11
 1335 028c FA040000 		.4byte	.LASF39
 1336 0290 04       		.byte	0x4
 1337 0291 3F       		.byte	0x3f
 1338 0292 62000000 		.4byte	0x62
 1339 0296 02       		.byte	0x2
 1340 0297 23       		.byte	0x23
 1341 0298 0C       		.uleb128 0xc
 1342 0299 11       		.uleb128 0x11
 1343 029a A7010000 		.4byte	.LASF40
 1344 029e 04       		.byte	0x4
 1345 029f 42       		.byte	0x42
 1346 02a0 62000000 		.4byte	0x62
 1347 02a4 02       		.byte	0x2
 1348 02a5 23       		.byte	0x23
 1349 02a6 10       		.uleb128 0x10
 1350 02a7 11       		.uleb128 0x11
 1351 02a8 32010000 		.4byte	.LASF41
 1352 02ac 04       		.byte	0x4
 1353 02ad 45       		.byte	0x45
 1354 02ae 30000000 		.4byte	0x30
 1355 02b2 02       		.byte	0x2
 1356 02b3 23       		.byte	0x23
 1357 02b4 14       		.uleb128 0x14
 1358 02b5 00       		.byte	0
 1359 02b6 03       		.uleb128 0x3
 1360 02b7 41000000 		.4byte	.LASF42
 1361 02bb 04       		.byte	0x4
 1362 02bc 48       		.byte	0x48
 1363 02bd 59020000 		.4byte	0x259
 1364 02c1 10       		.uleb128 0x10
 1365 02c2 14       		.byte	0x14
 1366 02c3 04       		.byte	0x4
 1367 02c4 4A       		.byte	0x4a
 1368 02c5 10030000 		.4byte	0x310
 1369 02c9 11       		.uleb128 0x11
 1370 02ca D3000000 		.4byte	.LASF43
 1371 02ce 04       		.byte	0x4
 1372 02cf 4C       		.byte	0x4c
 1373 02d0 62000000 		.4byte	0x62
 1374 02d4 02       		.byte	0x2
 1375 02d5 23       		.byte	0x23
 1376 02d6 00       		.uleb128 0
 1377 02d7 11       		.uleb128 0x11
 1378 02d8 60010000 		.4byte	.LASF44
 1379 02dc 04       		.byte	0x4
 1380 02dd 51       		.byte	0x51
 1381 02de 62000000 		.4byte	0x62
 1382 02e2 02       		.byte	0x2
 1383 02e3 23       		.byte	0x23
 1384 02e4 04       		.uleb128 0x4
ARM GAS  /tmp/ccDT7MPS.s 			page 43


 1385 02e5 11       		.uleb128 0x11
 1386 02e6 4C020000 		.4byte	.LASF45
 1387 02ea 04       		.byte	0x4
 1388 02eb 53       		.byte	0x53
 1389 02ec 62000000 		.4byte	0x62
 1390 02f0 02       		.byte	0x2
 1391 02f1 23       		.byte	0x23
 1392 02f2 08       		.uleb128 0x8
 1393 02f3 11       		.uleb128 0x11
 1394 02f4 59040000 		.4byte	.LASF46
 1395 02f8 04       		.byte	0x4
 1396 02f9 56       		.byte	0x56
 1397 02fa 62000000 		.4byte	0x62
 1398 02fe 02       		.byte	0x2
 1399 02ff 23       		.byte	0x23
 1400 0300 0C       		.uleb128 0xc
 1401 0301 11       		.uleb128 0x11
 1402 0302 A3050000 		.4byte	.LASF47
 1403 0306 04       		.byte	0x4
 1404 0307 59       		.byte	0x59
 1405 0308 62000000 		.4byte	0x62
 1406 030c 02       		.byte	0x2
 1407 030d 23       		.byte	0x23
 1408 030e 10       		.uleb128 0x10
 1409 030f 00       		.byte	0
 1410 0310 03       		.uleb128 0x3
 1411 0311 34050000 		.4byte	.LASF48
 1412 0315 04       		.byte	0x4
 1413 0316 5C       		.byte	0x5c
 1414 0317 C1020000 		.4byte	0x2c1
 1415 031b 10       		.uleb128 0x10
 1416 031c 18       		.byte	0x18
 1417 031d 04       		.byte	0x4
 1418 031e 5E       		.byte	0x5e
 1419 031f 78030000 		.4byte	0x378
 1420 0323 11       		.uleb128 0x11
 1421 0324 3B020000 		.4byte	.LASF49
 1422 0328 04       		.byte	0x4
 1423 0329 60       		.byte	0x60
 1424 032a 62000000 		.4byte	0x62
 1425 032e 02       		.byte	0x2
 1426 032f 23       		.byte	0x23
 1427 0330 00       		.uleb128 0
 1428 0331 11       		.uleb128 0x11
 1429 0332 08010000 		.4byte	.LASF50
 1430 0336 04       		.byte	0x4
 1431 0337 62       		.byte	0x62
 1432 0338 62000000 		.4byte	0x62
 1433 033c 02       		.byte	0x2
 1434 033d 23       		.byte	0x23
 1435 033e 04       		.uleb128 0x4
 1436 033f 11       		.uleb128 0x11
 1437 0340 18010000 		.4byte	.LASF51
 1438 0344 04       		.byte	0x4
 1439 0345 64       		.byte	0x64
 1440 0346 62000000 		.4byte	0x62
 1441 034a 02       		.byte	0x2
ARM GAS  /tmp/ccDT7MPS.s 			page 44


 1442 034b 23       		.byte	0x23
 1443 034c 08       		.uleb128 0x8
 1444 034d 11       		.uleb128 0x11
 1445 034e 5A020000 		.4byte	.LASF52
 1446 0352 04       		.byte	0x4
 1447 0353 67       		.byte	0x67
 1448 0354 62000000 		.4byte	0x62
 1449 0358 02       		.byte	0x2
 1450 0359 23       		.byte	0x23
 1451 035a 0C       		.uleb128 0xc
 1452 035b 11       		.uleb128 0x11
 1453 035c FF050000 		.4byte	.LASF53
 1454 0360 04       		.byte	0x4
 1455 0361 6B       		.byte	0x6b
 1456 0362 62000000 		.4byte	0x62
 1457 0366 02       		.byte	0x2
 1458 0367 23       		.byte	0x23
 1459 0368 10       		.uleb128 0x10
 1460 0369 11       		.uleb128 0x11
 1461 036a 9D010000 		.4byte	.LASF54
 1462 036e 04       		.byte	0x4
 1463 036f 6E       		.byte	0x6e
 1464 0370 62000000 		.4byte	0x62
 1465 0374 02       		.byte	0x2
 1466 0375 23       		.byte	0x23
 1467 0376 14       		.uleb128 0x14
 1468 0377 00       		.byte	0
 1469 0378 03       		.uleb128 0x3
 1470 0379 6B050000 		.4byte	.LASF55
 1471 037d 04       		.byte	0x4
 1472 037e 71       		.byte	0x71
 1473 037f 1B030000 		.4byte	0x31b
 1474 0383 12       		.uleb128 0x12
 1475 0384 01       		.byte	0x1
 1476 0385 8F050000 		.4byte	.LASF56
 1477 0389 01       		.byte	0x1
 1478 038a 0A01     		.2byte	0x10a
 1479 038c 01       		.byte	0x1
 1480 038d 00000000 		.4byte	.LFB110
 1481 0391 1A000000 		.4byte	.LFE110
 1482 0395 00000000 		.4byte	.LLST0
 1483 0399 01       		.byte	0x1
 1484 039a D0030000 		.4byte	0x3d0
 1485 039e 13       		.uleb128 0x13
 1486 039f 0C000000 		.4byte	.LVL0
 1487 03a3 D8080000 		.4byte	0x8d8
 1488 03a7 B8030000 		.4byte	0x3b8
 1489 03ab 14       		.uleb128 0x14
 1490 03ac 01       		.byte	0x1
 1491 03ad 51       		.byte	0x51
 1492 03ae 01       		.byte	0x1
 1493 03af 31       		.byte	0x31
 1494 03b0 14       		.uleb128 0x14
 1495 03b1 01       		.byte	0x1
 1496 03b2 50       		.byte	0x50
 1497 03b3 03       		.byte	0x3
 1498 03b4 0A       		.byte	0xa
ARM GAS  /tmp/ccDT7MPS.s 			page 45


 1499 03b5 0008     		.2byte	0x800
 1500 03b7 00       		.byte	0
 1501 03b8 15       		.uleb128 0x15
 1502 03b9 1A000000 		.4byte	.LVL1
 1503 03bd 01       		.byte	0x1
 1504 03be D8080000 		.4byte	0x8d8
 1505 03c2 14       		.uleb128 0x14
 1506 03c3 01       		.byte	0x1
 1507 03c4 51       		.byte	0x51
 1508 03c5 01       		.byte	0x1
 1509 03c6 30       		.byte	0x30
 1510 03c7 14       		.uleb128 0x14
 1511 03c8 01       		.byte	0x1
 1512 03c9 50       		.byte	0x50
 1513 03ca 03       		.byte	0x3
 1514 03cb 0A       		.byte	0xa
 1515 03cc 0008     		.2byte	0x800
 1516 03ce 00       		.byte	0
 1517 03cf 00       		.byte	0
 1518 03d0 12       		.uleb128 0x12
 1519 03d1 01       		.byte	0x1
 1520 03d2 30000000 		.4byte	.LASF57
 1521 03d6 01       		.byte	0x1
 1522 03d7 1701     		.2byte	0x117
 1523 03d9 01       		.byte	0x1
 1524 03da 00000000 		.4byte	.LFB111
 1525 03de 30000000 		.4byte	.LFE111
 1526 03e2 20000000 		.4byte	.LLST1
 1527 03e6 01       		.byte	0x1
 1528 03e7 0C040000 		.4byte	0x40c
 1529 03eb 16       		.uleb128 0x16
 1530 03ec 7B020000 		.4byte	.LASF59
 1531 03f0 01       		.byte	0x1
 1532 03f1 1701     		.2byte	0x117
 1533 03f3 0C040000 		.4byte	0x40c
 1534 03f7 40000000 		.4byte	.LLST2
 1535 03fb 17       		.uleb128 0x17
 1536 03fc 0C030000 		.4byte	.LASF66
 1537 0400 01       		.byte	0x1
 1538 0401 1901     		.2byte	0x119
 1539 0403 62000000 		.4byte	0x62
 1540 0407 61000000 		.4byte	.LLST3
 1541 040b 00       		.byte	0
 1542 040c 18       		.uleb128 0x18
 1543 040d 04       		.byte	0x4
 1544 040e B6020000 		.4byte	0x2b6
 1545 0412 19       		.uleb128 0x19
 1546 0413 01       		.byte	0x1
 1547 0414 E3020000 		.4byte	.LASF58
 1548 0418 01       		.byte	0x1
 1549 0419 3D01     		.2byte	0x13d
 1550 041b 01       		.byte	0x1
 1551 041c 00000000 		.4byte	.LFB112
 1552 0420 10000000 		.4byte	.LFE112
 1553 0424 02       		.byte	0x2
 1554 0425 7D       		.byte	0x7d
 1555 0426 00       		.sleb128 0
ARM GAS  /tmp/ccDT7MPS.s 			page 46


 1556 0427 01       		.byte	0x1
 1557 0428 3B040000 		.4byte	0x43b
 1558 042c 1A       		.uleb128 0x1a
 1559 042d 7B020000 		.4byte	.LASF59
 1560 0431 01       		.byte	0x1
 1561 0432 3D01     		.2byte	0x13d
 1562 0434 0C040000 		.4byte	0x40c
 1563 0438 01       		.byte	0x1
 1564 0439 50       		.byte	0x50
 1565 043a 00       		.byte	0
 1566 043b 19       		.uleb128 0x19
 1567 043c 01       		.byte	0x1
 1568 043d 09020000 		.4byte	.LASF60
 1569 0441 01       		.byte	0x1
 1570 0442 4E01     		.2byte	0x14e
 1571 0444 01       		.byte	0x1
 1572 0445 00000000 		.4byte	.LFB113
 1573 0449 0C000000 		.4byte	.LFE113
 1574 044d 02       		.byte	0x2
 1575 044e 7D       		.byte	0x7d
 1576 044f 00       		.sleb128 0
 1577 0450 01       		.byte	0x1
 1578 0451 64040000 		.4byte	0x464
 1579 0455 1A       		.uleb128 0x1a
 1580 0456 17020000 		.4byte	.LASF61
 1581 045a 01       		.byte	0x1
 1582 045b 4E01     		.2byte	0x14e
 1583 045d FA000000 		.4byte	0xfa
 1584 0461 01       		.byte	0x1
 1585 0462 50       		.byte	0x50
 1586 0463 00       		.byte	0
 1587 0464 19       		.uleb128 0x19
 1588 0465 01       		.byte	0x1
 1589 0466 BC040000 		.4byte	.LASF62
 1590 046a 01       		.byte	0x1
 1591 046b 5E01     		.2byte	0x15e
 1592 046d 01       		.byte	0x1
 1593 046e 00000000 		.4byte	.LFB114
 1594 0472 0C000000 		.4byte	.LFE114
 1595 0476 02       		.byte	0x2
 1596 0477 7D       		.byte	0x7d
 1597 0478 00       		.sleb128 0
 1598 0479 01       		.byte	0x1
 1599 047a 8D040000 		.4byte	0x48d
 1600 047e 1A       		.uleb128 0x1a
 1601 047f D3020000 		.4byte	.LASF63
 1602 0483 01       		.byte	0x1
 1603 0484 5E01     		.2byte	0x15e
 1604 0486 62000000 		.4byte	0x62
 1605 048a 01       		.byte	0x1
 1606 048b 50       		.byte	0x50
 1607 048c 00       		.byte	0
 1608 048d 1B       		.uleb128 0x1b
 1609 048e 01       		.byte	0x1
 1610 048f 28020000 		.4byte	.LASF68
 1611 0493 01       		.byte	0x1
 1612 0494 6F01     		.2byte	0x16f
ARM GAS  /tmp/ccDT7MPS.s 			page 47


 1613 0496 01       		.byte	0x1
 1614 0497 62000000 		.4byte	0x62
 1615 049b 00000000 		.4byte	.LFB115
 1616 049f 10000000 		.4byte	.LFE115
 1617 04a3 02       		.byte	0x2
 1618 04a4 7D       		.byte	0x7d
 1619 04a5 00       		.sleb128 0
 1620 04a6 01       		.byte	0x1
 1621 04a7 12       		.uleb128 0x12
 1622 04a8 01       		.byte	0x1
 1623 04a9 6A000000 		.4byte	.LASF64
 1624 04ad 01       		.byte	0x1
 1625 04ae 8F01     		.2byte	0x18f
 1626 04b0 01       		.byte	0x1
 1627 04b1 00000000 		.4byte	.LFB116
 1628 04b5 2C000000 		.4byte	.LFE116
 1629 04b9 91000000 		.4byte	.LLST4
 1630 04bd 01       		.byte	0x1
 1631 04be E3040000 		.4byte	0x4e3
 1632 04c2 16       		.uleb128 0x16
 1633 04c3 CF040000 		.4byte	.LASF65
 1634 04c7 01       		.byte	0x1
 1635 04c8 8F01     		.2byte	0x18f
 1636 04ca E3040000 		.4byte	0x4e3
 1637 04ce B1000000 		.4byte	.LLST5
 1638 04d2 17       		.uleb128 0x17
 1639 04d3 0C030000 		.4byte	.LASF66
 1640 04d7 01       		.byte	0x1
 1641 04d8 9101     		.2byte	0x191
 1642 04da 62000000 		.4byte	0x62
 1643 04de D2000000 		.4byte	.LLST6
 1644 04e2 00       		.byte	0
 1645 04e3 18       		.uleb128 0x18
 1646 04e4 04       		.byte	0x4
 1647 04e5 10030000 		.4byte	0x310
 1648 04e9 19       		.uleb128 0x19
 1649 04ea 01       		.byte	0x1
 1650 04eb 07050000 		.4byte	.LASF67
 1651 04ef 01       		.byte	0x1
 1652 04f0 B301     		.2byte	0x1b3
 1653 04f2 01       		.byte	0x1
 1654 04f3 00000000 		.4byte	.LFB117
 1655 04f7 0E000000 		.4byte	.LFE117
 1656 04fb 02       		.byte	0x2
 1657 04fc 7D       		.byte	0x7d
 1658 04fd 00       		.sleb128 0
 1659 04fe 01       		.byte	0x1
 1660 04ff 12050000 		.4byte	0x512
 1661 0503 1A       		.uleb128 0x1a
 1662 0504 CF040000 		.4byte	.LASF65
 1663 0508 01       		.byte	0x1
 1664 0509 B301     		.2byte	0x1b3
 1665 050b E3040000 		.4byte	0x4e3
 1666 050f 01       		.byte	0x1
 1667 0510 50       		.byte	0x50
 1668 0511 00       		.byte	0
 1669 0512 1B       		.uleb128 0x1b
ARM GAS  /tmp/ccDT7MPS.s 			page 48


 1670 0513 01       		.byte	0x1
 1671 0514 17040000 		.4byte	.LASF69
 1672 0518 01       		.byte	0x1
 1673 0519 C201     		.2byte	0x1c2
 1674 051b 01       		.byte	0x1
 1675 051c 30000000 		.4byte	0x30
 1676 0520 00000000 		.4byte	.LFB118
 1677 0524 0C000000 		.4byte	.LFE118
 1678 0528 02       		.byte	0x2
 1679 0529 7D       		.byte	0x7d
 1680 052a 00       		.sleb128 0
 1681 052b 01       		.byte	0x1
 1682 052c 1C       		.uleb128 0x1c
 1683 052d 01       		.byte	0x1
 1684 052e 06040000 		.4byte	.LASF91
 1685 0532 01       		.byte	0x1
 1686 0533 D101     		.2byte	0x1d1
 1687 0535 01       		.byte	0x1
 1688 0536 62000000 		.4byte	0x62
 1689 053a 00000000 		.4byte	.LFB119
 1690 053e 18000000 		.4byte	.LFE119
 1691 0542 FC000000 		.4byte	.LLST7
 1692 0546 01       		.byte	0x1
 1693 0547 6C050000 		.4byte	0x56c
 1694 054b 16       		.uleb128 0x16
 1695 054c 7B000000 		.4byte	.LASF70
 1696 0550 01       		.byte	0x1
 1697 0551 D101     		.2byte	0x1d1
 1698 0553 62000000 		.4byte	0x62
 1699 0557 1C010000 		.4byte	.LLST8
 1700 055b 1D       		.uleb128 0x1d
 1701 055c 746D7000 		.ascii	"tmp\000"
 1702 0560 01       		.byte	0x1
 1703 0561 D301     		.2byte	0x1d3
 1704 0563 97000000 		.4byte	0x97
 1705 0567 54010000 		.4byte	.LLST9
 1706 056b 00       		.byte	0
 1707 056c 12       		.uleb128 0x12
 1708 056d 01       		.byte	0x1
 1709 056e 13030000 		.4byte	.LASF71
 1710 0572 01       		.byte	0x1
 1711 0573 F701     		.2byte	0x1f7
 1712 0575 01       		.byte	0x1
 1713 0576 00000000 		.4byte	.LFB120
 1714 057a 2C000000 		.4byte	.LFE120
 1715 057e 68010000 		.4byte	.LLST10
 1716 0582 01       		.byte	0x1
 1717 0583 A8050000 		.4byte	0x5a8
 1718 0587 16       		.uleb128 0x16
 1719 0588 4A030000 		.4byte	.LASF72
 1720 058c 01       		.byte	0x1
 1721 058d F701     		.2byte	0x1f7
 1722 058f A8050000 		.4byte	0x5a8
 1723 0593 88010000 		.4byte	.LLST11
 1724 0597 17       		.uleb128 0x17
 1725 0598 0C030000 		.4byte	.LASF66
 1726 059c 01       		.byte	0x1
ARM GAS  /tmp/ccDT7MPS.s 			page 49


 1727 059d F901     		.2byte	0x1f9
 1728 059f 62000000 		.4byte	0x62
 1729 05a3 A9010000 		.4byte	.LLST12
 1730 05a7 00       		.byte	0
 1731 05a8 18       		.uleb128 0x18
 1732 05a9 04       		.byte	0x4
 1733 05aa 78030000 		.4byte	0x378
 1734 05ae 19       		.uleb128 0x19
 1735 05af 01       		.byte	0x1
 1736 05b0 8A030000 		.4byte	.LASF73
 1737 05b4 01       		.byte	0x1
 1738 05b5 2002     		.2byte	0x220
 1739 05b7 01       		.byte	0x1
 1740 05b8 00000000 		.4byte	.LFB121
 1741 05bc 14000000 		.4byte	.LFE121
 1742 05c0 02       		.byte	0x2
 1743 05c1 7D       		.byte	0x7d
 1744 05c2 00       		.sleb128 0
 1745 05c3 01       		.byte	0x1
 1746 05c4 D7050000 		.4byte	0x5d7
 1747 05c8 1A       		.uleb128 0x1a
 1748 05c9 4A030000 		.4byte	.LASF72
 1749 05cd 01       		.byte	0x1
 1750 05ce 2002     		.2byte	0x220
 1751 05d0 A8050000 		.4byte	0x5a8
 1752 05d4 01       		.byte	0x1
 1753 05d5 50       		.byte	0x50
 1754 05d6 00       		.byte	0
 1755 05d7 1B       		.uleb128 0x1b
 1756 05d8 01       		.byte	0x1
 1757 05d9 CA010000 		.4byte	.LASF74
 1758 05dd 01       		.byte	0x1
 1759 05de 3002     		.2byte	0x230
 1760 05e0 01       		.byte	0x1
 1761 05e1 62000000 		.4byte	0x62
 1762 05e5 00000000 		.4byte	.LFB122
 1763 05e9 0C000000 		.4byte	.LFE122
 1764 05ed 02       		.byte	0x2
 1765 05ee 7D       		.byte	0x7d
 1766 05ef 00       		.sleb128 0
 1767 05f0 01       		.byte	0x1
 1768 05f1 1B       		.uleb128 0x1b
 1769 05f2 01       		.byte	0x1
 1770 05f3 5D050000 		.4byte	.LASF75
 1771 05f7 01       		.byte	0x1
 1772 05f8 3A02     		.2byte	0x23a
 1773 05fa 01       		.byte	0x1
 1774 05fb 62000000 		.4byte	0x62
 1775 05ff 00000000 		.4byte	.LFB123
 1776 0603 0C000000 		.4byte	.LFE123
 1777 0607 02       		.byte	0x2
 1778 0608 7D       		.byte	0x7d
 1779 0609 00       		.sleb128 0
 1780 060a 01       		.byte	0x1
 1781 060b 19       		.uleb128 0x19
 1782 060c 01       		.byte	0x1
 1783 060d 4E050000 		.4byte	.LASF76
ARM GAS  /tmp/ccDT7MPS.s 			page 50


 1784 0611 01       		.byte	0x1
 1785 0612 4402     		.2byte	0x244
 1786 0614 01       		.byte	0x1
 1787 0615 00000000 		.4byte	.LFB124
 1788 0619 0C000000 		.4byte	.LFE124
 1789 061d 02       		.byte	0x2
 1790 061e 7D       		.byte	0x7d
 1791 061f 00       		.sleb128 0
 1792 0620 01       		.byte	0x1
 1793 0621 34060000 		.4byte	0x634
 1794 0625 1A       		.uleb128 0x1a
 1795 0626 F3020000 		.4byte	.LASF77
 1796 062a 01       		.byte	0x1
 1797 062b 4402     		.2byte	0x244
 1798 062d 62000000 		.4byte	0x62
 1799 0631 01       		.byte	0x1
 1800 0632 50       		.byte	0x50
 1801 0633 00       		.byte	0
 1802 0634 1B       		.uleb128 0x1b
 1803 0635 01       		.byte	0x1
 1804 0636 DE010000 		.4byte	.LASF78
 1805 063a 01       		.byte	0x1
 1806 063b 4E02     		.2byte	0x24e
 1807 063d 01       		.byte	0x1
 1808 063e 62000000 		.4byte	0x62
 1809 0642 00000000 		.4byte	.LFB125
 1810 0646 0C000000 		.4byte	.LFE125
 1811 064a 02       		.byte	0x2
 1812 064b 7D       		.byte	0x7d
 1813 064c 00       		.sleb128 0
 1814 064d 01       		.byte	0x1
 1815 064e 19       		.uleb128 0x19
 1816 064f 01       		.byte	0x1
 1817 0650 8B020000 		.4byte	.LASF79
 1818 0654 01       		.byte	0x1
 1819 0655 6B02     		.2byte	0x26b
 1820 0657 01       		.byte	0x1
 1821 0658 00000000 		.4byte	.LFB126
 1822 065c 0C000000 		.4byte	.LFE126
 1823 0660 02       		.byte	0x2
 1824 0661 7D       		.byte	0x7d
 1825 0662 00       		.sleb128 0
 1826 0663 01       		.byte	0x1
 1827 0664 77060000 		.4byte	0x677
 1828 0668 1A       		.uleb128 0x1a
 1829 0669 17020000 		.4byte	.LASF61
 1830 066d 01       		.byte	0x1
 1831 066e 6B02     		.2byte	0x26b
 1832 0670 FA000000 		.4byte	0xfa
 1833 0674 01       		.byte	0x1
 1834 0675 50       		.byte	0x50
 1835 0676 00       		.byte	0
 1836 0677 19       		.uleb128 0x19
 1837 0678 01       		.byte	0x1
 1838 0679 87010000 		.4byte	.LASF80
 1839 067d 01       		.byte	0x1
 1840 067e 7902     		.2byte	0x279
ARM GAS  /tmp/ccDT7MPS.s 			page 51


 1841 0680 01       		.byte	0x1
 1842 0681 00000000 		.4byte	.LFB127
 1843 0685 0C000000 		.4byte	.LFE127
 1844 0689 02       		.byte	0x2
 1845 068a 7D       		.byte	0x7d
 1846 068b 00       		.sleb128 0
 1847 068c 01       		.byte	0x1
 1848 068d A0060000 		.4byte	0x6a0
 1849 0691 1A       		.uleb128 0x1a
 1850 0692 17020000 		.4byte	.LASF61
 1851 0696 01       		.byte	0x1
 1852 0697 7902     		.2byte	0x279
 1853 0699 FA000000 		.4byte	0xfa
 1854 069d 01       		.byte	0x1
 1855 069e 50       		.byte	0x50
 1856 069f 00       		.byte	0
 1857 06a0 19       		.uleb128 0x19
 1858 06a1 01       		.byte	0x1
 1859 06a2 6E010000 		.4byte	.LASF81
 1860 06a6 01       		.byte	0x1
 1861 06a7 8902     		.2byte	0x289
 1862 06a9 01       		.byte	0x1
 1863 06aa 00000000 		.4byte	.LFB128
 1864 06ae 0C000000 		.4byte	.LFE128
 1865 06b2 02       		.byte	0x2
 1866 06b3 7D       		.byte	0x7d
 1867 06b4 00       		.sleb128 0
 1868 06b5 01       		.byte	0x1
 1869 06b6 C9060000 		.4byte	0x6c9
 1870 06ba 1A       		.uleb128 0x1a
 1871 06bb 4E010000 		.4byte	.LASF82
 1872 06bf 01       		.byte	0x1
 1873 06c0 8902     		.2byte	0x289
 1874 06c2 62000000 		.4byte	0x62
 1875 06c6 01       		.byte	0x1
 1876 06c7 50       		.byte	0x50
 1877 06c8 00       		.byte	0
 1878 06c9 19       		.uleb128 0x19
 1879 06ca 01       		.byte	0x1
 1880 06cb F2000000 		.4byte	.LASF83
 1881 06cf 01       		.byte	0x1
 1882 06d0 9702     		.2byte	0x297
 1883 06d2 01       		.byte	0x1
 1884 06d3 00000000 		.4byte	.LFB129
 1885 06d7 0C000000 		.4byte	.LFE129
 1886 06db 02       		.byte	0x2
 1887 06dc 7D       		.byte	0x7d
 1888 06dd 00       		.sleb128 0
 1889 06de 01       		.byte	0x1
 1890 06df F2060000 		.4byte	0x6f2
 1891 06e3 1A       		.uleb128 0x1a
 1892 06e4 17020000 		.4byte	.LASF61
 1893 06e8 01       		.byte	0x1
 1894 06e9 9702     		.2byte	0x297
 1895 06eb FA000000 		.4byte	0xfa
 1896 06ef 01       		.byte	0x1
 1897 06f0 50       		.byte	0x50
ARM GAS  /tmp/ccDT7MPS.s 			page 52


 1898 06f1 00       		.byte	0
 1899 06f2 19       		.uleb128 0x19
 1900 06f3 01       		.byte	0x1
 1901 06f4 52000000 		.4byte	.LASF84
 1902 06f8 01       		.byte	0x1
 1903 06f9 A502     		.2byte	0x2a5
 1904 06fb 01       		.byte	0x1
 1905 06fc 00000000 		.4byte	.LFB130
 1906 0700 0C000000 		.4byte	.LFE130
 1907 0704 02       		.byte	0x2
 1908 0705 7D       		.byte	0x7d
 1909 0706 00       		.sleb128 0
 1910 0707 01       		.byte	0x1
 1911 0708 1B070000 		.4byte	0x71b
 1912 070c 1A       		.uleb128 0x1a
 1913 070d 17020000 		.4byte	.LASF61
 1914 0711 01       		.byte	0x1
 1915 0712 A502     		.2byte	0x2a5
 1916 0714 FA000000 		.4byte	0xfa
 1917 0718 01       		.byte	0x1
 1918 0719 50       		.byte	0x50
 1919 071a 00       		.byte	0
 1920 071b 19       		.uleb128 0x19
 1921 071c 01       		.byte	0x1
 1922 071d 1A050000 		.4byte	.LASF85
 1923 0721 01       		.byte	0x1
 1924 0722 C502     		.2byte	0x2c5
 1925 0724 01       		.byte	0x1
 1926 0725 00000000 		.4byte	.LFB131
 1927 0729 0C000000 		.4byte	.LFE131
 1928 072d 02       		.byte	0x2
 1929 072e 7D       		.byte	0x7d
 1930 072f 00       		.sleb128 0
 1931 0730 01       		.byte	0x1
 1932 0731 44070000 		.4byte	0x744
 1933 0735 1A       		.uleb128 0x1a
 1934 0736 17020000 		.4byte	.LASF61
 1935 073a 01       		.byte	0x1
 1936 073b C502     		.2byte	0x2c5
 1937 073d FA000000 		.4byte	0xfa
 1938 0741 01       		.byte	0x1
 1939 0742 50       		.byte	0x50
 1940 0743 00       		.byte	0
 1941 0744 19       		.uleb128 0x19
 1942 0745 01       		.byte	0x1
 1943 0746 20000000 		.4byte	.LASF86
 1944 074a 01       		.byte	0x1
 1945 074b D302     		.2byte	0x2d3
 1946 074d 01       		.byte	0x1
 1947 074e 00000000 		.4byte	.LFB132
 1948 0752 14000000 		.4byte	.LFE132
 1949 0756 02       		.byte	0x2
 1950 0757 7D       		.byte	0x7d
 1951 0758 00       		.sleb128 0
 1952 0759 01       		.byte	0x1
 1953 075a 6F070000 		.4byte	0x76f
 1954 075e 16       		.uleb128 0x16
ARM GAS  /tmp/ccDT7MPS.s 			page 53


 1955 075f 17020000 		.4byte	.LASF61
 1956 0763 01       		.byte	0x1
 1957 0764 D302     		.2byte	0x2d3
 1958 0766 FA000000 		.4byte	0xfa
 1959 076a D3010000 		.4byte	.LLST13
 1960 076e 00       		.byte	0
 1961 076f 19       		.uleb128 0x19
 1962 0770 01       		.byte	0x1
 1963 0771 E8040000 		.4byte	.LASF87
 1964 0775 01       		.byte	0x1
 1965 0776 E102     		.2byte	0x2e1
 1966 0778 01       		.byte	0x1
 1967 0779 00000000 		.4byte	.LFB133
 1968 077d 0C000000 		.4byte	.LFE133
 1969 0781 02       		.byte	0x2
 1970 0782 7D       		.byte	0x7d
 1971 0783 00       		.sleb128 0
 1972 0784 01       		.byte	0x1
 1973 0785 98070000 		.4byte	0x798
 1974 0789 1A       		.uleb128 0x1a
 1975 078a 17020000 		.4byte	.LASF61
 1976 078e 01       		.byte	0x1
 1977 078f E102     		.2byte	0x2e1
 1978 0791 FA000000 		.4byte	0xfa
 1979 0795 01       		.byte	0x1
 1980 0796 50       		.byte	0x50
 1981 0797 00       		.byte	0
 1982 0798 19       		.uleb128 0x19
 1983 0799 01       		.byte	0x1
 1984 079a C7020000 		.4byte	.LASF88
 1985 079e 01       		.byte	0x1
 1986 079f 0103     		.2byte	0x301
 1987 07a1 01       		.byte	0x1
 1988 07a2 00000000 		.4byte	.LFB134
 1989 07a6 0C000000 		.4byte	.LFE134
 1990 07aa 02       		.byte	0x2
 1991 07ab 7D       		.byte	0x7d
 1992 07ac 00       		.sleb128 0
 1993 07ad 01       		.byte	0x1
 1994 07ae C1070000 		.4byte	0x7c1
 1995 07b2 1A       		.uleb128 0x1a
 1996 07b3 17020000 		.4byte	.LASF61
 1997 07b7 01       		.byte	0x1
 1998 07b8 0103     		.2byte	0x301
 1999 07ba FA000000 		.4byte	0xfa
 2000 07be 01       		.byte	0x1
 2001 07bf 50       		.byte	0x50
 2002 07c0 00       		.byte	0
 2003 07c1 19       		.uleb128 0x19
 2004 07c2 01       		.byte	0x1
 2005 07c3 F1050000 		.4byte	.LASF89
 2006 07c7 01       		.byte	0x1
 2007 07c8 3B03     		.2byte	0x33b
 2008 07ca 01       		.byte	0x1
 2009 07cb 00000000 		.4byte	.LFB135
 2010 07cf 18000000 		.4byte	.LFE135
 2011 07d3 02       		.byte	0x2
ARM GAS  /tmp/ccDT7MPS.s 			page 54


 2012 07d4 7D       		.byte	0x7d
 2013 07d5 00       		.sleb128 0
 2014 07d6 01       		.byte	0x1
 2015 07d7 FA070000 		.4byte	0x7fa
 2016 07db 16       		.uleb128 0x16
 2017 07dc 34030000 		.4byte	.LASF90
 2018 07e0 01       		.byte	0x1
 2019 07e1 3B03     		.2byte	0x33b
 2020 07e3 62000000 		.4byte	0x62
 2021 07e7 F4010000 		.4byte	.LLST14
 2022 07eb 1A       		.uleb128 0x1a
 2023 07ec 17020000 		.4byte	.LASF61
 2024 07f0 01       		.byte	0x1
 2025 07f1 3B03     		.2byte	0x33b
 2026 07f3 FA000000 		.4byte	0xfa
 2027 07f7 01       		.byte	0x1
 2028 07f8 51       		.byte	0x51
 2029 07f9 00       		.byte	0
 2030 07fa 1E       		.uleb128 0x1e
 2031 07fb 01       		.byte	0x1
 2032 07fc CC050000 		.4byte	.LASF92
 2033 0800 01       		.byte	0x1
 2034 0801 6B03     		.2byte	0x36b
 2035 0803 01       		.byte	0x1
 2036 0804 CC000000 		.4byte	0xcc
 2037 0808 00000000 		.4byte	.LFB136
 2038 080c 14000000 		.4byte	.LFE136
 2039 0810 02       		.byte	0x2
 2040 0811 7D       		.byte	0x7d
 2041 0812 00       		.sleb128 0
 2042 0813 01       		.byte	0x1
 2043 0814 39080000 		.4byte	0x839
 2044 0818 16       		.uleb128 0x16
 2045 0819 83040000 		.4byte	.LASF93
 2046 081d 01       		.byte	0x1
 2047 081e 6B03     		.2byte	0x36b
 2048 0820 62000000 		.4byte	0x62
 2049 0824 2E020000 		.4byte	.LLST15
 2050 0828 17       		.uleb128 0x17
 2051 0829 BA050000 		.4byte	.LASF94
 2052 082d 01       		.byte	0x1
 2053 082e 6D03     		.2byte	0x36d
 2054 0830 CC000000 		.4byte	0xcc
 2055 0834 4F020000 		.4byte	.LLST16
 2056 0838 00       		.byte	0
 2057 0839 19       		.uleb128 0x19
 2058 083a 01       		.byte	0x1
 2059 083b 80050000 		.4byte	.LASF95
 2060 083f 01       		.byte	0x1
 2061 0840 9003     		.2byte	0x390
 2062 0842 01       		.byte	0x1
 2063 0843 00000000 		.4byte	.LFB137
 2064 0847 0C000000 		.4byte	.LFE137
 2065 084b 02       		.byte	0x2
 2066 084c 7D       		.byte	0x7d
 2067 084d 00       		.sleb128 0
 2068 084e 01       		.byte	0x1
ARM GAS  /tmp/ccDT7MPS.s 			page 55


 2069 084f 62080000 		.4byte	0x862
 2070 0853 1A       		.uleb128 0x1a
 2071 0854 83040000 		.4byte	.LASF93
 2072 0858 01       		.byte	0x1
 2073 0859 9003     		.2byte	0x390
 2074 085b 62000000 		.4byte	0x62
 2075 085f 01       		.byte	0x1
 2076 0860 50       		.byte	0x50
 2077 0861 00       		.byte	0
 2078 0862 1E       		.uleb128 0x1e
 2079 0863 01       		.byte	0x1
 2080 0864 E1000000 		.4byte	.LASF96
 2081 0868 01       		.byte	0x1
 2082 0869 B703     		.2byte	0x3b7
 2083 086b 01       		.byte	0x1
 2084 086c D8000000 		.4byte	0xd8
 2085 0870 00000000 		.4byte	.LFB138
 2086 0874 14000000 		.4byte	.LFE138
 2087 0878 02       		.byte	0x2
 2088 0879 7D       		.byte	0x7d
 2089 087a 00       		.sleb128 0
 2090 087b 01       		.byte	0x1
 2091 087c A1080000 		.4byte	0x8a1
 2092 0880 16       		.uleb128 0x16
 2093 0881 34030000 		.4byte	.LASF90
 2094 0885 01       		.byte	0x1
 2095 0886 B703     		.2byte	0x3b7
 2096 0888 62000000 		.4byte	0x62
 2097 088c 88020000 		.4byte	.LLST17
 2098 0890 17       		.uleb128 0x17
 2099 0891 BA050000 		.4byte	.LASF94
 2100 0895 01       		.byte	0x1
 2101 0896 B903     		.2byte	0x3b9
 2102 0898 D8000000 		.4byte	0xd8
 2103 089c A9020000 		.4byte	.LLST18
 2104 08a0 00       		.byte	0
 2105 08a1 19       		.uleb128 0x19
 2106 08a2 01       		.byte	0x1
 2107 08a3 B0020000 		.4byte	.LASF97
 2108 08a7 01       		.byte	0x1
 2109 08a8 DB03     		.2byte	0x3db
 2110 08aa 01       		.byte	0x1
 2111 08ab 00000000 		.4byte	.LFB139
 2112 08af 0C000000 		.4byte	.LFE139
 2113 08b3 02       		.byte	0x2
 2114 08b4 7D       		.byte	0x7d
 2115 08b5 00       		.sleb128 0
 2116 08b6 01       		.byte	0x1
 2117 08b7 CA080000 		.4byte	0x8ca
 2118 08bb 1A       		.uleb128 0x1a
 2119 08bc 34030000 		.4byte	.LASF90
 2120 08c0 01       		.byte	0x1
 2121 08c1 DB03     		.2byte	0x3db
 2122 08c3 62000000 		.4byte	0x62
 2123 08c7 01       		.byte	0x1
 2124 08c8 50       		.byte	0x50
 2125 08c9 00       		.byte	0
ARM GAS  /tmp/ccDT7MPS.s 			page 56


 2126 08ca 1F       		.uleb128 0x1f
 2127 08cb AD050000 		.4byte	.LASF101
 2128 08cf 05       		.byte	0x5
 2129 08d0 9806     		.2byte	0x698
 2130 08d2 B1000000 		.4byte	0xb1
 2131 08d6 01       		.byte	0x1
 2132 08d7 01       		.byte	0x1
 2133 08d8 20       		.uleb128 0x20
 2134 08d9 01       		.byte	0x1
 2135 08da 2F040000 		.4byte	.LASF102
 2136 08de 06       		.byte	0x6
 2137 08df 0402     		.2byte	0x204
 2138 08e1 01       		.byte	0x1
 2139 08e2 01       		.byte	0x1
 2140 08e3 21       		.uleb128 0x21
 2141 08e4 62000000 		.4byte	0x62
 2142 08e8 21       		.uleb128 0x21
 2143 08e9 FA000000 		.4byte	0xfa
 2144 08ed 00       		.byte	0
 2145 08ee 00       		.byte	0
 2146              		.section	.debug_abbrev,"",%progbits
 2147              	.Ldebug_abbrev0:
 2148 0000 01       		.uleb128 0x1
 2149 0001 11       		.uleb128 0x11
 2150 0002 01       		.byte	0x1
 2151 0003 25       		.uleb128 0x25
 2152 0004 0E       		.uleb128 0xe
 2153 0005 13       		.uleb128 0x13
 2154 0006 0B       		.uleb128 0xb
 2155 0007 03       		.uleb128 0x3
 2156 0008 0E       		.uleb128 0xe
 2157 0009 1B       		.uleb128 0x1b
 2158 000a 0E       		.uleb128 0xe
 2159 000b 55       		.uleb128 0x55
 2160 000c 06       		.uleb128 0x6
 2161 000d 11       		.uleb128 0x11
 2162 000e 01       		.uleb128 0x1
 2163 000f 52       		.uleb128 0x52
 2164 0010 01       		.uleb128 0x1
 2165 0011 10       		.uleb128 0x10
 2166 0012 06       		.uleb128 0x6
 2167 0013 00       		.byte	0
 2168 0014 00       		.byte	0
 2169 0015 02       		.uleb128 0x2
 2170 0016 24       		.uleb128 0x24
 2171 0017 00       		.byte	0
 2172 0018 0B       		.uleb128 0xb
 2173 0019 0B       		.uleb128 0xb
 2174 001a 3E       		.uleb128 0x3e
 2175 001b 0B       		.uleb128 0xb
 2176 001c 03       		.uleb128 0x3
 2177 001d 0E       		.uleb128 0xe
 2178 001e 00       		.byte	0
 2179 001f 00       		.byte	0
 2180 0020 03       		.uleb128 0x3
 2181 0021 16       		.uleb128 0x16
 2182 0022 00       		.byte	0
ARM GAS  /tmp/ccDT7MPS.s 			page 57


 2183 0023 03       		.uleb128 0x3
 2184 0024 0E       		.uleb128 0xe
 2185 0025 3A       		.uleb128 0x3a
 2186 0026 0B       		.uleb128 0xb
 2187 0027 3B       		.uleb128 0x3b
 2188 0028 0B       		.uleb128 0xb
 2189 0029 49       		.uleb128 0x49
 2190 002a 13       		.uleb128 0x13
 2191 002b 00       		.byte	0
 2192 002c 00       		.byte	0
 2193 002d 04       		.uleb128 0x4
 2194 002e 24       		.uleb128 0x24
 2195 002f 00       		.byte	0
 2196 0030 0B       		.uleb128 0xb
 2197 0031 0B       		.uleb128 0xb
 2198 0032 3E       		.uleb128 0x3e
 2199 0033 0B       		.uleb128 0xb
 2200 0034 03       		.uleb128 0x3
 2201 0035 08       		.uleb128 0x8
 2202 0036 00       		.byte	0
 2203 0037 00       		.byte	0
 2204 0038 05       		.uleb128 0x5
 2205 0039 35       		.uleb128 0x35
 2206 003a 00       		.byte	0
 2207 003b 49       		.uleb128 0x49
 2208 003c 13       		.uleb128 0x13
 2209 003d 00       		.byte	0
 2210 003e 00       		.byte	0
 2211 003f 06       		.uleb128 0x6
 2212 0040 26       		.uleb128 0x26
 2213 0041 00       		.byte	0
 2214 0042 49       		.uleb128 0x49
 2215 0043 13       		.uleb128 0x13
 2216 0044 00       		.byte	0
 2217 0045 00       		.byte	0
 2218 0046 07       		.uleb128 0x7
 2219 0047 01       		.uleb128 0x1
 2220 0048 01       		.byte	0x1
 2221 0049 49       		.uleb128 0x49
 2222 004a 13       		.uleb128 0x13
 2223 004b 01       		.uleb128 0x1
 2224 004c 13       		.uleb128 0x13
 2225 004d 00       		.byte	0
 2226 004e 00       		.byte	0
 2227 004f 08       		.uleb128 0x8
 2228 0050 21       		.uleb128 0x21
 2229 0051 00       		.byte	0
 2230 0052 49       		.uleb128 0x49
 2231 0053 13       		.uleb128 0x13
 2232 0054 2F       		.uleb128 0x2f
 2233 0055 0B       		.uleb128 0xb
 2234 0056 00       		.byte	0
 2235 0057 00       		.byte	0
 2236 0058 09       		.uleb128 0x9
 2237 0059 04       		.uleb128 0x4
 2238 005a 01       		.byte	0x1
 2239 005b 0B       		.uleb128 0xb
ARM GAS  /tmp/ccDT7MPS.s 			page 58


 2240 005c 0B       		.uleb128 0xb
 2241 005d 3A       		.uleb128 0x3a
 2242 005e 0B       		.uleb128 0xb
 2243 005f 3B       		.uleb128 0x3b
 2244 0060 05       		.uleb128 0x5
 2245 0061 01       		.uleb128 0x1
 2246 0062 13       		.uleb128 0x13
 2247 0063 00       		.byte	0
 2248 0064 00       		.byte	0
 2249 0065 0A       		.uleb128 0xa
 2250 0066 28       		.uleb128 0x28
 2251 0067 00       		.byte	0
 2252 0068 03       		.uleb128 0x3
 2253 0069 0E       		.uleb128 0xe
 2254 006a 1C       		.uleb128 0x1c
 2255 006b 0D       		.uleb128 0xd
 2256 006c 00       		.byte	0
 2257 006d 00       		.byte	0
 2258 006e 0B       		.uleb128 0xb
 2259 006f 28       		.uleb128 0x28
 2260 0070 00       		.byte	0
 2261 0071 03       		.uleb128 0x3
 2262 0072 08       		.uleb128 0x8
 2263 0073 1C       		.uleb128 0x1c
 2264 0074 0D       		.uleb128 0xd
 2265 0075 00       		.byte	0
 2266 0076 00       		.byte	0
 2267 0077 0C       		.uleb128 0xc
 2268 0078 16       		.uleb128 0x16
 2269 0079 00       		.byte	0
 2270 007a 03       		.uleb128 0x3
 2271 007b 0E       		.uleb128 0xe
 2272 007c 3A       		.uleb128 0x3a
 2273 007d 0B       		.uleb128 0xb
 2274 007e 3B       		.uleb128 0x3b
 2275 007f 05       		.uleb128 0x5
 2276 0080 49       		.uleb128 0x49
 2277 0081 13       		.uleb128 0x13
 2278 0082 00       		.byte	0
 2279 0083 00       		.byte	0
 2280 0084 0D       		.uleb128 0xd
 2281 0085 13       		.uleb128 0x13
 2282 0086 01       		.byte	0x1
 2283 0087 0B       		.uleb128 0xb
 2284 0088 0B       		.uleb128 0xb
 2285 0089 3A       		.uleb128 0x3a
 2286 008a 0B       		.uleb128 0xb
 2287 008b 3B       		.uleb128 0x3b
 2288 008c 05       		.uleb128 0x5
 2289 008d 01       		.uleb128 0x1
 2290 008e 13       		.uleb128 0x13
 2291 008f 00       		.byte	0
 2292 0090 00       		.byte	0
 2293 0091 0E       		.uleb128 0xe
 2294 0092 0D       		.uleb128 0xd
 2295 0093 00       		.byte	0
 2296 0094 03       		.uleb128 0x3
ARM GAS  /tmp/ccDT7MPS.s 			page 59


 2297 0095 0E       		.uleb128 0xe
 2298 0096 3A       		.uleb128 0x3a
 2299 0097 0B       		.uleb128 0xb
 2300 0098 3B       		.uleb128 0x3b
 2301 0099 05       		.uleb128 0x5
 2302 009a 49       		.uleb128 0x49
 2303 009b 13       		.uleb128 0x13
 2304 009c 38       		.uleb128 0x38
 2305 009d 0A       		.uleb128 0xa
 2306 009e 00       		.byte	0
 2307 009f 00       		.byte	0
 2308 00a0 0F       		.uleb128 0xf
 2309 00a1 0D       		.uleb128 0xd
 2310 00a2 00       		.byte	0
 2311 00a3 03       		.uleb128 0x3
 2312 00a4 08       		.uleb128 0x8
 2313 00a5 3A       		.uleb128 0x3a
 2314 00a6 0B       		.uleb128 0xb
 2315 00a7 3B       		.uleb128 0x3b
 2316 00a8 05       		.uleb128 0x5
 2317 00a9 49       		.uleb128 0x49
 2318 00aa 13       		.uleb128 0x13
 2319 00ab 38       		.uleb128 0x38
 2320 00ac 0A       		.uleb128 0xa
 2321 00ad 00       		.byte	0
 2322 00ae 00       		.byte	0
 2323 00af 10       		.uleb128 0x10
 2324 00b0 13       		.uleb128 0x13
 2325 00b1 01       		.byte	0x1
 2326 00b2 0B       		.uleb128 0xb
 2327 00b3 0B       		.uleb128 0xb
 2328 00b4 3A       		.uleb128 0x3a
 2329 00b5 0B       		.uleb128 0xb
 2330 00b6 3B       		.uleb128 0x3b
 2331 00b7 0B       		.uleb128 0xb
 2332 00b8 01       		.uleb128 0x1
 2333 00b9 13       		.uleb128 0x13
 2334 00ba 00       		.byte	0
 2335 00bb 00       		.byte	0
 2336 00bc 11       		.uleb128 0x11
 2337 00bd 0D       		.uleb128 0xd
 2338 00be 00       		.byte	0
 2339 00bf 03       		.uleb128 0x3
 2340 00c0 0E       		.uleb128 0xe
 2341 00c1 3A       		.uleb128 0x3a
 2342 00c2 0B       		.uleb128 0xb
 2343 00c3 3B       		.uleb128 0x3b
 2344 00c4 0B       		.uleb128 0xb
 2345 00c5 49       		.uleb128 0x49
 2346 00c6 13       		.uleb128 0x13
 2347 00c7 38       		.uleb128 0x38
 2348 00c8 0A       		.uleb128 0xa
 2349 00c9 00       		.byte	0
 2350 00ca 00       		.byte	0
 2351 00cb 12       		.uleb128 0x12
 2352 00cc 2E       		.uleb128 0x2e
 2353 00cd 01       		.byte	0x1
ARM GAS  /tmp/ccDT7MPS.s 			page 60


 2354 00ce 3F       		.uleb128 0x3f
 2355 00cf 0C       		.uleb128 0xc
 2356 00d0 03       		.uleb128 0x3
 2357 00d1 0E       		.uleb128 0xe
 2358 00d2 3A       		.uleb128 0x3a
 2359 00d3 0B       		.uleb128 0xb
 2360 00d4 3B       		.uleb128 0x3b
 2361 00d5 05       		.uleb128 0x5
 2362 00d6 27       		.uleb128 0x27
 2363 00d7 0C       		.uleb128 0xc
 2364 00d8 11       		.uleb128 0x11
 2365 00d9 01       		.uleb128 0x1
 2366 00da 12       		.uleb128 0x12
 2367 00db 01       		.uleb128 0x1
 2368 00dc 40       		.uleb128 0x40
 2369 00dd 06       		.uleb128 0x6
 2370 00de 9742     		.uleb128 0x2117
 2371 00e0 0C       		.uleb128 0xc
 2372 00e1 01       		.uleb128 0x1
 2373 00e2 13       		.uleb128 0x13
 2374 00e3 00       		.byte	0
 2375 00e4 00       		.byte	0
 2376 00e5 13       		.uleb128 0x13
 2377 00e6 898201   		.uleb128 0x4109
 2378 00e9 01       		.byte	0x1
 2379 00ea 11       		.uleb128 0x11
 2380 00eb 01       		.uleb128 0x1
 2381 00ec 31       		.uleb128 0x31
 2382 00ed 13       		.uleb128 0x13
 2383 00ee 01       		.uleb128 0x1
 2384 00ef 13       		.uleb128 0x13
 2385 00f0 00       		.byte	0
 2386 00f1 00       		.byte	0
 2387 00f2 14       		.uleb128 0x14
 2388 00f3 8A8201   		.uleb128 0x410a
 2389 00f6 00       		.byte	0
 2390 00f7 02       		.uleb128 0x2
 2391 00f8 0A       		.uleb128 0xa
 2392 00f9 9142     		.uleb128 0x2111
 2393 00fb 0A       		.uleb128 0xa
 2394 00fc 00       		.byte	0
 2395 00fd 00       		.byte	0
 2396 00fe 15       		.uleb128 0x15
 2397 00ff 898201   		.uleb128 0x4109
 2398 0102 01       		.byte	0x1
 2399 0103 11       		.uleb128 0x11
 2400 0104 01       		.uleb128 0x1
 2401 0105 9542     		.uleb128 0x2115
 2402 0107 0C       		.uleb128 0xc
 2403 0108 31       		.uleb128 0x31
 2404 0109 13       		.uleb128 0x13
 2405 010a 00       		.byte	0
 2406 010b 00       		.byte	0
 2407 010c 16       		.uleb128 0x16
 2408 010d 05       		.uleb128 0x5
 2409 010e 00       		.byte	0
 2410 010f 03       		.uleb128 0x3
ARM GAS  /tmp/ccDT7MPS.s 			page 61


 2411 0110 0E       		.uleb128 0xe
 2412 0111 3A       		.uleb128 0x3a
 2413 0112 0B       		.uleb128 0xb
 2414 0113 3B       		.uleb128 0x3b
 2415 0114 05       		.uleb128 0x5
 2416 0115 49       		.uleb128 0x49
 2417 0116 13       		.uleb128 0x13
 2418 0117 02       		.uleb128 0x2
 2419 0118 06       		.uleb128 0x6
 2420 0119 00       		.byte	0
 2421 011a 00       		.byte	0
 2422 011b 17       		.uleb128 0x17
 2423 011c 34       		.uleb128 0x34
 2424 011d 00       		.byte	0
 2425 011e 03       		.uleb128 0x3
 2426 011f 0E       		.uleb128 0xe
 2427 0120 3A       		.uleb128 0x3a
 2428 0121 0B       		.uleb128 0xb
 2429 0122 3B       		.uleb128 0x3b
 2430 0123 05       		.uleb128 0x5
 2431 0124 49       		.uleb128 0x49
 2432 0125 13       		.uleb128 0x13
 2433 0126 02       		.uleb128 0x2
 2434 0127 06       		.uleb128 0x6
 2435 0128 00       		.byte	0
 2436 0129 00       		.byte	0
 2437 012a 18       		.uleb128 0x18
 2438 012b 0F       		.uleb128 0xf
 2439 012c 00       		.byte	0
 2440 012d 0B       		.uleb128 0xb
 2441 012e 0B       		.uleb128 0xb
 2442 012f 49       		.uleb128 0x49
 2443 0130 13       		.uleb128 0x13
 2444 0131 00       		.byte	0
 2445 0132 00       		.byte	0
 2446 0133 19       		.uleb128 0x19
 2447 0134 2E       		.uleb128 0x2e
 2448 0135 01       		.byte	0x1
 2449 0136 3F       		.uleb128 0x3f
 2450 0137 0C       		.uleb128 0xc
 2451 0138 03       		.uleb128 0x3
 2452 0139 0E       		.uleb128 0xe
 2453 013a 3A       		.uleb128 0x3a
 2454 013b 0B       		.uleb128 0xb
 2455 013c 3B       		.uleb128 0x3b
 2456 013d 05       		.uleb128 0x5
 2457 013e 27       		.uleb128 0x27
 2458 013f 0C       		.uleb128 0xc
 2459 0140 11       		.uleb128 0x11
 2460 0141 01       		.uleb128 0x1
 2461 0142 12       		.uleb128 0x12
 2462 0143 01       		.uleb128 0x1
 2463 0144 40       		.uleb128 0x40
 2464 0145 0A       		.uleb128 0xa
 2465 0146 9742     		.uleb128 0x2117
 2466 0148 0C       		.uleb128 0xc
 2467 0149 01       		.uleb128 0x1
ARM GAS  /tmp/ccDT7MPS.s 			page 62


 2468 014a 13       		.uleb128 0x13
 2469 014b 00       		.byte	0
 2470 014c 00       		.byte	0
 2471 014d 1A       		.uleb128 0x1a
 2472 014e 05       		.uleb128 0x5
 2473 014f 00       		.byte	0
 2474 0150 03       		.uleb128 0x3
 2475 0151 0E       		.uleb128 0xe
 2476 0152 3A       		.uleb128 0x3a
 2477 0153 0B       		.uleb128 0xb
 2478 0154 3B       		.uleb128 0x3b
 2479 0155 05       		.uleb128 0x5
 2480 0156 49       		.uleb128 0x49
 2481 0157 13       		.uleb128 0x13
 2482 0158 02       		.uleb128 0x2
 2483 0159 0A       		.uleb128 0xa
 2484 015a 00       		.byte	0
 2485 015b 00       		.byte	0
 2486 015c 1B       		.uleb128 0x1b
 2487 015d 2E       		.uleb128 0x2e
 2488 015e 00       		.byte	0
 2489 015f 3F       		.uleb128 0x3f
 2490 0160 0C       		.uleb128 0xc
 2491 0161 03       		.uleb128 0x3
 2492 0162 0E       		.uleb128 0xe
 2493 0163 3A       		.uleb128 0x3a
 2494 0164 0B       		.uleb128 0xb
 2495 0165 3B       		.uleb128 0x3b
 2496 0166 05       		.uleb128 0x5
 2497 0167 27       		.uleb128 0x27
 2498 0168 0C       		.uleb128 0xc
 2499 0169 49       		.uleb128 0x49
 2500 016a 13       		.uleb128 0x13
 2501 016b 11       		.uleb128 0x11
 2502 016c 01       		.uleb128 0x1
 2503 016d 12       		.uleb128 0x12
 2504 016e 01       		.uleb128 0x1
 2505 016f 40       		.uleb128 0x40
 2506 0170 0A       		.uleb128 0xa
 2507 0171 9742     		.uleb128 0x2117
 2508 0173 0C       		.uleb128 0xc
 2509 0174 00       		.byte	0
 2510 0175 00       		.byte	0
 2511 0176 1C       		.uleb128 0x1c
 2512 0177 2E       		.uleb128 0x2e
 2513 0178 01       		.byte	0x1
 2514 0179 3F       		.uleb128 0x3f
 2515 017a 0C       		.uleb128 0xc
 2516 017b 03       		.uleb128 0x3
 2517 017c 0E       		.uleb128 0xe
 2518 017d 3A       		.uleb128 0x3a
 2519 017e 0B       		.uleb128 0xb
 2520 017f 3B       		.uleb128 0x3b
 2521 0180 05       		.uleb128 0x5
 2522 0181 27       		.uleb128 0x27
 2523 0182 0C       		.uleb128 0xc
 2524 0183 49       		.uleb128 0x49
ARM GAS  /tmp/ccDT7MPS.s 			page 63


 2525 0184 13       		.uleb128 0x13
 2526 0185 11       		.uleb128 0x11
 2527 0186 01       		.uleb128 0x1
 2528 0187 12       		.uleb128 0x12
 2529 0188 01       		.uleb128 0x1
 2530 0189 40       		.uleb128 0x40
 2531 018a 06       		.uleb128 0x6
 2532 018b 9742     		.uleb128 0x2117
 2533 018d 0C       		.uleb128 0xc
 2534 018e 01       		.uleb128 0x1
 2535 018f 13       		.uleb128 0x13
 2536 0190 00       		.byte	0
 2537 0191 00       		.byte	0
 2538 0192 1D       		.uleb128 0x1d
 2539 0193 34       		.uleb128 0x34
 2540 0194 00       		.byte	0
 2541 0195 03       		.uleb128 0x3
 2542 0196 08       		.uleb128 0x8
 2543 0197 3A       		.uleb128 0x3a
 2544 0198 0B       		.uleb128 0xb
 2545 0199 3B       		.uleb128 0x3b
 2546 019a 05       		.uleb128 0x5
 2547 019b 49       		.uleb128 0x49
 2548 019c 13       		.uleb128 0x13
 2549 019d 02       		.uleb128 0x2
 2550 019e 06       		.uleb128 0x6
 2551 019f 00       		.byte	0
 2552 01a0 00       		.byte	0
 2553 01a1 1E       		.uleb128 0x1e
 2554 01a2 2E       		.uleb128 0x2e
 2555 01a3 01       		.byte	0x1
 2556 01a4 3F       		.uleb128 0x3f
 2557 01a5 0C       		.uleb128 0xc
 2558 01a6 03       		.uleb128 0x3
 2559 01a7 0E       		.uleb128 0xe
 2560 01a8 3A       		.uleb128 0x3a
 2561 01a9 0B       		.uleb128 0xb
 2562 01aa 3B       		.uleb128 0x3b
 2563 01ab 05       		.uleb128 0x5
 2564 01ac 27       		.uleb128 0x27
 2565 01ad 0C       		.uleb128 0xc
 2566 01ae 49       		.uleb128 0x49
 2567 01af 13       		.uleb128 0x13
 2568 01b0 11       		.uleb128 0x11
 2569 01b1 01       		.uleb128 0x1
 2570 01b2 12       		.uleb128 0x12
 2571 01b3 01       		.uleb128 0x1
 2572 01b4 40       		.uleb128 0x40
 2573 01b5 0A       		.uleb128 0xa
 2574 01b6 9742     		.uleb128 0x2117
 2575 01b8 0C       		.uleb128 0xc
 2576 01b9 01       		.uleb128 0x1
 2577 01ba 13       		.uleb128 0x13
 2578 01bb 00       		.byte	0
 2579 01bc 00       		.byte	0
 2580 01bd 1F       		.uleb128 0x1f
 2581 01be 34       		.uleb128 0x34
ARM GAS  /tmp/ccDT7MPS.s 			page 64


 2582 01bf 00       		.byte	0
 2583 01c0 03       		.uleb128 0x3
 2584 01c1 0E       		.uleb128 0xe
 2585 01c2 3A       		.uleb128 0x3a
 2586 01c3 0B       		.uleb128 0xb
 2587 01c4 3B       		.uleb128 0x3b
 2588 01c5 05       		.uleb128 0x5
 2589 01c6 49       		.uleb128 0x49
 2590 01c7 13       		.uleb128 0x13
 2591 01c8 3F       		.uleb128 0x3f
 2592 01c9 0C       		.uleb128 0xc
 2593 01ca 3C       		.uleb128 0x3c
 2594 01cb 0C       		.uleb128 0xc
 2595 01cc 00       		.byte	0
 2596 01cd 00       		.byte	0
 2597 01ce 20       		.uleb128 0x20
 2598 01cf 2E       		.uleb128 0x2e
 2599 01d0 01       		.byte	0x1
 2600 01d1 3F       		.uleb128 0x3f
 2601 01d2 0C       		.uleb128 0xc
 2602 01d3 03       		.uleb128 0x3
 2603 01d4 0E       		.uleb128 0xe
 2604 01d5 3A       		.uleb128 0x3a
 2605 01d6 0B       		.uleb128 0xb
 2606 01d7 3B       		.uleb128 0x3b
 2607 01d8 05       		.uleb128 0x5
 2608 01d9 27       		.uleb128 0x27
 2609 01da 0C       		.uleb128 0xc
 2610 01db 3C       		.uleb128 0x3c
 2611 01dc 0C       		.uleb128 0xc
 2612 01dd 00       		.byte	0
 2613 01de 00       		.byte	0
 2614 01df 21       		.uleb128 0x21
 2615 01e0 05       		.uleb128 0x5
 2616 01e1 00       		.byte	0
 2617 01e2 49       		.uleb128 0x49
 2618 01e3 13       		.uleb128 0x13
 2619 01e4 00       		.byte	0
 2620 01e5 00       		.byte	0
 2621 01e6 00       		.byte	0
 2622              		.section	.debug_loc,"",%progbits
 2623              	.Ldebug_loc0:
 2624              	.LLST0:
 2625 0000 00000000 		.4byte	.LFB110
 2626 0004 02000000 		.4byte	.LCFI0
 2627 0008 0200     		.2byte	0x2
 2628 000a 7D       		.byte	0x7d
 2629 000b 00       		.sleb128 0
 2630 000c 02000000 		.4byte	.LCFI0
 2631 0010 1A000000 		.4byte	.LFE110
 2632 0014 0200     		.2byte	0x2
 2633 0016 7D       		.byte	0x7d
 2634 0017 08       		.sleb128 8
 2635 0018 00000000 		.4byte	0
 2636 001c 00000000 		.4byte	0
 2637              	.LLST1:
 2638 0020 00000000 		.4byte	.LFB111
ARM GAS  /tmp/ccDT7MPS.s 			page 65


 2639 0024 06000000 		.4byte	.LCFI1
 2640 0028 0200     		.2byte	0x2
 2641 002a 7D       		.byte	0x7d
 2642 002b 00       		.sleb128 0
 2643 002c 06000000 		.4byte	.LCFI1
 2644 0030 30000000 		.4byte	.LFE111
 2645 0034 0200     		.2byte	0x2
 2646 0036 7D       		.byte	0x7d
 2647 0037 08       		.sleb128 8
 2648 0038 00000000 		.4byte	0
 2649 003c 00000000 		.4byte	0
 2650              	.LLST2:
 2651 0040 00000000 		.4byte	.LVL2
 2652 0044 18000000 		.4byte	.LVL4
 2653 0048 0100     		.2byte	0x1
 2654 004a 50       		.byte	0x50
 2655 004b 18000000 		.4byte	.LVL4
 2656 004f 30000000 		.4byte	.LFE111
 2657 0053 0400     		.2byte	0x4
 2658 0055 F3       		.byte	0xf3
 2659 0056 01       		.uleb128 0x1
 2660 0057 50       		.byte	0x50
 2661 0058 9F       		.byte	0x9f
 2662 0059 00000000 		.4byte	0
 2663 005d 00000000 		.4byte	0
 2664              	.LLST3:
 2665 0061 00000000 		.4byte	.LVL2
 2666 0065 0A000000 		.4byte	.LVL3
 2667 0069 0200     		.2byte	0x2
 2668 006b 30       		.byte	0x30
 2669 006c 9F       		.byte	0x9f
 2670 006d 0A000000 		.4byte	.LVL3
 2671 0071 1C000000 		.4byte	.LVL5
 2672 0075 0700     		.2byte	0x7
 2673 0077 73       		.byte	0x73
 2674 0078 00       		.sleb128 0
 2675 0079 0B       		.byte	0xb
 2676 007a 0081     		.2byte	0x8100
 2677 007c 1A       		.byte	0x1a
 2678 007d 9F       		.byte	0x9f
 2679 007e 26000000 		.4byte	.LVL6
 2680 0082 30000000 		.4byte	.LFE111
 2681 0086 0100     		.2byte	0x1
 2682 0088 51       		.byte	0x51
 2683 0089 00000000 		.4byte	0
 2684 008d 00000000 		.4byte	0
 2685              	.LLST4:
 2686 0091 00000000 		.4byte	.LFB116
 2687 0095 06000000 		.4byte	.LCFI2
 2688 0099 0200     		.2byte	0x2
 2689 009b 7D       		.byte	0x7d
 2690 009c 00       		.sleb128 0
 2691 009d 06000000 		.4byte	.LCFI2
 2692 00a1 2C000000 		.4byte	.LFE116
 2693 00a5 0200     		.2byte	0x2
 2694 00a7 7D       		.byte	0x7d
 2695 00a8 08       		.sleb128 8
ARM GAS  /tmp/ccDT7MPS.s 			page 66


 2696 00a9 00000000 		.4byte	0
 2697 00ad 00000000 		.4byte	0
 2698              	.LLST5:
 2699 00b1 00000000 		.4byte	.LVL10
 2700 00b5 1C000000 		.4byte	.LVL13
 2701 00b9 0100     		.2byte	0x1
 2702 00bb 50       		.byte	0x50
 2703 00bc 1C000000 		.4byte	.LVL13
 2704 00c0 2C000000 		.4byte	.LFE116
 2705 00c4 0400     		.2byte	0x4
 2706 00c6 F3       		.byte	0xf3
 2707 00c7 01       		.uleb128 0x1
 2708 00c8 50       		.byte	0x50
 2709 00c9 9F       		.byte	0x9f
 2710 00ca 00000000 		.4byte	0
 2711 00ce 00000000 		.4byte	0
 2712              	.LLST6:
 2713 00d2 00000000 		.4byte	.LVL10
 2714 00d6 0A000000 		.4byte	.LVL11
 2715 00da 0200     		.2byte	0x2
 2716 00dc 30       		.byte	0x30
 2717 00dd 9F       		.byte	0x9f
 2718 00de 0A000000 		.4byte	.LVL11
 2719 00e2 12000000 		.4byte	.LVL12
 2720 00e6 0100     		.2byte	0x1
 2721 00e8 51       		.byte	0x51
 2722 00e9 12000000 		.4byte	.LVL12
 2723 00ed 2C000000 		.4byte	.LFE116
 2724 00f1 0100     		.2byte	0x1
 2725 00f3 52       		.byte	0x52
 2726 00f4 00000000 		.4byte	0
 2727 00f8 00000000 		.4byte	0
 2728              	.LLST7:
 2729 00fc 00000000 		.4byte	.LFB119
 2730 0100 04000000 		.4byte	.LCFI3
 2731 0104 0200     		.2byte	0x2
 2732 0106 7D       		.byte	0x7d
 2733 0107 00       		.sleb128 0
 2734 0108 04000000 		.4byte	.LCFI3
 2735 010c 18000000 		.4byte	.LFE119
 2736 0110 0200     		.2byte	0x2
 2737 0112 7D       		.byte	0x7d
 2738 0113 08       		.sleb128 8
 2739 0114 00000000 		.4byte	0
 2740 0118 00000000 		.4byte	0
 2741              	.LLST8:
 2742 011c 00000000 		.4byte	.LVL16
 2743 0120 06000000 		.4byte	.LVL18
 2744 0124 0100     		.2byte	0x1
 2745 0126 50       		.byte	0x50
 2746 0127 06000000 		.4byte	.LVL18
 2747 012b 10000000 		.4byte	.LVL20
 2748 012f 0700     		.2byte	0x7
 2749 0131 70       		.byte	0x70
 2750 0132 ECA7FBFF 		.sleb128 -1073818644
 2750      7B
 2751 0137 9F       		.byte	0x9f
ARM GAS  /tmp/ccDT7MPS.s 			page 67


 2752 0138 10000000 		.4byte	.LVL20
 2753 013c 18000000 		.4byte	.LFE119
 2754 0140 0A00     		.2byte	0xa
 2755 0142 91       		.byte	0x91
 2756 0143 7C       		.sleb128 -4
 2757 0144 06       		.byte	0x6
 2758 0145 0C       		.byte	0xc
 2759 0146 142C0140 		.4byte	0x40012c14
 2760 014a 1C       		.byte	0x1c
 2761 014b 9F       		.byte	0x9f
 2762 014c 00000000 		.4byte	0
 2763 0150 00000000 		.4byte	0
 2764              	.LLST9:
 2765 0154 0A000000 		.4byte	.LVL19
 2766 0158 18000000 		.4byte	.LFE119
 2767 015c 0200     		.2byte	0x2
 2768 015e 91       		.byte	0x91
 2769 015f 7C       		.sleb128 -4
 2770 0160 00000000 		.4byte	0
 2771 0164 00000000 		.4byte	0
 2772              	.LLST10:
 2773 0168 00000000 		.4byte	.LFB120
 2774 016c 06000000 		.4byte	.LCFI4
 2775 0170 0200     		.2byte	0x2
 2776 0172 7D       		.byte	0x7d
 2777 0173 00       		.sleb128 0
 2778 0174 06000000 		.4byte	.LCFI4
 2779 0178 2C000000 		.4byte	.LFE120
 2780 017c 0200     		.2byte	0x2
 2781 017e 7D       		.byte	0x7d
 2782 017f 08       		.sleb128 8
 2783 0180 00000000 		.4byte	0
 2784 0184 00000000 		.4byte	0
 2785              	.LLST11:
 2786 0188 00000000 		.4byte	.LVL21
 2787 018c 18000000 		.4byte	.LVL23
 2788 0190 0100     		.2byte	0x1
 2789 0192 50       		.byte	0x50
 2790 0193 18000000 		.4byte	.LVL23
 2791 0197 2C000000 		.4byte	.LFE120
 2792 019b 0400     		.2byte	0x4
 2793 019d F3       		.byte	0xf3
 2794 019e 01       		.uleb128 0x1
 2795 019f 50       		.byte	0x50
 2796 01a0 9F       		.byte	0x9f
 2797 01a1 00000000 		.4byte	0
 2798 01a5 00000000 		.4byte	0
 2799              	.LLST12:
 2800 01a9 00000000 		.4byte	.LVL21
 2801 01ad 12000000 		.4byte	.LVL22
 2802 01b1 0200     		.2byte	0x2
 2803 01b3 30       		.byte	0x30
 2804 01b4 9F       		.byte	0x9f
 2805 01b5 12000000 		.4byte	.LVL22
 2806 01b9 22000000 		.4byte	.LVL25
 2807 01bd 0100     		.2byte	0x1
 2808 01bf 54       		.byte	0x54
ARM GAS  /tmp/ccDT7MPS.s 			page 68


 2809 01c0 22000000 		.4byte	.LVL25
 2810 01c4 2C000000 		.4byte	.LFE120
 2811 01c8 0100     		.2byte	0x1
 2812 01ca 51       		.byte	0x51
 2813 01cb 00000000 		.4byte	0
 2814 01cf 00000000 		.4byte	0
 2815              	.LLST13:
 2816 01d3 00000000 		.4byte	.LVL34
 2817 01d7 04000000 		.4byte	.LVL35
 2818 01db 0100     		.2byte	0x1
 2819 01dd 50       		.byte	0x50
 2820 01de 04000000 		.4byte	.LVL35
 2821 01e2 14000000 		.4byte	.LFE132
 2822 01e6 0400     		.2byte	0x4
 2823 01e8 F3       		.byte	0xf3
 2824 01e9 01       		.uleb128 0x1
 2825 01ea 50       		.byte	0x50
 2826 01eb 9F       		.byte	0x9f
 2827 01ec 00000000 		.4byte	0
 2828 01f0 00000000 		.4byte	0
 2829              	.LLST14:
 2830 01f4 00000000 		.4byte	.LVL38
 2831 01f8 08000000 		.4byte	.LVL39
 2832 01fc 0100     		.2byte	0x1
 2833 01fe 50       		.byte	0x50
 2834 01ff 08000000 		.4byte	.LVL39
 2835 0203 0A000000 		.4byte	.LVL40
 2836 0207 0400     		.2byte	0x4
 2837 0209 F3       		.byte	0xf3
 2838 020a 01       		.uleb128 0x1
 2839 020b 50       		.byte	0x50
 2840 020c 9F       		.byte	0x9f
 2841 020d 0A000000 		.4byte	.LVL40
 2842 0211 0E000000 		.4byte	.LVL41
 2843 0215 0100     		.2byte	0x1
 2844 0217 50       		.byte	0x50
 2845 0218 0E000000 		.4byte	.LVL41
 2846 021c 18000000 		.4byte	.LFE135
 2847 0220 0400     		.2byte	0x4
 2848 0222 F3       		.byte	0xf3
 2849 0223 01       		.uleb128 0x1
 2850 0224 50       		.byte	0x50
 2851 0225 9F       		.byte	0x9f
 2852 0226 00000000 		.4byte	0
 2853 022a 00000000 		.4byte	0
 2854              	.LLST15:
 2855 022e 00000000 		.4byte	.LVL42
 2856 0232 0C000000 		.4byte	.LVL44
 2857 0236 0100     		.2byte	0x1
 2858 0238 50       		.byte	0x50
 2859 0239 0C000000 		.4byte	.LVL44
 2860 023d 14000000 		.4byte	.LFE136
 2861 0241 0400     		.2byte	0x4
 2862 0243 F3       		.byte	0xf3
 2863 0244 01       		.uleb128 0x1
 2864 0245 50       		.byte	0x50
 2865 0246 9F       		.byte	0x9f
ARM GAS  /tmp/ccDT7MPS.s 			page 69


 2866 0247 00000000 		.4byte	0
 2867 024b 00000000 		.4byte	0
 2868              	.LLST16:
 2869 024f 00000000 		.4byte	.LVL42
 2870 0253 04000000 		.4byte	.LVL43
 2871 0257 0200     		.2byte	0x2
 2872 0259 30       		.byte	0x30
 2873 025a 9F       		.byte	0x9f
 2874 025b 04000000 		.4byte	.LVL43
 2875 025f 0C000000 		.4byte	.LVL44
 2876 0263 0800     		.2byte	0x8
 2877 0265 70       		.byte	0x70
 2878 0266 00       		.sleb128 0
 2879 0267 71       		.byte	0x71
 2880 0268 00       		.sleb128 0
 2881 0269 1A       		.byte	0x1a
 2882 026a 30       		.byte	0x30
 2883 026b 2E       		.byte	0x2e
 2884 026c 9F       		.byte	0x9f
 2885 026d 0C000000 		.4byte	.LVL44
 2886 0271 14000000 		.4byte	.LFE136
 2887 0275 0900     		.2byte	0x9
 2888 0277 F3       		.byte	0xf3
 2889 0278 01       		.uleb128 0x1
 2890 0279 50       		.byte	0x50
 2891 027a 71       		.byte	0x71
 2892 027b 00       		.sleb128 0
 2893 027c 1A       		.byte	0x1a
 2894 027d 30       		.byte	0x30
 2895 027e 2E       		.byte	0x2e
 2896 027f 9F       		.byte	0x9f
 2897 0280 00000000 		.4byte	0
 2898 0284 00000000 		.4byte	0
 2899              	.LLST17:
 2900 0288 00000000 		.4byte	.LVL46
 2901 028c 0C000000 		.4byte	.LVL48
 2902 0290 0100     		.2byte	0x1
 2903 0292 50       		.byte	0x50
 2904 0293 0C000000 		.4byte	.LVL48
 2905 0297 14000000 		.4byte	.LFE138
 2906 029b 0400     		.2byte	0x4
 2907 029d F3       		.byte	0xf3
 2908 029e 01       		.uleb128 0x1
 2909 029f 50       		.byte	0x50
 2910 02a0 9F       		.byte	0x9f
 2911 02a1 00000000 		.4byte	0
 2912 02a5 00000000 		.4byte	0
 2913              	.LLST18:
 2914 02a9 00000000 		.4byte	.LVL46
 2915 02ad 04000000 		.4byte	.LVL47
 2916 02b1 0200     		.2byte	0x2
 2917 02b3 30       		.byte	0x30
 2918 02b4 9F       		.byte	0x9f
 2919 02b5 04000000 		.4byte	.LVL47
 2920 02b9 0C000000 		.4byte	.LVL48
 2921 02bd 0800     		.2byte	0x8
 2922 02bf 70       		.byte	0x70
ARM GAS  /tmp/ccDT7MPS.s 			page 70


 2923 02c0 00       		.sleb128 0
 2924 02c1 71       		.byte	0x71
 2925 02c2 00       		.sleb128 0
 2926 02c3 1A       		.byte	0x1a
 2927 02c4 30       		.byte	0x30
 2928 02c5 2E       		.byte	0x2e
 2929 02c6 9F       		.byte	0x9f
 2930 02c7 0C000000 		.4byte	.LVL48
 2931 02cb 14000000 		.4byte	.LFE138
 2932 02cf 0900     		.2byte	0x9
 2933 02d1 F3       		.byte	0xf3
 2934 02d2 01       		.uleb128 0x1
 2935 02d3 50       		.byte	0x50
 2936 02d4 71       		.byte	0x71
 2937 02d5 00       		.sleb128 0
 2938 02d6 1A       		.byte	0x1a
 2939 02d7 30       		.byte	0x30
 2940 02d8 2E       		.byte	0x2e
 2941 02d9 9F       		.byte	0x9f
 2942 02da 00000000 		.4byte	0
 2943 02de 00000000 		.4byte	0
 2944              		.section	.debug_aranges,"",%progbits
 2945 0000 04010000 		.4byte	0x104
 2946 0004 0200     		.2byte	0x2
 2947 0006 00000000 		.4byte	.Ldebug_info0
 2948 000a 04       		.byte	0x4
 2949 000b 00       		.byte	0
 2950 000c 0000     		.2byte	0
 2951 000e 0000     		.2byte	0
 2952 0010 00000000 		.4byte	.LFB110
 2953 0014 1A000000 		.4byte	.LFE110-.LFB110
 2954 0018 00000000 		.4byte	.LFB111
 2955 001c 30000000 		.4byte	.LFE111-.LFB111
 2956 0020 00000000 		.4byte	.LFB112
 2957 0024 10000000 		.4byte	.LFE112-.LFB112
 2958 0028 00000000 		.4byte	.LFB113
 2959 002c 0C000000 		.4byte	.LFE113-.LFB113
 2960 0030 00000000 		.4byte	.LFB114
 2961 0034 0C000000 		.4byte	.LFE114-.LFB114
 2962 0038 00000000 		.4byte	.LFB115
 2963 003c 10000000 		.4byte	.LFE115-.LFB115
 2964 0040 00000000 		.4byte	.LFB116
 2965 0044 2C000000 		.4byte	.LFE116-.LFB116
 2966 0048 00000000 		.4byte	.LFB117
 2967 004c 0E000000 		.4byte	.LFE117-.LFB117
 2968 0050 00000000 		.4byte	.LFB118
 2969 0054 0C000000 		.4byte	.LFE118-.LFB118
 2970 0058 00000000 		.4byte	.LFB119
 2971 005c 18000000 		.4byte	.LFE119-.LFB119
 2972 0060 00000000 		.4byte	.LFB120
 2973 0064 2C000000 		.4byte	.LFE120-.LFB120
 2974 0068 00000000 		.4byte	.LFB121
 2975 006c 14000000 		.4byte	.LFE121-.LFB121
 2976 0070 00000000 		.4byte	.LFB122
 2977 0074 0C000000 		.4byte	.LFE122-.LFB122
 2978 0078 00000000 		.4byte	.LFB123
 2979 007c 0C000000 		.4byte	.LFE123-.LFB123
ARM GAS  /tmp/ccDT7MPS.s 			page 71


 2980 0080 00000000 		.4byte	.LFB124
 2981 0084 0C000000 		.4byte	.LFE124-.LFB124
 2982 0088 00000000 		.4byte	.LFB125
 2983 008c 0C000000 		.4byte	.LFE125-.LFB125
 2984 0090 00000000 		.4byte	.LFB126
 2985 0094 0C000000 		.4byte	.LFE126-.LFB126
 2986 0098 00000000 		.4byte	.LFB127
 2987 009c 0C000000 		.4byte	.LFE127-.LFB127
 2988 00a0 00000000 		.4byte	.LFB128
 2989 00a4 0C000000 		.4byte	.LFE128-.LFB128
 2990 00a8 00000000 		.4byte	.LFB129
 2991 00ac 0C000000 		.4byte	.LFE129-.LFB129
 2992 00b0 00000000 		.4byte	.LFB130
 2993 00b4 0C000000 		.4byte	.LFE130-.LFB130
 2994 00b8 00000000 		.4byte	.LFB131
 2995 00bc 0C000000 		.4byte	.LFE131-.LFB131
 2996 00c0 00000000 		.4byte	.LFB132
 2997 00c4 14000000 		.4byte	.LFE132-.LFB132
 2998 00c8 00000000 		.4byte	.LFB133
 2999 00cc 0C000000 		.4byte	.LFE133-.LFB133
 3000 00d0 00000000 		.4byte	.LFB134
 3001 00d4 0C000000 		.4byte	.LFE134-.LFB134
 3002 00d8 00000000 		.4byte	.LFB135
 3003 00dc 18000000 		.4byte	.LFE135-.LFB135
 3004 00e0 00000000 		.4byte	.LFB136
 3005 00e4 14000000 		.4byte	.LFE136-.LFB136
 3006 00e8 00000000 		.4byte	.LFB137
 3007 00ec 0C000000 		.4byte	.LFE137-.LFB137
 3008 00f0 00000000 		.4byte	.LFB138
 3009 00f4 14000000 		.4byte	.LFE138-.LFB138
 3010 00f8 00000000 		.4byte	.LFB139
 3011 00fc 0C000000 		.4byte	.LFE139-.LFB139
 3012 0100 00000000 		.4byte	0
 3013 0104 00000000 		.4byte	0
 3014              		.section	.debug_ranges,"",%progbits
 3015              	.Ldebug_ranges0:
 3016 0000 00000000 		.4byte	.LFB110
 3017 0004 1A000000 		.4byte	.LFE110
 3018 0008 00000000 		.4byte	.LFB111
 3019 000c 30000000 		.4byte	.LFE111
 3020 0010 00000000 		.4byte	.LFB112
 3021 0014 10000000 		.4byte	.LFE112
 3022 0018 00000000 		.4byte	.LFB113
 3023 001c 0C000000 		.4byte	.LFE113
 3024 0020 00000000 		.4byte	.LFB114
 3025 0024 0C000000 		.4byte	.LFE114
 3026 0028 00000000 		.4byte	.LFB115
 3027 002c 10000000 		.4byte	.LFE115
 3028 0030 00000000 		.4byte	.LFB116
 3029 0034 2C000000 		.4byte	.LFE116
 3030 0038 00000000 		.4byte	.LFB117
 3031 003c 0E000000 		.4byte	.LFE117
 3032 0040 00000000 		.4byte	.LFB118
 3033 0044 0C000000 		.4byte	.LFE118
 3034 0048 00000000 		.4byte	.LFB119
 3035 004c 18000000 		.4byte	.LFE119
 3036 0050 00000000 		.4byte	.LFB120
ARM GAS  /tmp/ccDT7MPS.s 			page 72


 3037 0054 2C000000 		.4byte	.LFE120
 3038 0058 00000000 		.4byte	.LFB121
 3039 005c 14000000 		.4byte	.LFE121
 3040 0060 00000000 		.4byte	.LFB122
 3041 0064 0C000000 		.4byte	.LFE122
 3042 0068 00000000 		.4byte	.LFB123
 3043 006c 0C000000 		.4byte	.LFE123
 3044 0070 00000000 		.4byte	.LFB124
 3045 0074 0C000000 		.4byte	.LFE124
 3046 0078 00000000 		.4byte	.LFB125
 3047 007c 0C000000 		.4byte	.LFE125
 3048 0080 00000000 		.4byte	.LFB126
 3049 0084 0C000000 		.4byte	.LFE126
 3050 0088 00000000 		.4byte	.LFB127
 3051 008c 0C000000 		.4byte	.LFE127
 3052 0090 00000000 		.4byte	.LFB128
 3053 0094 0C000000 		.4byte	.LFE128
 3054 0098 00000000 		.4byte	.LFB129
 3055 009c 0C000000 		.4byte	.LFE129
 3056 00a0 00000000 		.4byte	.LFB130
 3057 00a4 0C000000 		.4byte	.LFE130
 3058 00a8 00000000 		.4byte	.LFB131
 3059 00ac 0C000000 		.4byte	.LFE131
 3060 00b0 00000000 		.4byte	.LFB132
 3061 00b4 14000000 		.4byte	.LFE132
 3062 00b8 00000000 		.4byte	.LFB133
 3063 00bc 0C000000 		.4byte	.LFE133
 3064 00c0 00000000 		.4byte	.LFB134
 3065 00c4 0C000000 		.4byte	.LFE134
 3066 00c8 00000000 		.4byte	.LFB135
 3067 00cc 18000000 		.4byte	.LFE135
 3068 00d0 00000000 		.4byte	.LFB136
 3069 00d4 14000000 		.4byte	.LFE136
 3070 00d8 00000000 		.4byte	.LFB137
 3071 00dc 0C000000 		.4byte	.LFE137
 3072 00e0 00000000 		.4byte	.LFB138
 3073 00e4 14000000 		.4byte	.LFE138
 3074 00e8 00000000 		.4byte	.LFB139
 3075 00ec 0C000000 		.4byte	.LFE139
 3076 00f0 00000000 		.4byte	0
 3077 00f4 00000000 		.4byte	0
 3078              		.section	.debug_line,"",%progbits
 3079              	.Ldebug_line0:
 3080 0000 39030000 		.section	.debug_str,"MS",%progbits,1
 3080      0200C700 
 3080      00000201 
 3080      FB0E0D00 
 3080      01010101 
 3081              	.LASF36:
 3082 0000 5344494F 		.ascii	"SDIO_ClockEdge\000"
 3082      5F436C6F 
 3082      636B4564 
 3082      676500
 3083              	.LASF37:
 3084 000f 5344494F 		.ascii	"SDIO_ClockBypass\000"
 3084      5F436C6F 
 3084      636B4279 
ARM GAS  /tmp/ccDT7MPS.s 			page 73


 3084      70617373 
 3084      00
 3085              	.LASF86:
 3086 0020 5344494F 		.ascii	"SDIO_CEATAITCmd\000"
 3086      5F434541 
 3086      54414954 
 3086      436D6400 
 3087              	.LASF57:
 3088 0030 5344494F 		.ascii	"SDIO_Init\000"
 3088      5F496E69 
 3088      7400
 3089              	.LASF26:
 3090 003a 4454494D 		.ascii	"DTIMER\000"
 3090      455200
 3091              	.LASF42:
 3092 0041 5344494F 		.ascii	"SDIO_InitTypeDef\000"
 3092      5F496E69 
 3092      74547970 
 3092      65446566 
 3092      00
 3093              	.LASF84:
 3094 0052 5344494F 		.ascii	"SDIO_SendSDIOSuspendCmd\000"
 3094      5F53656E 
 3094      64534449 
 3094      4F537573 
 3094      70656E64 
 3095              	.LASF64:
 3096 006a 5344494F 		.ascii	"SDIO_SendCommand\000"
 3096      5F53656E 
 3096      64436F6D 
 3096      6D616E64 
 3096      00
 3097              	.LASF70:
 3098 007b 5344494F 		.ascii	"SDIO_RESP\000"
 3098      5F524553 
 3098      5000
 3099              	.LASF100:
 3100 0085 2F686F6D 		.ascii	"/home/xavier/Documents/Xav/dev/stm32code/bitbox/boo"
 3100      652F7861 
 3100      76696572 
 3100      2F446F63 
 3100      756D656E 
 3101 00b8 746C6F61 		.ascii	"tloader/FATFS-DBG\000"
 3101      6465722F 
 3101      46415446 
 3101      532D4442 
 3101      4700
 3102              	.LASF12:
 3103 00ca 73697A65 		.ascii	"sizetype\000"
 3103      74797065 
 3103      00
 3104              	.LASF43:
 3105 00d3 5344494F 		.ascii	"SDIO_Argument\000"
 3105      5F417267 
 3105      756D656E 
 3105      7400
 3106              	.LASF96:
ARM GAS  /tmp/ccDT7MPS.s 			page 74


 3107 00e1 5344494F 		.ascii	"SDIO_GetITStatus\000"
 3107      5F476574 
 3107      49545374 
 3107      61747573 
 3107      00
 3108              	.LASF83:
 3109 00f2 5344494F 		.ascii	"SDIO_SetSDIOOperation\000"
 3109      5F536574 
 3109      5344494F 
 3109      4F706572 
 3109      6174696F 
 3110              	.LASF50:
 3111 0108 5344494F 		.ascii	"SDIO_DataLength\000"
 3111      5F446174 
 3111      614C656E 
 3111      67746800 
 3112              	.LASF51:
 3113 0118 5344494F 		.ascii	"SDIO_DataBlockSize\000"
 3113      5F446174 
 3113      61426C6F 
 3113      636B5369 
 3113      7A6500
 3114              	.LASF29:
 3115 012b 44434F55 		.ascii	"DCOUNT\000"
 3115      4E5400
 3116              	.LASF41:
 3117 0132 5344494F 		.ascii	"SDIO_ClockDiv\000"
 3117      5F436C6F 
 3117      636B4469 
 3117      7600
 3118              	.LASF9:
 3119 0140 6C6F6E67 		.ascii	"long long int\000"
 3119      206C6F6E 
 3119      6720696E 
 3119      7400
 3120              	.LASF82:
 3121 014e 5344494F 		.ascii	"SDIO_ReadWaitMode\000"
 3121      5F526561 
 3121      64576169 
 3121      744D6F64 
 3121      6500
 3122              	.LASF44:
 3123 0160 5344494F 		.ascii	"SDIO_CmdIndex\000"
 3123      5F436D64 
 3123      496E6465 
 3123      7800
 3124              	.LASF81:
 3125 016e 5344494F 		.ascii	"SDIO_SetSDIOReadWaitMode\000"
 3125      5F536574 
 3125      5344494F 
 3125      52656164 
 3125      57616974 
 3126              	.LASF80:
 3127 0187 5344494F 		.ascii	"SDIO_StopSDIOReadWait\000"
 3127      5F53746F 
 3127      70534449 
 3127      4F526561 
ARM GAS  /tmp/ccDT7MPS.s 			page 75


 3127      64576169 
 3128              	.LASF54:
 3129 019d 5344494F 		.ascii	"SDIO_DPSM\000"
 3129      5F445053 
 3129      4D00
 3130              	.LASF40:
 3131 01a7 5344494F 		.ascii	"SDIO_HardwareFlowControl\000"
 3131      5F486172 
 3131      64776172 
 3131      65466C6F 
 3131      77436F6E 
 3132              	.LASF2:
 3133 01c0 73686F72 		.ascii	"short int\000"
 3133      7420696E 
 3133      7400
 3134              	.LASF74:
 3135 01ca 5344494F 		.ascii	"SDIO_GetDataCounter\000"
 3135      5F476574 
 3135      44617461 
 3135      436F756E 
 3135      74657200 
 3136              	.LASF78:
 3137 01de 5344494F 		.ascii	"SDIO_GetFIFOCount\000"
 3137      5F476574 
 3137      4649464F 
 3137      436F756E 
 3137      7400
 3138              	.LASF27:
 3139 01f0 444C454E 		.ascii	"DLEN\000"
 3139      00
 3140              	.LASF4:
 3141 01f5 75696E74 		.ascii	"uint8_t\000"
 3141      385F7400 
 3142              	.LASF28:
 3143 01fd 44435452 		.ascii	"DCTRL\000"
 3143      4C00
 3144              	.LASF19:
 3145 0203 504F5745 		.ascii	"POWER\000"
 3145      5200
 3146              	.LASF60:
 3147 0209 5344494F 		.ascii	"SDIO_ClockCmd\000"
 3147      5F436C6F 
 3147      636B436D 
 3147      6400
 3148              	.LASF61:
 3149 0217 4E657753 		.ascii	"NewState\000"
 3149      74617465 
 3149      00
 3150              	.LASF16:
 3151 0220 44495341 		.ascii	"DISABLE\000"
 3151      424C4500 
 3152              	.LASF68:
 3153 0228 5344494F 		.ascii	"SDIO_GetPowerState\000"
 3153      5F476574 
 3153      506F7765 
 3153      72537461 
 3153      746500
ARM GAS  /tmp/ccDT7MPS.s 			page 76


 3154              	.LASF49:
 3155 023b 5344494F 		.ascii	"SDIO_DataTimeOut\000"
 3155      5F446174 
 3155      6154696D 
 3155      654F7574 
 3155      00
 3156              	.LASF45:
 3157 024c 5344494F 		.ascii	"SDIO_Response\000"
 3157      5F526573 
 3157      706F6E73 
 3157      6500
 3158              	.LASF52:
 3159 025a 5344494F 		.ascii	"SDIO_TransferDir\000"
 3159      5F547261 
 3159      6E736665 
 3159      72446972 
 3159      00
 3160              	.LASF18:
 3161 026b 46756E63 		.ascii	"FunctionalState\000"
 3161      74696F6E 
 3161      616C5374 
 3161      61746500 
 3162              	.LASF59:
 3163 027b 5344494F 		.ascii	"SDIO_InitStruct\000"
 3163      5F496E69 
 3163      74537472 
 3163      75637400 
 3164              	.LASF79:
 3165 028b 5344494F 		.ascii	"SDIO_StartSDIOReadWait\000"
 3165      5F537461 
 3165      72745344 
 3165      494F5265 
 3165      61645761 
 3166              	.LASF34:
 3167 02a2 4649464F 		.ascii	"FIFO\000"
 3167      00
 3168              	.LASF6:
 3169 02a7 6C6F6E67 		.ascii	"long int\000"
 3169      20696E74 
 3169      00
 3170              	.LASF97:
 3171 02b0 5344494F 		.ascii	"SDIO_ClearITPendingBit\000"
 3171      5F436C65 
 3171      61724954 
 3171      50656E64 
 3171      696E6742 
 3172              	.LASF88:
 3173 02c7 5344494F 		.ascii	"SDIO_DMACmd\000"
 3173      5F444D41 
 3173      436D6400 
 3174              	.LASF63:
 3175 02d3 5344494F 		.ascii	"SDIO_PowerState\000"
 3175      5F506F77 
 3175      65725374 
 3175      61746500 
 3176              	.LASF58:
 3177 02e3 5344494F 		.ascii	"SDIO_StructInit\000"
ARM GAS  /tmp/ccDT7MPS.s 			page 77


 3177      5F537472 
 3177      75637449 
 3177      6E697400 
 3178              	.LASF77:
 3179 02f3 44617461 		.ascii	"Data\000"
 3179      00
 3180              	.LASF38:
 3181 02f8 5344494F 		.ascii	"SDIO_ClockPowerSave\000"
 3181      5F436C6F 
 3181      636B506F 
 3181      77657253 
 3181      61766500 
 3182              	.LASF66:
 3183 030c 746D7072 		.ascii	"tmpreg\000"
 3183      656700
 3184              	.LASF71:
 3185 0313 5344494F 		.ascii	"SDIO_DataConfig\000"
 3185      5F446174 
 3185      61436F6E 
 3185      66696700 
 3186              	.LASF99:
 3187 0323 73746D33 		.ascii	"stm32f4xx_sdio.c\000"
 3187      32663478 
 3187      785F7364 
 3187      696F2E63 
 3187      00
 3188              	.LASF90:
 3189 0334 5344494F 		.ascii	"SDIO_IT\000"
 3189      5F495400 
 3190              	.LASF1:
 3191 033c 756E7369 		.ascii	"unsigned char\000"
 3191      676E6564 
 3191      20636861 
 3191      7200
 3192              	.LASF72:
 3193 034a 5344494F 		.ascii	"SDIO_DataInitStruct\000"
 3193      5F446174 
 3193      61496E69 
 3193      74537472 
 3193      75637400 
 3194              	.LASF0:
 3195 035e 7369676E 		.ascii	"signed char\000"
 3195      65642063 
 3195      68617200 
 3196              	.LASF10:
 3197 036a 6C6F6E67 		.ascii	"long long unsigned int\000"
 3197      206C6F6E 
 3197      6720756E 
 3197      7369676E 
 3197      65642069 
 3198              	.LASF7:
 3199 0381 75696E74 		.ascii	"uint32_t\000"
 3199      33325F74 
 3199      00
 3200              	.LASF73:
 3201 038a 5344494F 		.ascii	"SDIO_DataStructInit\000"
 3201      5F446174 
ARM GAS  /tmp/ccDT7MPS.s 			page 78


 3201      61537472 
 3201      75637449 
 3201      6E697400 
 3202              	.LASF11:
 3203 039e 756E7369 		.ascii	"unsigned int\000"
 3203      676E6564 
 3203      20696E74 
 3203      00
 3204              	.LASF30:
 3205 03ab 4D41534B 		.ascii	"MASK\000"
 3205      00
 3206              	.LASF98:
 3207 03b0 474E5520 		.ascii	"GNU C 4.7.4 20130913 (release) [ARM/embedded-4_7-br"
 3207      4320342E 
 3207      372E3420 
 3207      32303133 
 3207      30393133 
 3208 03e3 616E6368 		.ascii	"anch revision 202601]\000"
 3208      20726576 
 3208      6973696F 
 3208      6E203230 
 3208      32363031 
 3209              	.LASF35:
 3210 03f9 5344494F 		.ascii	"SDIO_TypeDef\000"
 3210      5F547970 
 3210      65446566 
 3210      00
 3211              	.LASF91:
 3212 0406 5344494F 		.ascii	"SDIO_GetResponse\000"
 3212      5F476574 
 3212      52657370 
 3212      6F6E7365 
 3212      00
 3213              	.LASF69:
 3214 0417 5344494F 		.ascii	"SDIO_GetCommandResponse\000"
 3214      5F476574 
 3214      436F6D6D 
 3214      616E6452 
 3214      6573706F 
 3215              	.LASF102:
 3216 042f 5243435F 		.ascii	"RCC_APB2PeriphResetCmd\000"
 3216      41504232 
 3216      50657269 
 3216      70685265 
 3216      73657443 
 3217              	.LASF3:
 3218 0446 73686F72 		.ascii	"short unsigned int\000"
 3218      7420756E 
 3218      7369676E 
 3218      65642069 
 3218      6E7400
 3219              	.LASF46:
 3220 0459 5344494F 		.ascii	"SDIO_Wait\000"
 3220      5F576169 
 3220      7400
 3221              	.LASF22:
 3222 0463 52455350 		.ascii	"RESP1\000"
ARM GAS  /tmp/ccDT7MPS.s 			page 79


 3222      3100
 3223              	.LASF23:
 3224 0469 52455350 		.ascii	"RESP2\000"
 3224      3200
 3225              	.LASF24:
 3226 046f 52455350 		.ascii	"RESP3\000"
 3226      3300
 3227              	.LASF25:
 3228 0475 52455350 		.ascii	"RESP4\000"
 3228      3400
 3229              	.LASF5:
 3230 047b 696E7433 		.ascii	"int32_t\000"
 3230      325F7400 
 3231              	.LASF93:
 3232 0483 5344494F 		.ascii	"SDIO_FLAG\000"
 3232      5F464C41 
 3232      4700
 3233              	.LASF15:
 3234 048d 49545374 		.ascii	"ITStatus\000"
 3234      61747573 
 3234      00
 3235              	.LASF31:
 3236 0496 52455345 		.ascii	"RESERVED0\000"
 3236      52564544 
 3236      3000
 3237              	.LASF33:
 3238 04a0 52455345 		.ascii	"RESERVED1\000"
 3238      52564544 
 3238      3100
 3239              	.LASF8:
 3240 04aa 6C6F6E67 		.ascii	"long unsigned int\000"
 3240      20756E73 
 3240      69676E65 
 3240      6420696E 
 3240      7400
 3241              	.LASF62:
 3242 04bc 5344494F 		.ascii	"SDIO_SetPowerState\000"
 3242      5F536574 
 3242      506F7765 
 3242      72537461 
 3242      746500
 3243              	.LASF65:
 3244 04cf 5344494F 		.ascii	"SDIO_CmdInitStruct\000"
 3244      5F436D64 
 3244      496E6974 
 3244      53747275 
 3244      637400
 3245              	.LASF20:
 3246 04e2 434C4B43 		.ascii	"CLKCR\000"
 3246      5200
 3247              	.LASF87:
 3248 04e8 5344494F 		.ascii	"SDIO_SendCEATACmd\000"
 3248      5F53656E 
 3248      64434541 
 3248      5441436D 
 3248      6400
 3249              	.LASF39:
ARM GAS  /tmp/ccDT7MPS.s 			page 80


 3250 04fa 5344494F 		.ascii	"SDIO_BusWide\000"
 3250      5F427573 
 3250      57696465 
 3250      00
 3251              	.LASF67:
 3252 0507 5344494F 		.ascii	"SDIO_CmdStructInit\000"
 3252      5F436D64 
 3252      53747275 
 3252      6374496E 
 3252      697400
 3253              	.LASF85:
 3254 051a 5344494F 		.ascii	"SDIO_CommandCompletionCmd\000"
 3254      5F436F6D 
 3254      6D616E64 
 3254      436F6D70 
 3254      6C657469 
 3255              	.LASF48:
 3256 0534 5344494F 		.ascii	"SDIO_CmdInitTypeDef\000"
 3256      5F436D64 
 3256      496E6974 
 3256      54797065 
 3256      44656600 
 3257              	.LASF13:
 3258 0548 52455345 		.ascii	"RESET\000"
 3258      5400
 3259              	.LASF76:
 3260 054e 5344494F 		.ascii	"SDIO_WriteData\000"
 3260      5F577269 
 3260      74654461 
 3260      746100
 3261              	.LASF75:
 3262 055d 5344494F 		.ascii	"SDIO_ReadData\000"
 3262      5F526561 
 3262      64446174 
 3262      6100
 3263              	.LASF55:
 3264 056b 5344494F 		.ascii	"SDIO_DataInitTypeDef\000"
 3264      5F446174 
 3264      61496E69 
 3264      74547970 
 3264      65446566 
 3265              	.LASF95:
 3266 0580 5344494F 		.ascii	"SDIO_ClearFlag\000"
 3266      5F436C65 
 3266      6172466C 
 3266      616700
 3267              	.LASF56:
 3268 058f 5344494F 		.ascii	"SDIO_DeInit\000"
 3268      5F446549 
 3268      6E697400 
 3269              	.LASF32:
 3270 059b 4649464F 		.ascii	"FIFOCNT\000"
 3270      434E5400 
 3271              	.LASF47:
 3272 05a3 5344494F 		.ascii	"SDIO_CPSM\000"
 3272      5F435053 
 3272      4D00
ARM GAS  /tmp/ccDT7MPS.s 			page 81


 3273              	.LASF101:
 3274 05ad 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3274      52784275 
 3274      66666572 
 3274      00
 3275              	.LASF94:
 3276 05ba 62697473 		.ascii	"bitstatus\000"
 3276      74617475 
 3276      7300
 3277              	.LASF21:
 3278 05c4 52455350 		.ascii	"RESPCMD\000"
 3278      434D4400 
 3279              	.LASF92:
 3280 05cc 5344494F 		.ascii	"SDIO_GetFlagStatus\000"
 3280      5F476574 
 3280      466C6167 
 3280      53746174 
 3280      757300
 3281              	.LASF14:
 3282 05df 466C6167 		.ascii	"FlagStatus\000"
 3282      53746174 
 3282      757300
 3283              	.LASF17:
 3284 05ea 454E4142 		.ascii	"ENABLE\000"
 3284      4C4500
 3285              	.LASF89:
 3286 05f1 5344494F 		.ascii	"SDIO_ITConfig\000"
 3286      5F495443 
 3286      6F6E6669 
 3286      6700
 3287              	.LASF53:
 3288 05ff 5344494F 		.ascii	"SDIO_TransferMode\000"
 3288      5F547261 
 3288      6E736665 
 3288      724D6F64 
 3288      6500
 3289              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.7.4 20130913 (release) [ARM/embedded-4_7-br
ARM GAS  /tmp/ccDT7MPS.s 			page 82


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_sdio.c
     /tmp/ccDT7MPS.s:69     .text.SDIO_DeInit:0000000000000000 $t
     /tmp/ccDT7MPS.s:74     .text.SDIO_DeInit:0000000000000000 SDIO_DeInit
     /tmp/ccDT7MPS.s:103    .text.SDIO_Init:0000000000000000 $t
     /tmp/ccDT7MPS.s:108    .text.SDIO_Init:0000000000000000 SDIO_Init
     /tmp/ccDT7MPS.s:159    .text.SDIO_Init:000000000000002c $d
     /tmp/ccDT7MPS.s:164    .text.SDIO_StructInit:0000000000000000 $t
     /tmp/ccDT7MPS.s:169    .text.SDIO_StructInit:0000000000000000 SDIO_StructInit
     /tmp/ccDT7MPS.s:195    .text.SDIO_ClockCmd:0000000000000000 $t
     /tmp/ccDT7MPS.s:200    .text.SDIO_ClockCmd:0000000000000000 SDIO_ClockCmd
     /tmp/ccDT7MPS.s:215    .text.SDIO_ClockCmd:0000000000000008 $d
     /tmp/ccDT7MPS.s:220    .text.SDIO_SetPowerState:0000000000000000 $t
     /tmp/ccDT7MPS.s:225    .text.SDIO_SetPowerState:0000000000000000 SDIO_SetPowerState
     /tmp/ccDT7MPS.s:240    .text.SDIO_SetPowerState:0000000000000008 $d
     /tmp/ccDT7MPS.s:245    .text.SDIO_GetPowerState:0000000000000000 $t
     /tmp/ccDT7MPS.s:250    .text.SDIO_GetPowerState:0000000000000000 SDIO_GetPowerState
     /tmp/ccDT7MPS.s:266    .text.SDIO_GetPowerState:000000000000000c $d
     /tmp/ccDT7MPS.s:271    .text.SDIO_SendCommand:0000000000000000 $t
     /tmp/ccDT7MPS.s:276    .text.SDIO_SendCommand:0000000000000000 SDIO_SendCommand
     /tmp/ccDT7MPS.s:320    .text.SDIO_SendCommand:0000000000000028 $d
     /tmp/ccDT7MPS.s:325    .text.SDIO_CmdStructInit:0000000000000000 $t
     /tmp/ccDT7MPS.s:330    .text.SDIO_CmdStructInit:0000000000000000 SDIO_CmdStructInit
     /tmp/ccDT7MPS.s:354    .text.SDIO_GetCommandResponse:0000000000000000 $t
     /tmp/ccDT7MPS.s:359    .text.SDIO_GetCommandResponse:0000000000000000 SDIO_GetCommandResponse
     /tmp/ccDT7MPS.s:375    .text.SDIO_GetCommandResponse:0000000000000008 $d
     /tmp/ccDT7MPS.s:380    .text.SDIO_GetResponse:0000000000000000 $t
     /tmp/ccDT7MPS.s:385    .text.SDIO_GetResponse:0000000000000000 SDIO_GetResponse
     /tmp/ccDT7MPS.s:419    .text.SDIO_GetResponse:0000000000000014 $d
     /tmp/ccDT7MPS.s:424    .text.SDIO_DataConfig:0000000000000000 $t
     /tmp/ccDT7MPS.s:429    .text.SDIO_DataConfig:0000000000000000 SDIO_DataConfig
     /tmp/ccDT7MPS.s:477    .text.SDIO_DataConfig:0000000000000028 $d
     /tmp/ccDT7MPS.s:482    .text.SDIO_DataStructInit:0000000000000000 $t
     /tmp/ccDT7MPS.s:487    .text.SDIO_DataStructInit:0000000000000000 SDIO_DataStructInit
     /tmp/ccDT7MPS.s:515    .text.SDIO_GetDataCounter:0000000000000000 $t
     /tmp/ccDT7MPS.s:520    .text.SDIO_GetDataCounter:0000000000000000 SDIO_GetDataCounter
     /tmp/ccDT7MPS.s:535    .text.SDIO_GetDataCounter:0000000000000008 $d
     /tmp/ccDT7MPS.s:540    .text.SDIO_ReadData:0000000000000000 $t
     /tmp/ccDT7MPS.s:545    .text.SDIO_ReadData:0000000000000000 SDIO_ReadData
     /tmp/ccDT7MPS.s:560    .text.SDIO_ReadData:0000000000000008 $d
     /tmp/ccDT7MPS.s:565    .text.SDIO_WriteData:0000000000000000 $t
     /tmp/ccDT7MPS.s:570    .text.SDIO_WriteData:0000000000000000 SDIO_WriteData
     /tmp/ccDT7MPS.s:585    .text.SDIO_WriteData:0000000000000008 $d
     /tmp/ccDT7MPS.s:590    .text.SDIO_GetFIFOCount:0000000000000000 $t
     /tmp/ccDT7MPS.s:595    .text.SDIO_GetFIFOCount:0000000000000000 SDIO_GetFIFOCount
     /tmp/ccDT7MPS.s:610    .text.SDIO_GetFIFOCount:0000000000000008 $d
     /tmp/ccDT7MPS.s:615    .text.SDIO_StartSDIOReadWait:0000000000000000 $t
     /tmp/ccDT7MPS.s:620    .text.SDIO_StartSDIOReadWait:0000000000000000 SDIO_StartSDIOReadWait
     /tmp/ccDT7MPS.s:635    .text.SDIO_StartSDIOReadWait:0000000000000008 $d
     /tmp/ccDT7MPS.s:640    .text.SDIO_StopSDIOReadWait:0000000000000000 $t
     /tmp/ccDT7MPS.s:645    .text.SDIO_StopSDIOReadWait:0000000000000000 SDIO_StopSDIOReadWait
     /tmp/ccDT7MPS.s:660    .text.SDIO_StopSDIOReadWait:0000000000000008 $d
     /tmp/ccDT7MPS.s:665    .text.SDIO_SetSDIOReadWaitMode:0000000000000000 $t
     /tmp/ccDT7MPS.s:670    .text.SDIO_SetSDIOReadWaitMode:0000000000000000 SDIO_SetSDIOReadWaitMode
     /tmp/ccDT7MPS.s:685    .text.SDIO_SetSDIOReadWaitMode:0000000000000008 $d
     /tmp/ccDT7MPS.s:690    .text.SDIO_SetSDIOOperation:0000000000000000 $t
     /tmp/ccDT7MPS.s:695    .text.SDIO_SetSDIOOperation:0000000000000000 SDIO_SetSDIOOperation
ARM GAS  /tmp/ccDT7MPS.s 			page 83


     /tmp/ccDT7MPS.s:710    .text.SDIO_SetSDIOOperation:0000000000000008 $d
     /tmp/ccDT7MPS.s:715    .text.SDIO_SendSDIOSuspendCmd:0000000000000000 $t
     /tmp/ccDT7MPS.s:720    .text.SDIO_SendSDIOSuspendCmd:0000000000000000 SDIO_SendSDIOSuspendCmd
     /tmp/ccDT7MPS.s:735    .text.SDIO_SendSDIOSuspendCmd:0000000000000008 $d
     /tmp/ccDT7MPS.s:740    .text.SDIO_CommandCompletionCmd:0000000000000000 $t
     /tmp/ccDT7MPS.s:745    .text.SDIO_CommandCompletionCmd:0000000000000000 SDIO_CommandCompletionCmd
     /tmp/ccDT7MPS.s:760    .text.SDIO_CommandCompletionCmd:0000000000000008 $d
     /tmp/ccDT7MPS.s:765    .text.SDIO_CEATAITCmd:0000000000000000 $t
     /tmp/ccDT7MPS.s:770    .text.SDIO_CEATAITCmd:0000000000000000 SDIO_CEATAITCmd
     /tmp/ccDT7MPS.s:788    .text.SDIO_CEATAITCmd:0000000000000010 $d
     /tmp/ccDT7MPS.s:793    .text.SDIO_SendCEATACmd:0000000000000000 $t
     /tmp/ccDT7MPS.s:798    .text.SDIO_SendCEATACmd:0000000000000000 SDIO_SendCEATACmd
     /tmp/ccDT7MPS.s:813    .text.SDIO_SendCEATACmd:0000000000000008 $d
     /tmp/ccDT7MPS.s:818    .text.SDIO_DMACmd:0000000000000000 $t
     /tmp/ccDT7MPS.s:823    .text.SDIO_DMACmd:0000000000000000 SDIO_DMACmd
     /tmp/ccDT7MPS.s:838    .text.SDIO_DMACmd:0000000000000008 $d
     /tmp/ccDT7MPS.s:843    .text.SDIO_ITConfig:0000000000000000 $t
     /tmp/ccDT7MPS.s:848    .text.SDIO_ITConfig:0000000000000000 SDIO_ITConfig
     /tmp/ccDT7MPS.s:876    .text.SDIO_ITConfig:0000000000000014 $d
     /tmp/ccDT7MPS.s:881    .text.SDIO_GetFlagStatus:0000000000000000 $t
     /tmp/ccDT7MPS.s:886    .text.SDIO_GetFlagStatus:0000000000000000 SDIO_GetFlagStatus
     /tmp/ccDT7MPS.s:908    .text.SDIO_GetFlagStatus:0000000000000010 $d
     /tmp/ccDT7MPS.s:913    .text.SDIO_ClearFlag:0000000000000000 $t
     /tmp/ccDT7MPS.s:918    .text.SDIO_ClearFlag:0000000000000000 SDIO_ClearFlag
     /tmp/ccDT7MPS.s:933    .text.SDIO_ClearFlag:0000000000000008 $d
     /tmp/ccDT7MPS.s:938    .text.SDIO_GetITStatus:0000000000000000 $t
     /tmp/ccDT7MPS.s:943    .text.SDIO_GetITStatus:0000000000000000 SDIO_GetITStatus
     /tmp/ccDT7MPS.s:965    .text.SDIO_GetITStatus:0000000000000010 $d
     /tmp/ccDT7MPS.s:970    .text.SDIO_ClearITPendingBit:0000000000000000 $t
     /tmp/ccDT7MPS.s:975    .text.SDIO_ClearITPendingBit:0000000000000000 SDIO_ClearITPendingBit
     /tmp/ccDT7MPS.s:990    .text.SDIO_ClearITPendingBit:0000000000000008 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
RCC_APB2PeriphResetCmd
