ARM GAS  /tmp/ccLt1DA2.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 2
  13              		.eabi_attribute 18, 4
  14              		.file	"system_stm32f4xx.c"
  15              	@ GNU C (Linaro GCC 4.6-2011.10) version 4.6.2 20111004 (prerelease) (arm-none-eabi)
  16              	@	compiled by GNU C version 4.6.3, GMP version 5.0.2, MPFR version 3.1.0-p3, MPC version 0.9
  17              	@ warning: GMP header version 5.0.2 differs from library version 5.0.5.
  18              	@ warning: MPFR header version 3.1.0-p3 differs from library version 3.1.1-p2.
  19              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  20              	@ options passed:  -I . -I ../ -I ../inc/ -I ../drv/inc/ -I ../cmsis/
  21              	@ -imultilib thumb/cortex-m4/float-abi-hard/fpuv4-sp-d16
  22              	@ -MD ../cmsis/system_stm32f4xx.d -MF .dep/system_stm32f4xx.o.d -MP
  23              	@ -MQ ../cmsis/system_stm32f4xx.o -D__USES_INITFINI__ -D __FPU_USED=1
  24              	@ -D __arm__ -D __ASSEMBLY__ -D USE_STDPERIPH_DRIVER -D STM32F4XX
  25              	@ -D HSE_VALUE=8000000 -D __FPU_PRESENT=1 -D __FPU_USED=1 -D STM32F407VG
  26              	@ -D USE_USB_OTG_FS -D RUN_FROM_FLASH=1 ../cmsis/system_stm32f4xx.c -mthumb
  27              	@ -mcpu=cortex-m4 -mfloat-abi=hard -mfpu=fpv4-sp-d16
  28              	@ -auxbase-strip ../cmsis/system_stm32f4xx.o -gdwarf-2 -O2 -Wall
  29              	@ -Wstrict-prototypes -std=gnu99 -falign-functions=16 -fno-inline
  30              	@ -fomit-frame-pointer -fverbose-asm -ffunction-sections -fdata-sections
  31              	@ options enabled:  -fauto-inc-dec -fbranch-count-reg -fcaller-saves
  32              	@ -fcombine-stack-adjustments -fcommon -fcompare-elim -fcprop-registers
  33              	@ -fcrossjumping -fcse-follow-jumps -fdata-sections -fdefer-pop
  34              	@ -fdelete-null-pointer-checks -fdevirtualize -fdwarf2-cfi-asm
  35              	@ -fearly-inlining -feliminate-unused-debug-types -fexpensive-optimizations
  36              	@ -fforward-propagate -ffunction-cse -ffunction-sections -fgcse -fgcse-lm
  37              	@ -fguess-branch-probability -fident -fif-conversion -fif-conversion2
  38              	@ -findirect-inlining -finline-functions-called-once
  39              	@ -finline-small-functions -fipa-cp -fipa-profile -fipa-pure-const
  40              	@ -fipa-reference -fipa-sra -fira-share-save-slots -fira-share-spill-slots
  41              	@ -fivopts -fkeep-static-consts -fleading-underscore -fmath-errno
  42              	@ -fmerge-constants -fmerge-debug-strings -fmove-loop-invariants
  43              	@ -fomit-frame-pointer -foptimize-register-move -foptimize-sibling-calls
  44              	@ -fpartial-inlining -fpeephole -fpeephole2 -fprefetch-loop-arrays
  45              	@ -freg-struct-return -fregmove -freorder-blocks -freorder-functions
  46              	@ -frerun-cse-after-loop -fsched-critical-path-heuristic
  47              	@ -fsched-dep-count-heuristic -fsched-group-heuristic -fsched-interblock
  48              	@ -fsched-last-insn-heuristic -fsched-rank-heuristic -fsched-spec
  49              	@ -fsched-spec-insn-heuristic -fsched-stalled-insns-dep -fschedule-insns
  50              	@ -fschedule-insns2 -fsection-anchors -fshow-column -fsigned-zeros
  51              	@ -fsplit-ivs-in-unroller -fsplit-wide-types -fstrict-aliasing
  52              	@ -fstrict-overflow -fstrict-volatile-bitfields -fthread-jumps
  53              	@ -ftoplevel-reorder -ftrapping-math -ftree-bit-ccp -ftree-builtin-call-dce
  54              	@ -ftree-ccp -ftree-ch -ftree-copy-prop -ftree-copyrename -ftree-cselim
  55              	@ -ftree-dce -ftree-dominator-opts -ftree-dse -ftree-forwprop -ftree-fre
  56              	@ -ftree-loop-if-convert -ftree-loop-im -ftree-loop-ivcanon
  57              	@ -ftree-loop-optimize -ftree-parallelize-loops= -ftree-phiprop -ftree-pre
ARM GAS  /tmp/ccLt1DA2.s 			page 2


  58              	@ -ftree-pta -ftree-reassoc -ftree-scev-cprop -ftree-sink
  59              	@ -ftree-slp-vectorize -ftree-sra -ftree-switch-conversion -ftree-ter
  60              	@ -ftree-vect-loop-version -ftree-vrp -funit-at-a-time -fvar-tracking
  61              	@ -fvar-tracking-assignments -fverbose-asm -fzero-initialized-in-bss
  62              	@ -mlittle-endian -msched-prolog -mthumb -mvectorize-with-neon-quad
  63              	
  64              		.text
  65              	.Ltext0:
  66              	@ Compiler executable checksum: 0b4f3bed1437fea95f209a5480b5e57c
  67              	
  68              		.cfi_sections	.debug_frame
  69              		.section	.text.SetSysClock,"ax",%progbits
  70              		.align	2
  71              		.p2align 4,,15
  72              		.thumb
  73              		.thumb_func
  74              		.type	SetSysClock, %function
  75              	SetSysClock:
  76              	.LFB112:
  77              		.file 1 "../cmsis/system_stm32f4xx.c"
   1:../cmsis/system_stm32f4xx.c **** /**
   2:../cmsis/system_stm32f4xx.c ****   ******************************************************************************
   3:../cmsis/system_stm32f4xx.c ****   * @file    system_stm32f4xx.c
   4:../cmsis/system_stm32f4xx.c ****   * @author  MCD Application Team
   5:../cmsis/system_stm32f4xx.c ****   * @version V2.1.0
   6:../cmsis/system_stm32f4xx.c ****   * @date    19-March-2012
   7:../cmsis/system_stm32f4xx.c ****   * @brief   CMSIS Cortex-M4 Device Peripheral Access Layer System Source File.
   8:../cmsis/system_stm32f4xx.c ****   *          This file contains the system clock configuration for STM32F4xx devices,
   9:../cmsis/system_stm32f4xx.c ****   *          and is generated by the clock configuration tool
  10:../cmsis/system_stm32f4xx.c ****   *          stm32f4xx_Clock_Configuration_V1.0.0.xls
  11:../cmsis/system_stm32f4xx.c ****   *             
  12:../cmsis/system_stm32f4xx.c ****   * 1.  This file provides two functions and one global variable to be called from 
  13:../cmsis/system_stm32f4xx.c ****   *     user application:
  14:../cmsis/system_stm32f4xx.c ****   *      - SystemInit(): Setups the system clock (System clock source, PLL Multiplier
  15:../cmsis/system_stm32f4xx.c ****   *                      and Divider factors, AHB/APBx prescalers and Flash settings),
  16:../cmsis/system_stm32f4xx.c ****   *                      depending on the configuration made in the clock xls tool. 
  17:../cmsis/system_stm32f4xx.c ****   *                      This function is called at startup just after reset and 
  18:../cmsis/system_stm32f4xx.c ****   *                      before branch to main program. This call is made inside
  19:../cmsis/system_stm32f4xx.c ****   *                      the "startup_stm32f4xx.s" file.
  20:../cmsis/system_stm32f4xx.c ****   *
  21:../cmsis/system_stm32f4xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  22:../cmsis/system_stm32f4xx.c ****   *                                  by the user application to setup the SysTick 
  23:../cmsis/system_stm32f4xx.c ****   *                                  timer or configure other parameters.
  24:../cmsis/system_stm32f4xx.c ****   *                                     
  25:../cmsis/system_stm32f4xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  26:../cmsis/system_stm32f4xx.c ****   *                                 be called whenever the core clock is changed
  27:../cmsis/system_stm32f4xx.c ****   *                                 during program execution.
  28:../cmsis/system_stm32f4xx.c ****   *
  29:../cmsis/system_stm32f4xx.c ****   * 2. After each device reset the HSI (16 MHz) is used as system clock source.
  30:../cmsis/system_stm32f4xx.c ****   *    Then SystemInit() function is called, in "startup_stm32f4xx.s" file, to
  31:../cmsis/system_stm32f4xx.c ****   *    configure the system clock before to branch to main program.
  32:../cmsis/system_stm32f4xx.c ****   *
  33:../cmsis/system_stm32f4xx.c ****   * 3. If the system clock source selected by user fails to startup, the SystemInit()
  34:../cmsis/system_stm32f4xx.c ****   *    function will do nothing and HSI still used as system clock source. User can 
  35:../cmsis/system_stm32f4xx.c ****   *    add some code to deal with this issue inside the SetSysClock() function.
  36:../cmsis/system_stm32f4xx.c ****   *
  37:../cmsis/system_stm32f4xx.c ****   * 4. The default value of HSE crystal is set to 25MHz, refer to "HSE_VALUE" define
ARM GAS  /tmp/ccLt1DA2.s 			page 3


  38:../cmsis/system_stm32f4xx.c ****   *    in "stm32f4xx.h" file. When HSE is used as system clock source, directly or
  39:../cmsis/system_stm32f4xx.c ****   *    through PLL, and you are using different crystal you have to adapt the HSE
  40:../cmsis/system_stm32f4xx.c ****   *    value to your own configuration.
  41:../cmsis/system_stm32f4xx.c ****   *
  42:../cmsis/system_stm32f4xx.c ****   * 5. This file configures the system clock as follows:
  43:../cmsis/system_stm32f4xx.c ****   *=============================================================================
  44:../cmsis/system_stm32f4xx.c ****   *=============================================================================
  45:../cmsis/system_stm32f4xx.c ****   *        Supported STM32F4xx device revision    | Rev A
  46:../cmsis/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  47:../cmsis/system_stm32f4xx.c ****   *        System Clock source                    | PLL (HSE)
  48:../cmsis/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  49:../cmsis/system_stm32f4xx.c ****   *        SYSCLK(Hz)                             | 168000000
  50:../cmsis/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  51:../cmsis/system_stm32f4xx.c ****   *        HCLK(Hz)                               | 168000000
  52:../cmsis/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  53:../cmsis/system_stm32f4xx.c ****   *        AHB Prescaler                          | 1
  54:../cmsis/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  55:../cmsis/system_stm32f4xx.c ****   *        APB1 Prescaler                         | 4
  56:../cmsis/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  57:../cmsis/system_stm32f4xx.c ****   *        APB2 Prescaler                         | 2
  58:../cmsis/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  59:../cmsis/system_stm32f4xx.c ****   *        HSE Frequency(Hz)                      | 8000000
  60:../cmsis/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  61:../cmsis/system_stm32f4xx.c ****   *        PLL_M                                  | 8
  62:../cmsis/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  63:../cmsis/system_stm32f4xx.c ****   *        PLL_N                                  | 336
  64:../cmsis/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  65:../cmsis/system_stm32f4xx.c ****   *        PLL_P                                  | 2
  66:../cmsis/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  67:../cmsis/system_stm32f4xx.c ****   *        PLL_Q                                  | 7
  68:../cmsis/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  69:../cmsis/system_stm32f4xx.c ****   *        PLLI2S_N                               | NA
  70:../cmsis/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  71:../cmsis/system_stm32f4xx.c ****   *        PLLI2S_R                               | NA
  72:../cmsis/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  73:../cmsis/system_stm32f4xx.c ****   *        I2S input clock                        | NA
  74:../cmsis/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  75:../cmsis/system_stm32f4xx.c ****   *        VDD(V)                                 | 3.3
  76:../cmsis/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  77:../cmsis/system_stm32f4xx.c ****   *        Main regulator output voltage          | Scale1 mode
  78:../cmsis/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  79:../cmsis/system_stm32f4xx.c ****   *        Flash Latency(WS)                      | 5
  80:../cmsis/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  81:../cmsis/system_stm32f4xx.c ****   *        Prefetch Buffer                        | OFF
  82:../cmsis/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  83:../cmsis/system_stm32f4xx.c ****   *        Instruction cache                      | ON
  84:../cmsis/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  85:../cmsis/system_stm32f4xx.c ****   *        Data cache                             | ON
  86:../cmsis/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  87:../cmsis/system_stm32f4xx.c ****   *        Require 48MHz for USB OTG FS,          | Enabled
  88:../cmsis/system_stm32f4xx.c ****   *        SDIO and RNG clock                     |
  89:../cmsis/system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  90:../cmsis/system_stm32f4xx.c ****   *=============================================================================
  91:../cmsis/system_stm32f4xx.c ****   ******************************************************************************
  92:../cmsis/system_stm32f4xx.c ****   * @attention
  93:../cmsis/system_stm32f4xx.c ****   *
  94:../cmsis/system_stm32f4xx.c ****   * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
ARM GAS  /tmp/ccLt1DA2.s 			page 4


  95:../cmsis/system_stm32f4xx.c ****   *
  96:../cmsis/system_stm32f4xx.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  97:../cmsis/system_stm32f4xx.c ****   * You may not use this file except in compliance with the License.
  98:../cmsis/system_stm32f4xx.c ****   * You may obtain a copy of the License at:
  99:../cmsis/system_stm32f4xx.c ****   *
 100:../cmsis/system_stm32f4xx.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
 101:../cmsis/system_stm32f4xx.c ****   *
 102:../cmsis/system_stm32f4xx.c ****   * Unless required by applicable law or agreed to in writing, software 
 103:../cmsis/system_stm32f4xx.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
 104:../cmsis/system_stm32f4xx.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 105:../cmsis/system_stm32f4xx.c ****   * See the License for the specific language governing permissions and
 106:../cmsis/system_stm32f4xx.c ****   * limitations under the License.
 107:../cmsis/system_stm32f4xx.c ****   *
 108:../cmsis/system_stm32f4xx.c ****   ******************************************************************************
 109:../cmsis/system_stm32f4xx.c ****   */
 110:../cmsis/system_stm32f4xx.c **** 
 111:../cmsis/system_stm32f4xx.c **** /** @addtogroup CMSIS
 112:../cmsis/system_stm32f4xx.c ****   * @{
 113:../cmsis/system_stm32f4xx.c ****   */
 114:../cmsis/system_stm32f4xx.c **** 
 115:../cmsis/system_stm32f4xx.c **** /** @addtogroup stm32f4xx_system
 116:../cmsis/system_stm32f4xx.c ****   * @{
 117:../cmsis/system_stm32f4xx.c ****   */  
 118:../cmsis/system_stm32f4xx.c ****   
 119:../cmsis/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Includes
 120:../cmsis/system_stm32f4xx.c ****   * @{
 121:../cmsis/system_stm32f4xx.c ****   */
 122:../cmsis/system_stm32f4xx.c **** 
 123:../cmsis/system_stm32f4xx.c **** #include "stm32f4xx.h"
 124:../cmsis/system_stm32f4xx.c **** 
 125:../cmsis/system_stm32f4xx.c **** /**
 126:../cmsis/system_stm32f4xx.c ****   * @}
 127:../cmsis/system_stm32f4xx.c ****   */
 128:../cmsis/system_stm32f4xx.c **** 
 129:../cmsis/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_TypesDefinitions
 130:../cmsis/system_stm32f4xx.c ****   * @{
 131:../cmsis/system_stm32f4xx.c ****   */
 132:../cmsis/system_stm32f4xx.c **** 
 133:../cmsis/system_stm32f4xx.c **** /**
 134:../cmsis/system_stm32f4xx.c ****   * @}
 135:../cmsis/system_stm32f4xx.c ****   */
 136:../cmsis/system_stm32f4xx.c **** 
 137:../cmsis/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Defines
 138:../cmsis/system_stm32f4xx.c ****   * @{
 139:../cmsis/system_stm32f4xx.c ****   */
 140:../cmsis/system_stm32f4xx.c **** 
 141:../cmsis/system_stm32f4xx.c **** /************************* Miscellaneous Configuration ************************/
 142:../cmsis/system_stm32f4xx.c **** /*!< Uncomment the following line if you need to use external SRAM mounted
 143:../cmsis/system_stm32f4xx.c ****      on STM324xG_EVAL board as data memory  */
 144:../cmsis/system_stm32f4xx.c **** /* #define DATA_IN_ExtSRAM */
 145:../cmsis/system_stm32f4xx.c **** 
 146:../cmsis/system_stm32f4xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table in
 147:../cmsis/system_stm32f4xx.c ****      Internal SRAM. */
 148:../cmsis/system_stm32f4xx.c **** /* #define VECT_TAB_SRAM */
 149:../cmsis/system_stm32f4xx.c **** #define VECT_TAB_OFFSET  0x00 /*!< Vector Table base offset field. 
 150:../cmsis/system_stm32f4xx.c ****                                    This value must be a multiple of 0x200. */
 151:../cmsis/system_stm32f4xx.c **** /******************************************************************************/
ARM GAS  /tmp/ccLt1DA2.s 			page 5


 152:../cmsis/system_stm32f4xx.c **** 
 153:../cmsis/system_stm32f4xx.c **** /************************* PLL Parameters *************************************/
 154:../cmsis/system_stm32f4xx.c **** /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLL_M) * PLL_N */
 155:../cmsis/system_stm32f4xx.c **** #define PLL_M      8
 156:../cmsis/system_stm32f4xx.c **** #define PLL_N      336
 157:../cmsis/system_stm32f4xx.c **** 
 158:../cmsis/system_stm32f4xx.c **** /* SYSCLK = PLL_VCO / PLL_P */
 159:../cmsis/system_stm32f4xx.c **** #define PLL_P      2
 160:../cmsis/system_stm32f4xx.c **** 
 161:../cmsis/system_stm32f4xx.c **** /* USB OTG FS, SDIO and RNG Clock =  PLL_VCO / PLLQ */
 162:../cmsis/system_stm32f4xx.c **** #define PLL_Q      7
 163:../cmsis/system_stm32f4xx.c **** 
 164:../cmsis/system_stm32f4xx.c **** /******************************************************************************/
 165:../cmsis/system_stm32f4xx.c **** 
 166:../cmsis/system_stm32f4xx.c **** /**
 167:../cmsis/system_stm32f4xx.c ****   * @}
 168:../cmsis/system_stm32f4xx.c ****   */
 169:../cmsis/system_stm32f4xx.c **** 
 170:../cmsis/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Macros
 171:../cmsis/system_stm32f4xx.c ****   * @{
 172:../cmsis/system_stm32f4xx.c ****   */
 173:../cmsis/system_stm32f4xx.c **** 
 174:../cmsis/system_stm32f4xx.c **** /**
 175:../cmsis/system_stm32f4xx.c ****   * @}
 176:../cmsis/system_stm32f4xx.c ****   */
 177:../cmsis/system_stm32f4xx.c **** 
 178:../cmsis/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Variables
 179:../cmsis/system_stm32f4xx.c ****   * @{
 180:../cmsis/system_stm32f4xx.c ****   */
 181:../cmsis/system_stm32f4xx.c **** 
 182:../cmsis/system_stm32f4xx.c ****   uint32_t SystemCoreClock = 168000000;
 183:../cmsis/system_stm32f4xx.c **** 
 184:../cmsis/system_stm32f4xx.c ****   __I uint8_t AHBPrescTable[16] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};
 185:../cmsis/system_stm32f4xx.c **** 
 186:../cmsis/system_stm32f4xx.c **** /**
 187:../cmsis/system_stm32f4xx.c ****   * @}
 188:../cmsis/system_stm32f4xx.c ****   */
 189:../cmsis/system_stm32f4xx.c **** 
 190:../cmsis/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_FunctionPrototypes
 191:../cmsis/system_stm32f4xx.c ****   * @{
 192:../cmsis/system_stm32f4xx.c ****   */
 193:../cmsis/system_stm32f4xx.c **** 
 194:../cmsis/system_stm32f4xx.c **** static void SetSysClock(void);
 195:../cmsis/system_stm32f4xx.c **** #ifdef DATA_IN_ExtSRAM
 196:../cmsis/system_stm32f4xx.c ****   static void SystemInit_ExtMemCtl(void); 
 197:../cmsis/system_stm32f4xx.c **** #endif /* DATA_IN_ExtSRAM */
 198:../cmsis/system_stm32f4xx.c **** 
 199:../cmsis/system_stm32f4xx.c **** /**
 200:../cmsis/system_stm32f4xx.c ****   * @}
 201:../cmsis/system_stm32f4xx.c ****   */
 202:../cmsis/system_stm32f4xx.c **** 
 203:../cmsis/system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Functions
 204:../cmsis/system_stm32f4xx.c ****   * @{
 205:../cmsis/system_stm32f4xx.c ****   */
 206:../cmsis/system_stm32f4xx.c **** 
 207:../cmsis/system_stm32f4xx.c **** /**
 208:../cmsis/system_stm32f4xx.c ****   * @brief  Setup the microcontroller system
ARM GAS  /tmp/ccLt1DA2.s 			page 6


 209:../cmsis/system_stm32f4xx.c ****   *         Initialize the Embedded Flash Interface, the PLL and update the 
 210:../cmsis/system_stm32f4xx.c ****   *         SystemFrequency variable.
 211:../cmsis/system_stm32f4xx.c ****   * @param  None
 212:../cmsis/system_stm32f4xx.c ****   * @retval None
 213:../cmsis/system_stm32f4xx.c ****   */
 214:../cmsis/system_stm32f4xx.c **** void SystemInit(void)
 215:../cmsis/system_stm32f4xx.c **** {
 216:../cmsis/system_stm32f4xx.c ****   /* FPU settings ------------------------------------------------------------*/
 217:../cmsis/system_stm32f4xx.c ****   #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 218:../cmsis/system_stm32f4xx.c ****     SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 219:../cmsis/system_stm32f4xx.c ****   #endif
 220:../cmsis/system_stm32f4xx.c **** 
 221:../cmsis/system_stm32f4xx.c ****   /* Reset the RCC clock configuration to the default reset state ------------*/
 222:../cmsis/system_stm32f4xx.c ****   /* Set HSION bit */
 223:../cmsis/system_stm32f4xx.c ****   RCC->CR |= (uint32_t)0x00000001;
 224:../cmsis/system_stm32f4xx.c **** 
 225:../cmsis/system_stm32f4xx.c ****   /* Reset CFGR register */
 226:../cmsis/system_stm32f4xx.c ****   RCC->CFGR = 0x00000000;
 227:../cmsis/system_stm32f4xx.c **** 
 228:../cmsis/system_stm32f4xx.c ****   /* Reset HSEON, CSSON and PLLON bits */
 229:../cmsis/system_stm32f4xx.c ****   RCC->CR &= (uint32_t)0xFEF6FFFF;
 230:../cmsis/system_stm32f4xx.c **** 
 231:../cmsis/system_stm32f4xx.c ****   /* Reset PLLCFGR register */
 232:../cmsis/system_stm32f4xx.c ****   RCC->PLLCFGR = 0x24003010;
 233:../cmsis/system_stm32f4xx.c **** 
 234:../cmsis/system_stm32f4xx.c ****   /* Reset HSEBYP bit */
 235:../cmsis/system_stm32f4xx.c ****   RCC->CR &= (uint32_t)0xFFFBFFFF;
 236:../cmsis/system_stm32f4xx.c **** 
 237:../cmsis/system_stm32f4xx.c ****   /* Disable all interrupts */
 238:../cmsis/system_stm32f4xx.c ****   RCC->CIR = 0x00000000;
 239:../cmsis/system_stm32f4xx.c **** 
 240:../cmsis/system_stm32f4xx.c **** #ifdef DATA_IN_ExtSRAM
 241:../cmsis/system_stm32f4xx.c ****   SystemInit_ExtMemCtl(); 
 242:../cmsis/system_stm32f4xx.c **** #endif /* DATA_IN_ExtSRAM */
 243:../cmsis/system_stm32f4xx.c ****          
 244:../cmsis/system_stm32f4xx.c ****   /* Configure the System clock source, PLL Multiplier and Divider factors, 
 245:../cmsis/system_stm32f4xx.c ****      AHB/APBx prescalers and Flash settings ----------------------------------*/
 246:../cmsis/system_stm32f4xx.c ****   SetSysClock();
 247:../cmsis/system_stm32f4xx.c **** 
 248:../cmsis/system_stm32f4xx.c ****   /* Configure the Vector Table location add offset address ------------------*/
 249:../cmsis/system_stm32f4xx.c **** #ifdef VECT_TAB_SRAM
 250:../cmsis/system_stm32f4xx.c ****   SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
 251:../cmsis/system_stm32f4xx.c **** #else
 252:../cmsis/system_stm32f4xx.c ****   SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 253:../cmsis/system_stm32f4xx.c **** #endif
 254:../cmsis/system_stm32f4xx.c **** }
 255:../cmsis/system_stm32f4xx.c **** 
 256:../cmsis/system_stm32f4xx.c **** /**
 257:../cmsis/system_stm32f4xx.c ****    * @brief  Update SystemCoreClock variable according to Clock Register Values.
 258:../cmsis/system_stm32f4xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 259:../cmsis/system_stm32f4xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 260:../cmsis/system_stm32f4xx.c ****   *         other parameters.
 261:../cmsis/system_stm32f4xx.c ****   *           
 262:../cmsis/system_stm32f4xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 263:../cmsis/system_stm32f4xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 264:../cmsis/system_stm32f4xx.c ****   *         based on this variable will be incorrect.         
 265:../cmsis/system_stm32f4xx.c ****   *     
ARM GAS  /tmp/ccLt1DA2.s 			page 7


 266:../cmsis/system_stm32f4xx.c ****   * @note   - The system frequency computed by this function is not the real 
 267:../cmsis/system_stm32f4xx.c ****   *           frequency in the chip. It is calculated based on the predefined 
 268:../cmsis/system_stm32f4xx.c ****   *           constant and the selected clock source:
 269:../cmsis/system_stm32f4xx.c ****   *             
 270:../cmsis/system_stm32f4xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(*)
 271:../cmsis/system_stm32f4xx.c ****   *                                              
 272:../cmsis/system_stm32f4xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(**)
 273:../cmsis/system_stm32f4xx.c ****   *                          
 274:../cmsis/system_stm32f4xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(**) 
 275:../cmsis/system_stm32f4xx.c ****   *             or HSI_VALUE(*) multiplied/divided by the PLL factors.
 276:../cmsis/system_stm32f4xx.c ****   *         
 277:../cmsis/system_stm32f4xx.c ****   *         (*) HSI_VALUE is a constant defined in stm32f4xx.h file (default value
 278:../cmsis/system_stm32f4xx.c ****   *             16 MHz) but the real value may vary depending on the variations
 279:../cmsis/system_stm32f4xx.c ****   *             in voltage and temperature.   
 280:../cmsis/system_stm32f4xx.c ****   *    
 281:../cmsis/system_stm32f4xx.c ****   *         (**) HSE_VALUE is a constant defined in stm32f4xx.h file (default value
 282:../cmsis/system_stm32f4xx.c ****   *              25 MHz), user has to ensure that HSE_VALUE is same as the real
 283:../cmsis/system_stm32f4xx.c ****   *              frequency of the crystal used. Otherwise, this function may
 284:../cmsis/system_stm32f4xx.c ****   *              have wrong result.
 285:../cmsis/system_stm32f4xx.c ****   *                
 286:../cmsis/system_stm32f4xx.c ****   *         - The result of this function could be not correct when using fractional
 287:../cmsis/system_stm32f4xx.c ****   *           value for HSE crystal.
 288:../cmsis/system_stm32f4xx.c ****   *     
 289:../cmsis/system_stm32f4xx.c ****   * @param  None
 290:../cmsis/system_stm32f4xx.c ****   * @retval None
 291:../cmsis/system_stm32f4xx.c ****   */
 292:../cmsis/system_stm32f4xx.c **** void SystemCoreClockUpdate(void)
 293:../cmsis/system_stm32f4xx.c **** {
 294:../cmsis/system_stm32f4xx.c ****   uint32_t tmp = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;
 295:../cmsis/system_stm32f4xx.c ****   
 296:../cmsis/system_stm32f4xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 297:../cmsis/system_stm32f4xx.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
 298:../cmsis/system_stm32f4xx.c **** 
 299:../cmsis/system_stm32f4xx.c ****   switch (tmp)
 300:../cmsis/system_stm32f4xx.c ****   {
 301:../cmsis/system_stm32f4xx.c ****     case 0x00:  /* HSI used as system clock source */
 302:../cmsis/system_stm32f4xx.c ****       SystemCoreClock = HSI_VALUE;
 303:../cmsis/system_stm32f4xx.c ****       break;
 304:../cmsis/system_stm32f4xx.c ****     case 0x04:  /* HSE used as system clock source */
 305:../cmsis/system_stm32f4xx.c ****       SystemCoreClock = HSE_VALUE;
 306:../cmsis/system_stm32f4xx.c ****       break;
 307:../cmsis/system_stm32f4xx.c ****     case 0x08:  /* PLL used as system clock source */
 308:../cmsis/system_stm32f4xx.c **** 
 309:../cmsis/system_stm32f4xx.c ****       /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLL_M) * PLL_N
 310:../cmsis/system_stm32f4xx.c ****          SYSCLK = PLL_VCO / PLL_P
 311:../cmsis/system_stm32f4xx.c ****          */    
 312:../cmsis/system_stm32f4xx.c ****       pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
 313:../cmsis/system_stm32f4xx.c ****       pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 314:../cmsis/system_stm32f4xx.c ****       
 315:../cmsis/system_stm32f4xx.c ****       if (pllsource != 0)
 316:../cmsis/system_stm32f4xx.c ****       {
 317:../cmsis/system_stm32f4xx.c ****         /* HSE used as PLL clock source */
 318:../cmsis/system_stm32f4xx.c ****         pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 319:../cmsis/system_stm32f4xx.c ****       }
 320:../cmsis/system_stm32f4xx.c ****       else
 321:../cmsis/system_stm32f4xx.c ****       {
 322:../cmsis/system_stm32f4xx.c ****         /* HSI used as PLL clock source */
ARM GAS  /tmp/ccLt1DA2.s 			page 8


 323:../cmsis/system_stm32f4xx.c ****         pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);      
 324:../cmsis/system_stm32f4xx.c ****       }
 325:../cmsis/system_stm32f4xx.c **** 
 326:../cmsis/system_stm32f4xx.c ****       pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
 327:../cmsis/system_stm32f4xx.c ****       SystemCoreClock = pllvco/pllp;
 328:../cmsis/system_stm32f4xx.c ****       break;
 329:../cmsis/system_stm32f4xx.c ****     default:
 330:../cmsis/system_stm32f4xx.c ****       SystemCoreClock = HSI_VALUE;
 331:../cmsis/system_stm32f4xx.c ****       break;
 332:../cmsis/system_stm32f4xx.c ****   }
 333:../cmsis/system_stm32f4xx.c ****   /* Compute HCLK frequency --------------------------------------------------*/
 334:../cmsis/system_stm32f4xx.c ****   /* Get HCLK prescaler */
 335:../cmsis/system_stm32f4xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 336:../cmsis/system_stm32f4xx.c ****   /* HCLK frequency */
 337:../cmsis/system_stm32f4xx.c ****   SystemCoreClock >>= tmp;
 338:../cmsis/system_stm32f4xx.c **** }
 339:../cmsis/system_stm32f4xx.c **** 
 340:../cmsis/system_stm32f4xx.c **** /**
 341:../cmsis/system_stm32f4xx.c ****   * @brief  Configures the System clock source, PLL Multiplier and Divider factors, 
 342:../cmsis/system_stm32f4xx.c ****   *         AHB/APBx prescalers and Flash settings
 343:../cmsis/system_stm32f4xx.c ****   * @Note   This function should be called only once the RCC clock configuration  
 344:../cmsis/system_stm32f4xx.c ****   *         is reset to the default reset state (done in SystemInit() function).   
 345:../cmsis/system_stm32f4xx.c ****   * @param  None
 346:../cmsis/system_stm32f4xx.c ****   * @retval None
 347:../cmsis/system_stm32f4xx.c ****   */
 348:../cmsis/system_stm32f4xx.c **** static void SetSysClock(void)
 349:../cmsis/system_stm32f4xx.c **** {
  78              		.loc 1 349 0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 8
  81              		@ frame_needed = 0, uses_anonymous_args = 0
  82              		@ link register save eliminated.
  83 0000 82B0     		sub	sp, sp, #8	@,,
  84              	.LCFI0:
  85              		.cfi_def_cfa_offset 8
 350:../cmsis/system_stm32f4xx.c **** /******************************************************************************/
 351:../cmsis/system_stm32f4xx.c **** /*            PLL (clocked by HSE) used as System clock source                */
 352:../cmsis/system_stm32f4xx.c **** /******************************************************************************/
 353:../cmsis/system_stm32f4xx.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
 354:../cmsis/system_stm32f4xx.c ****   
 355:../cmsis/system_stm32f4xx.c ****   /* Enable HSE */
 356:../cmsis/system_stm32f4xx.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
  86              		.loc 1 356 0
  87 0002 4FF46052 		mov	r2, #14336	@ tmp166,
 353:../cmsis/system_stm32f4xx.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
  88              		.loc 1 353 0
  89 0006 0023     		movs	r3, #0	@ tmp164,
  90              		.loc 1 356 0
  91 0008 C4F20202 		movt	r2, 16386	@ tmp166,
 353:../cmsis/system_stm32f4xx.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
  92              		.loc 1 353 0
  93 000c 0093     		str	r3, [sp, #0]	@ tmp164, StartUpCounter
  94              	.LVL0:
  95 000e 0193     		str	r3, [sp, #4]	@ tmp164, HSEStatus
  96              	.LVL1:
  97              		.loc 1 356 0
  98 0010 1368     		ldr	r3, [r2, #0]	@ D.5971, MEM[(struct RCC_TypeDef *)1073887232B].CR
ARM GAS  /tmp/ccLt1DA2.s 			page 9


  99 0012 43F48033 		orr	r3, r3, #65536	@ D.5972, D.5971,
 100 0016 1360     		str	r3, [r2, #0]	@ D.5972, MEM[(struct RCC_TypeDef *)1073887232B].CR
 101 0018 03E0     		b	.L3	@
 102              	.L13:
 357:../cmsis/system_stm32f4xx.c ****  
 358:../cmsis/system_stm32f4xx.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 359:../cmsis/system_stm32f4xx.c ****   do
 360:../cmsis/system_stm32f4xx.c ****   {
 361:../cmsis/system_stm32f4xx.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
 362:../cmsis/system_stm32f4xx.c ****     StartUpCounter++;
 363:../cmsis/system_stm32f4xx.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 103              		.loc 1 363 0 discriminator 1
 104 001a 009B     		ldr	r3, [sp, #0]	@ StartUpCounter.8, StartUpCounter
 105 001c B3F5A06F 		cmp	r3, #1280	@ StartUpCounter.8,
 106 0020 09D0     		beq	.L2	@,
 107              	.L3:
 361:../cmsis/system_stm32f4xx.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
 108              		.loc 1 361 0 discriminator 1
 109 0022 1368     		ldr	r3, [r2, #0]	@ D.5973, MEM[(struct RCC_TypeDef *)1073887232B].CR
 110 0024 03F40033 		and	r3, r3, #131072	@ HSEStatus.4, D.5973,
 111              	.LVL2:
 112 0028 0193     		str	r3, [sp, #4]	@ HSEStatus.4, HSEStatus
 113              	.LVL3:
 362:../cmsis/system_stm32f4xx.c ****     StartUpCounter++;
 114              		.loc 1 362 0 discriminator 1
 115 002a 009B     		ldr	r3, [sp, #0]	@ StartUpCounter.5, StartUpCounter
 116              	.LVL4:
 117 002c 0133     		adds	r3, r3, #1	@ StartUpCounter.6, StartUpCounter.5,
 118              	.LVL5:
 119 002e 0093     		str	r3, [sp, #0]	@ StartUpCounter.6, StartUpCounter
 120              	.LVL6:
 121              		.loc 1 363 0 discriminator 1
 122 0030 019B     		ldr	r3, [sp, #4]	@ HSEStatus.7, HSEStatus
 123              	.LVL7:
 124 0032 002B     		cmp	r3, #0	@ HSEStatus.7
 125 0034 F1D0     		beq	.L13	@
 126              	.L2:
 364:../cmsis/system_stm32f4xx.c **** 
 365:../cmsis/system_stm32f4xx.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 127              		.loc 1 365 0
 128 0036 4FF46053 		mov	r3, #14336	@ tmp169,
 129 003a C4F20203 		movt	r3, 16386	@ tmp169,
 130 003e 1B68     		ldr	r3, [r3, #0]	@ D.5980, MEM[(struct RCC_TypeDef *)1073887232B].CR
 131 0040 13F40033 		ands	r3, r3, #131072	@ tmp170, D.5980,
 366:../cmsis/system_stm32f4xx.c ****   {
 367:../cmsis/system_stm32f4xx.c ****     HSEStatus = (uint32_t)0x01;
 368:../cmsis/system_stm32f4xx.c ****   }
 369:../cmsis/system_stm32f4xx.c ****   else
 370:../cmsis/system_stm32f4xx.c ****   {
 371:../cmsis/system_stm32f4xx.c ****     HSEStatus = (uint32_t)0x00;
 132              		.loc 1 371 0
 133 0044 08BF     		it	eq
 134 0046 0193     		streq	r3, [sp, #4]	@ tmp170, HSEStatus
 365:../cmsis/system_stm32f4xx.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 135              		.loc 1 365 0
 136 0048 01D0     		beq	.L5	@,
 367:../cmsis/system_stm32f4xx.c ****     HSEStatus = (uint32_t)0x01;
ARM GAS  /tmp/ccLt1DA2.s 			page 10


 137              		.loc 1 367 0
 138 004a 0123     		movs	r3, #1	@ tmp171,
 139 004c 0193     		str	r3, [sp, #4]	@ tmp171, HSEStatus
 140              	.L5:
 372:../cmsis/system_stm32f4xx.c ****   }
 373:../cmsis/system_stm32f4xx.c **** 
 374:../cmsis/system_stm32f4xx.c ****   if (HSEStatus == (uint32_t)0x01)
 141              		.loc 1 374 0
 142 004e 019B     		ldr	r3, [sp, #4]	@ HSEStatus.9, HSEStatus
 143 0050 012B     		cmp	r3, #1	@ HSEStatus.9,
 144 0052 01D0     		beq	.L14	@,
 145              	.L1:
 375:../cmsis/system_stm32f4xx.c ****   {
 376:../cmsis/system_stm32f4xx.c ****     /* Select regulator voltage output Scale 1 mode, System frequency up to 168 MHz */
 377:../cmsis/system_stm32f4xx.c ****     RCC->APB1ENR |= RCC_APB1ENR_PWREN;
 378:../cmsis/system_stm32f4xx.c ****     PWR->CR |= PWR_CR_VOS;
 379:../cmsis/system_stm32f4xx.c **** 
 380:../cmsis/system_stm32f4xx.c ****     /* HCLK = SYSCLK / 1*/
 381:../cmsis/system_stm32f4xx.c ****     RCC->CFGR |= RCC_CFGR_HPRE_DIV1;
 382:../cmsis/system_stm32f4xx.c ****       
 383:../cmsis/system_stm32f4xx.c ****     /* PCLK2 = HCLK / 2*/
 384:../cmsis/system_stm32f4xx.c ****     RCC->CFGR |= RCC_CFGR_PPRE2_DIV2;
 385:../cmsis/system_stm32f4xx.c ****     
 386:../cmsis/system_stm32f4xx.c ****     /* PCLK1 = HCLK / 4*/
 387:../cmsis/system_stm32f4xx.c ****     RCC->CFGR |= RCC_CFGR_PPRE1_DIV4;
 388:../cmsis/system_stm32f4xx.c **** 
 389:../cmsis/system_stm32f4xx.c ****     /* Configure the main PLL */
 390:../cmsis/system_stm32f4xx.c ****     RCC->PLLCFGR = PLL_M | (PLL_N << 6) | (((PLL_P >> 1) -1) << 16) |
 391:../cmsis/system_stm32f4xx.c ****                    (RCC_PLLCFGR_PLLSRC_HSE) | (PLL_Q << 24);
 392:../cmsis/system_stm32f4xx.c **** 
 393:../cmsis/system_stm32f4xx.c ****     /* Enable the main PLL */
 394:../cmsis/system_stm32f4xx.c ****     RCC->CR |= RCC_CR_PLLON;
 395:../cmsis/system_stm32f4xx.c **** 
 396:../cmsis/system_stm32f4xx.c ****     /* Wait till the main PLL is ready */
 397:../cmsis/system_stm32f4xx.c ****     while((RCC->CR & RCC_CR_PLLRDY) == 0)
 398:../cmsis/system_stm32f4xx.c ****     {
 399:../cmsis/system_stm32f4xx.c ****     }
 400:../cmsis/system_stm32f4xx.c ****    
 401:../cmsis/system_stm32f4xx.c ****     /* Configure Flash prefetch, Instruction cache, Data cache and wait state */
 402:../cmsis/system_stm32f4xx.c ****     FLASH->ACR = FLASH_ACR_ICEN |FLASH_ACR_DCEN |FLASH_ACR_LATENCY_5WS;
 403:../cmsis/system_stm32f4xx.c **** 
 404:../cmsis/system_stm32f4xx.c ****     /* Select the main PLL as system clock source */
 405:../cmsis/system_stm32f4xx.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 406:../cmsis/system_stm32f4xx.c ****     RCC->CFGR |= RCC_CFGR_SW_PLL;
 407:../cmsis/system_stm32f4xx.c **** 
 408:../cmsis/system_stm32f4xx.c ****     /* Wait till the main PLL is used as system clock source */
 409:../cmsis/system_stm32f4xx.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS ) != RCC_CFGR_SWS_PLL);
 410:../cmsis/system_stm32f4xx.c ****     {
 411:../cmsis/system_stm32f4xx.c ****     }
 412:../cmsis/system_stm32f4xx.c ****   }
 413:../cmsis/system_stm32f4xx.c ****   else
 414:../cmsis/system_stm32f4xx.c ****   { /* If HSE fails to start-up, the application will have wrong clock
 415:../cmsis/system_stm32f4xx.c ****          configuration. User can add here some code to deal with this error */
 416:../cmsis/system_stm32f4xx.c ****   }
 417:../cmsis/system_stm32f4xx.c **** 
 418:../cmsis/system_stm32f4xx.c **** }
 146              		.loc 1 418 0
ARM GAS  /tmp/ccLt1DA2.s 			page 11


 147 0054 02B0     		add	sp, sp, #8	@,,
 148 0056 7047     		bx	lr
 149              	.L14:
 377:../cmsis/system_stm32f4xx.c ****     RCC->APB1ENR |= RCC_APB1ENR_PWREN;
 150              		.loc 1 377 0
 151 0058 4FF46053 		mov	r3, #14336	@ tmp173,
 152 005c C4F20203 		movt	r3, 16386	@ tmp173,
 378:../cmsis/system_stm32f4xx.c ****     PWR->CR |= PWR_CR_VOS;
 153              		.loc 1 378 0
 154 0060 4FF4E042 		mov	r2, #28672	@ tmp175,
 377:../cmsis/system_stm32f4xx.c ****     RCC->APB1ENR |= RCC_APB1ENR_PWREN;
 155              		.loc 1 377 0
 156 0064 196C     		ldr	r1, [r3, #64]	@ D.5988, MEM[(struct RCC_TypeDef *)1073887232B].APB1ENR
 378:../cmsis/system_stm32f4xx.c ****     PWR->CR |= PWR_CR_VOS;
 157              		.loc 1 378 0
 158 0066 C4F20002 		movt	r2, 16384	@ tmp175,
 377:../cmsis/system_stm32f4xx.c ****     RCC->APB1ENR |= RCC_APB1ENR_PWREN;
 159              		.loc 1 377 0
 160 006a 41F08051 		orr	r1, r1, #268435456	@ D.5989, D.5988,
 161 006e 1964     		str	r1, [r3, #64]	@ D.5989, MEM[(struct RCC_TypeDef *)1073887232B].APB1ENR
 378:../cmsis/system_stm32f4xx.c ****     PWR->CR |= PWR_CR_VOS;
 162              		.loc 1 378 0
 163 0070 1168     		ldr	r1, [r2, #0]	@ D.5991, MEM[(struct PWR_TypeDef *)1073770496B].CR
 164 0072 41F48041 		orr	r1, r1, #16384	@ D.5992, D.5991,
 165 0076 1160     		str	r1, [r2, #0]	@ D.5992, MEM[(struct PWR_TypeDef *)1073770496B].CR
 381:../cmsis/system_stm32f4xx.c ****     RCC->CFGR |= RCC_CFGR_HPRE_DIV1;
 166              		.loc 1 381 0
 167 0078 9A68     		ldr	r2, [r3, #8]	@ D.5993, MEM[(struct RCC_TypeDef *)1073887232B].CFGR
 168 007a 9A60     		str	r2, [r3, #8]	@ D.5993, MEM[(struct RCC_TypeDef *)1073887232B].CFGR
 384:../cmsis/system_stm32f4xx.c ****     RCC->CFGR |= RCC_CFGR_PPRE2_DIV2;
 169              		.loc 1 384 0
 170 007c 9A68     		ldr	r2, [r3, #8]	@ D.5994, MEM[(struct RCC_TypeDef *)1073887232B].CFGR
 171 007e 42F40042 		orr	r2, r2, #32768	@ D.5995, D.5994,
 172 0082 9A60     		str	r2, [r3, #8]	@ D.5995, MEM[(struct RCC_TypeDef *)1073887232B].CFGR
 387:../cmsis/system_stm32f4xx.c ****     RCC->CFGR |= RCC_CFGR_PPRE1_DIV4;
 173              		.loc 1 387 0
 174 0084 9968     		ldr	r1, [r3, #8]	@ D.5996, MEM[(struct RCC_TypeDef *)1073887232B].CFGR
 390:../cmsis/system_stm32f4xx.c ****     RCC->PLLCFGR = PLL_M | (PLL_N << 6) | (((PLL_P >> 1) -1) << 16) |
 175              		.loc 1 390 0
 176 0086 45F20842 		movw	r2, #21512	@ tmp184,
 387:../cmsis/system_stm32f4xx.c ****     RCC->CFGR |= RCC_CFGR_PPRE1_DIV4;
 177              		.loc 1 387 0
 178 008a 41F4A051 		orr	r1, r1, #5120	@ D.5997, D.5996,
 390:../cmsis/system_stm32f4xx.c ****     RCC->PLLCFGR = PLL_M | (PLL_N << 6) | (((PLL_P >> 1) -1) << 16) |
 179              		.loc 1 390 0
 180 008e C0F24072 		movt	r2, 1856	@ tmp184,
 387:../cmsis/system_stm32f4xx.c ****     RCC->CFGR |= RCC_CFGR_PPRE1_DIV4;
 181              		.loc 1 387 0
 182 0092 9960     		str	r1, [r3, #8]	@ D.5997, MEM[(struct RCC_TypeDef *)1073887232B].CFGR
 390:../cmsis/system_stm32f4xx.c ****     RCC->PLLCFGR = PLL_M | (PLL_N << 6) | (((PLL_P >> 1) -1) << 16) |
 183              		.loc 1 390 0
 184 0094 5A60     		str	r2, [r3, #4]	@ tmp184, MEM[(struct RCC_TypeDef *)1073887232B].PLLCFGR
 394:../cmsis/system_stm32f4xx.c ****     RCC->CR |= RCC_CR_PLLON;
 185              		.loc 1 394 0
 186 0096 1A68     		ldr	r2, [r3, #0]	@ D.5998, MEM[(struct RCC_TypeDef *)1073887232B].CR
 187 0098 42F08072 		orr	r2, r2, #16777216	@ D.5999, D.5998,
 188 009c 1A60     		str	r2, [r3, #0]	@ D.5999, MEM[(struct RCC_TypeDef *)1073887232B].CR
ARM GAS  /tmp/ccLt1DA2.s 			page 12


 397:../cmsis/system_stm32f4xx.c ****     while((RCC->CR & RCC_CR_PLLRDY) == 0)
 189              		.loc 1 397 0
 190 009e 1946     		mov	r1, r3	@ tmp198, tmp173
 191              	.L7:
 397:../cmsis/system_stm32f4xx.c ****     while((RCC->CR & RCC_CR_PLLRDY) == 0)
 192              		.loc 1 397 0 is_stmt 0 discriminator 1
 193 00a0 0A68     		ldr	r2, [r1, #0]	@ D.6000, MEM[(struct RCC_TypeDef *)1073887232B].CR
 194 00a2 4FF46053 		mov	r3, #14336	@ tmp187,
 195 00a6 9201     		lsls	r2, r2, #6	@, D.6000,
 196 00a8 C4F20203 		movt	r3, 16386	@ tmp187,
 197 00ac F8D5     		bpl	.L7	@,
 402:../cmsis/system_stm32f4xx.c ****     FLASH->ACR = FLASH_ACR_ICEN |FLASH_ACR_DCEN |FLASH_ACR_LATENCY_5WS;
 198              		.loc 1 402 0 is_stmt 1
 199 00ae 4FF47052 		mov	r2, #15360	@ tmp189,
 200 00b2 C4F20202 		movt	r2, 16386	@ tmp189,
 201 00b6 40F20561 		movw	r1, #1541	@ tmp190,
 202 00ba 1160     		str	r1, [r2, #0]	@ tmp190, MEM[(struct FLASH_TypeDef *)1073888256B].ACR
 405:../cmsis/system_stm32f4xx.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 203              		.loc 1 405 0
 204 00bc 9A68     		ldr	r2, [r3, #8]	@ D.6003, MEM[(struct RCC_TypeDef *)1073887232B].CFGR
 205 00be 22F00302 		bic	r2, r2, #3	@ D.6004, D.6003,
 206 00c2 9A60     		str	r2, [r3, #8]	@ D.6004, MEM[(struct RCC_TypeDef *)1073887232B].CFGR
 406:../cmsis/system_stm32f4xx.c ****     RCC->CFGR |= RCC_CFGR_SW_PLL;
 207              		.loc 1 406 0
 208 00c4 9A68     		ldr	r2, [r3, #8]	@ D.6005, MEM[(struct RCC_TypeDef *)1073887232B].CFGR
 209 00c6 42F00202 		orr	r2, r2, #2	@ D.6006, D.6005,
 210 00ca 9A60     		str	r2, [r3, #8]	@ D.6006, MEM[(struct RCC_TypeDef *)1073887232B].CFGR
 211              	.L8:
 409:../cmsis/system_stm32f4xx.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS ) != RCC_CFGR_SWS_PLL);
 212              		.loc 1 409 0 discriminator 1
 213 00cc 9A68     		ldr	r2, [r3, #8]	@ D.6007, MEM[(struct RCC_TypeDef *)1073887232B].CFGR
 214 00ce 02F00C02 		and	r2, r2, #12	@ tmp196, D.6007,
 215 00d2 082A     		cmp	r2, #8	@ tmp196,
 216 00d4 FAD1     		bne	.L8	@,
 217 00d6 BDE7     		b	.L1	@
 218              		.cfi_endproc
 219              	.LFE112:
 220              		.size	SetSysClock, .-SetSysClock
 221 00d8 AFF30080 		.section	.text.SystemInit,"ax",%progbits
 221      AFF30080 
 222              		.align	2
 223              		.p2align 4,,15
 224              		.global	SystemInit
 225              		.thumb
 226              		.thumb_func
 227              		.type	SystemInit, %function
 228              	SystemInit:
 229              	.LFB110:
 215:../cmsis/system_stm32f4xx.c **** {
 230              		.loc 1 215 0
 231              		.cfi_startproc
 232              		@ args = 0, pretend = 0, frame = 0
 233              		@ frame_needed = 0, uses_anonymous_args = 0
 234 0000 10B5     		push	{r4, lr}	@
 235              	.LCFI1:
 236              		.cfi_def_cfa_offset 8
 237              		.cfi_offset 14, -4
ARM GAS  /tmp/ccLt1DA2.s 			page 13


 238              		.cfi_offset 4, -8
 218:../cmsis/system_stm32f4xx.c ****     SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 239              		.loc 1 218 0
 240 0002 4FF46D44 		mov	r4, #60672	@ tmp142,
 241 0006 CEF20004 		movt	r4, 57344	@ tmp142,
 223:../cmsis/system_stm32f4xx.c ****   RCC->CR |= (uint32_t)0x00000001;
 242              		.loc 1 223 0
 243 000a 4FF46053 		mov	r3, #14336	@ tmp144,
 218:../cmsis/system_stm32f4xx.c ****     SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 244              		.loc 1 218 0
 245 000e D4F88820 		ldr	r2, [r4, #136]	@ D.5961, MEM[(struct SCB_Type *)3758157056B].CPACR
 223:../cmsis/system_stm32f4xx.c ****   RCC->CR |= (uint32_t)0x00000001;
 246              		.loc 1 223 0
 247 0012 C4F20203 		movt	r3, 16386	@ tmp144,
 218:../cmsis/system_stm32f4xx.c ****     SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 248              		.loc 1 218 0
 249 0016 42F47002 		orr	r2, r2, #15728640	@ D.5962, D.5961,
 250 001a C4F88820 		str	r2, [r4, #136]	@ D.5962, MEM[(struct SCB_Type *)3758157056B].CPACR
 223:../cmsis/system_stm32f4xx.c ****   RCC->CR |= (uint32_t)0x00000001;
 251              		.loc 1 223 0
 252 001e 1968     		ldr	r1, [r3, #0]	@ D.5964, MEM[(struct RCC_TypeDef *)1073887232B].CR
 226:../cmsis/system_stm32f4xx.c ****   RCC->CFGR = 0x00000000;
 253              		.loc 1 226 0
 254 0020 0022     		movs	r2, #0	@ tmp147,
 223:../cmsis/system_stm32f4xx.c ****   RCC->CR |= (uint32_t)0x00000001;
 255              		.loc 1 223 0
 256 0022 41F00101 		orr	r1, r1, #1	@ D.5965, D.5964,
 257 0026 1960     		str	r1, [r3, #0]	@ D.5965, MEM[(struct RCC_TypeDef *)1073887232B].CR
 226:../cmsis/system_stm32f4xx.c ****   RCC->CFGR = 0x00000000;
 258              		.loc 1 226 0
 259 0028 9A60     		str	r2, [r3, #8]	@ tmp147, MEM[(struct RCC_TypeDef *)1073887232B].CFGR
 229:../cmsis/system_stm32f4xx.c ****   RCC->CR &= (uint32_t)0xFEF6FFFF;
 260              		.loc 1 229 0
 261 002a 1868     		ldr	r0, [r3, #0]	@ D.5966, MEM[(struct RCC_TypeDef *)1073887232B].CR
 232:../cmsis/system_stm32f4xx.c ****   RCC->PLLCFGR = 0x24003010;
 262              		.loc 1 232 0
 263 002c 43F21001 		movw	r1, #12304	@ tmp152,
 229:../cmsis/system_stm32f4xx.c ****   RCC->CR &= (uint32_t)0xFEF6FFFF;
 264              		.loc 1 229 0
 265 0030 20F08470 		bic	r0, r0, #17301504	@ tmp149, D.5966,
 266 0034 20F48030 		bic	r0, r0, #65536	@ D.5967, tmp149,
 232:../cmsis/system_stm32f4xx.c ****   RCC->PLLCFGR = 0x24003010;
 267              		.loc 1 232 0
 268 0038 C2F20041 		movt	r1, 9216	@ tmp152,
 229:../cmsis/system_stm32f4xx.c ****   RCC->CR &= (uint32_t)0xFEF6FFFF;
 269              		.loc 1 229 0
 270 003c 1860     		str	r0, [r3, #0]	@ D.5967, MEM[(struct RCC_TypeDef *)1073887232B].CR
 232:../cmsis/system_stm32f4xx.c ****   RCC->PLLCFGR = 0x24003010;
 271              		.loc 1 232 0
 272 003e 5960     		str	r1, [r3, #4]	@ tmp152, MEM[(struct RCC_TypeDef *)1073887232B].PLLCFGR
 235:../cmsis/system_stm32f4xx.c ****   RCC->CR &= (uint32_t)0xFFFBFFFF;
 273              		.loc 1 235 0
 274 0040 1968     		ldr	r1, [r3, #0]	@ D.5968, MEM[(struct RCC_TypeDef *)1073887232B].CR
 275 0042 21F48021 		bic	r1, r1, #262144	@ D.5969, D.5968,
 276 0046 1960     		str	r1, [r3, #0]	@ D.5969, MEM[(struct RCC_TypeDef *)1073887232B].CR
 238:../cmsis/system_stm32f4xx.c ****   RCC->CIR = 0x00000000;
 277              		.loc 1 238 0
ARM GAS  /tmp/ccLt1DA2.s 			page 14


 278 0048 DA60     		str	r2, [r3, #12]	@ tmp147, MEM[(struct RCC_TypeDef *)1073887232B].CIR
 246:../cmsis/system_stm32f4xx.c ****   SetSysClock();
 279              		.loc 1 246 0
 280 004a FFF7FEFF 		bl	SetSysClock	@
 252:../cmsis/system_stm32f4xx.c ****   SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 281              		.loc 1 252 0
 282 004e 4FF00063 		mov	r3, #134217728	@ tmp158,
 283 0052 A360     		str	r3, [r4, #8]	@ tmp158, MEM[(struct SCB_Type *)3758157056B].VTOR
 254:../cmsis/system_stm32f4xx.c **** }
 284              		.loc 1 254 0
 285 0054 10BD     		pop	{r4, pc}	@
 286              		.cfi_endproc
 287              	.LFE110:
 288              		.size	SystemInit, .-SystemInit
 289 0056 00BFAFF3 		.section	.text.SystemCoreClockUpdate,"ax",%progbits
 289      0080AFF3 
 289      0080
 290              		.align	2
 291              		.p2align 4,,15
 292              		.global	SystemCoreClockUpdate
 293              		.thumb
 294              		.thumb_func
 295              		.type	SystemCoreClockUpdate, %function
 296              	SystemCoreClockUpdate:
 297              	.LFB111:
 293:../cmsis/system_stm32f4xx.c **** {
 298              		.loc 1 293 0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 0
 301              		@ frame_needed = 0, uses_anonymous_args = 0
 302              		@ link register save eliminated.
 303              	.LVL8:
 297:../cmsis/system_stm32f4xx.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
 304              		.loc 1 297 0
 305 0000 4FF46053 		mov	r3, #14336	@ tmp163,
 306 0004 C4F20203 		movt	r3, 16386	@ tmp163,
 307 0008 9A68     		ldr	r2, [r3, #8]	@ D.5933, MEM[(struct RCC_TypeDef *)1073887232B].CFGR
 308              	.LVL9:
 309 000a 02F00C02 		and	r2, r2, #12	@ tmp164, D.5933,
 310              	.LVL10:
 299:../cmsis/system_stm32f4xx.c ****   switch (tmp)
 311              		.loc 1 299 0
 312 000e 042A     		cmp	r2, #4	@ tmp164,
 306:../cmsis/system_stm32f4xx.c ****       break;
 313              		.loc 1 306 0
 314 0010 04BF     		itt	eq
 315 0012 4FF49052 		moveq	r2, #4608	@ prephitmp.16,
 316              	.LVL11:
 317 0016 C0F27A02 		movteq	r2, 122	@ prephitmp.16,
 299:../cmsis/system_stm32f4xx.c ****   switch (tmp)
 318              		.loc 1 299 0
 319 001a 06D0     		beq	.L17	@,
 320 001c 082A     		cmp	r2, #8	@ tmp164,
 321 001e 1CBF     		itt	ne
 322 0020 4FF41052 		movne	r2, #9216	@ prephitmp.16,
 323 0024 C0F2F402 		movtne	r2, 244	@ prephitmp.16,
 324 0028 0CD0     		beq	.L24	@,
ARM GAS  /tmp/ccLt1DA2.s 			page 15


 325              	.LVL12:
 326              	.L17:
 335:../cmsis/system_stm32f4xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 327              		.loc 1 335 0
 328 002a 4FF46053 		mov	r3, #14336	@ tmp188,
 329 002e C4F20203 		movt	r3, 16386	@ tmp188,
 330 0032 1549     		ldr	r1, .L25	@ tmp190,
 331 0034 9B68     		ldr	r3, [r3, #8]	@ D.5953, MEM[(struct RCC_TypeDef *)1073887232B].CFGR
 332 0036 C3F30313 		ubfx	r3, r3, #4, #4	@ D.5955, D.5953,,
 333 003a CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2	@ tmp192, AHBPrescTable
 334              	.LVL13:
 337:../cmsis/system_stm32f4xx.c ****   SystemCoreClock >>= tmp;
 335              		.loc 1 337 0
 336 003c DA40     		lsrs	r2, r2, r3	@ tmp194, prephitmp.16, tmp192
 337 003e 134B     		ldr	r3, .L25+4	@ tmp193,
 338              	.LVL14:
 339 0040 1A60     		str	r2, [r3, #0]	@ tmp194, SystemCoreClock
 338:../cmsis/system_stm32f4xx.c **** }
 340              		.loc 1 338 0
 341 0042 7047     		bx	lr	@
 342              	.LVL15:
 343              	.L24:
 312:../cmsis/system_stm32f4xx.c ****       pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
 344              		.loc 1 312 0
 345 0044 5868     		ldr	r0, [r3, #4]	@ D.5934, MEM[(struct RCC_TypeDef *)1073887232B].PLLCFGR
 346              	.LVL16:
 313:../cmsis/system_stm32f4xx.c ****       pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 347              		.loc 1 313 0
 348 0046 5968     		ldr	r1, [r3, #4]	@ D.5936, MEM[(struct RCC_TypeDef *)1073887232B].PLLCFGR
 315:../cmsis/system_stm32f4xx.c ****       if (pllsource != 0)
 349              		.loc 1 315 0
 350 0048 10F4800F 		tst	r0, #4194304	@ D.5934,
 318:../cmsis/system_stm32f4xx.c ****         pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 351              		.loc 1 318 0
 352 004c 5868     		ldr	r0, [r3, #4]	@ D.5940,
 353              	.LVL17:
 354 004e 15BF     		itete	ne
 355 0050 4FF49053 		movne	r3, #4608	@ tmp175,
 323:../cmsis/system_stm32f4xx.c ****         pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);      
 356              		.loc 1 323 0
 357 0054 4FF41053 		moveq	r3, #9216	@ tmp182,
 318:../cmsis/system_stm32f4xx.c ****         pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 358              		.loc 1 318 0
 359 0058 C0F27A03 		movtne	r3, 122	@ tmp175,
 323:../cmsis/system_stm32f4xx.c ****         pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);      
 360              		.loc 1 323 0
 361 005c C0F2F403 		movteq	r3, 244	@ tmp182,
 313:../cmsis/system_stm32f4xx.c ****       pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 362              		.loc 1 313 0
 363 0060 01F03F01 		and	r1, r1, #63	@ pllm, D.5936,
 364              	.LVL18:
 323:../cmsis/system_stm32f4xx.c ****         pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);      
 365              		.loc 1 323 0
 366 0064 B3FBF1F2 		udiv	r2, r3, r1	@ tmp181, tmp182, pllm
 326:../cmsis/system_stm32f4xx.c ****       pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
 367              		.loc 1 326 0
 368 0068 4FF46053 		mov	r3, #14336	@ tmp183,
ARM GAS  /tmp/ccLt1DA2.s 			page 16


 369 006c C4F20203 		movt	r3, 16386	@ tmp183,
 323:../cmsis/system_stm32f4xx.c ****         pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);      
 370              		.loc 1 323 0
 371 0070 C0F38810 		ubfx	r0, r0, #6, #9	@ tmp179, D.5945,,
 326:../cmsis/system_stm32f4xx.c ****       pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
 372              		.loc 1 326 0
 373 0074 5B68     		ldr	r3, [r3, #4]	@ D.5948, MEM[(struct RCC_TypeDef *)1073887232B].PLLCFGR
 374 0076 C3F30143 		ubfx	r3, r3, #16, #2	@ tmp185, D.5948,,
 375 007a 0133     		adds	r3, r3, #1	@ tmp186, tmp185,
 323:../cmsis/system_stm32f4xx.c ****         pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);      
 376              		.loc 1 323 0
 377 007c 02FB00F2 		mul	r2, r2, r0	@ pllvco, tmp181, tmp179
 378              	.LVL19:
 326:../cmsis/system_stm32f4xx.c ****       pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
 379              		.loc 1 326 0
 380 0080 5B00     		lsls	r3, r3, #1	@ tmp187, tmp186,
 327:../cmsis/system_stm32f4xx.c ****       SystemCoreClock = pllvco/pllp;
 381              		.loc 1 327 0
 382 0082 B2FBF3F2 		udiv	r2, r2, r3	@ prephitmp.16, pllvco, tmp187
 383              	.LVL20:
 328:../cmsis/system_stm32f4xx.c ****       break;
 384              		.loc 1 328 0
 385 0086 D0E7     		b	.L17	@
 386              	.L26:
 387              		.align	2
 388              	.L25:
 389 0088 00000000 		.word	.LANCHOR0
 390 008c 00000000 		.word	.LANCHOR1
 391              		.cfi_endproc
 392              	.LFE111:
 393              		.size	SystemCoreClockUpdate, .-SystemCoreClockUpdate
 394              		.global	AHBPrescTable
 395              		.global	SystemCoreClock
 396              		.section	.data.AHBPrescTable,"aw",%progbits
 397              		.align	2
 398              		.set	.LANCHOR0,. + 0
 399              		.type	AHBPrescTable, %object
 400              		.size	AHBPrescTable, 16
 401              	AHBPrescTable:
 402 0000 00       		.byte	0
 403 0001 00       		.byte	0
 404 0002 00       		.byte	0
 405 0003 00       		.byte	0
 406 0004 00       		.byte	0
 407 0005 00       		.byte	0
 408 0006 00       		.byte	0
 409 0007 00       		.byte	0
 410 0008 01       		.byte	1
 411 0009 02       		.byte	2
 412 000a 03       		.byte	3
 413 000b 04       		.byte	4
 414 000c 06       		.byte	6
 415 000d 07       		.byte	7
 416 000e 08       		.byte	8
 417 000f 09       		.byte	9
 418              		.section	.data.SystemCoreClock,"aw",%progbits
 419              		.align	2
ARM GAS  /tmp/ccLt1DA2.s 			page 17


 420              		.set	.LANCHOR1,. + 0
 421              		.type	SystemCoreClock, %object
 422              		.size	SystemCoreClock, 4
 423              	SystemCoreClock:
 424 0000 007A030A 		.word	168000000
 425              		.text
 426              	.Letext0:
 427              		.file 2 "/home/xavier/sat/lib/gcc/arm-none-eabi/4.6.2/../../../../arm-none-eabi/include/stdint.h"
 428              		.file 3 "../cmsis/core_cm4.h"
 429              		.file 4 "../inc/stm32f4xx.h"
 430              		.file 5 "../cmsis/system_stm32f4xx.h"
 431              		.section	.debug_info,"",%progbits
 432              	.Ldebug_info0:
 433 0000 23060000 		.4byte	0x623
 434 0004 0200     		.2byte	0x2
 435 0006 00000000 		.4byte	.Ldebug_abbrev0
 436 000a 04       		.byte	0x4
 437 000b 01       		.uleb128 0x1
 438 000c B1020000 		.4byte	.LASF71
 439 0010 01       		.byte	0x1
 440 0011 95000000 		.4byte	.LASF72
 441 0015 7B020000 		.4byte	.LASF73
 442 0019 00000000 		.4byte	0
 443 001d 00000000 		.4byte	0
 444 0021 00000000 		.4byte	.Ldebug_ranges0+0
 445 0025 00000000 		.4byte	.Ldebug_line0
 446 0029 02       		.uleb128 0x2
 447 002a 01       		.byte	0x1
 448 002b 06       		.byte	0x6
 449 002c 5C010000 		.4byte	.LASF0
 450 0030 03       		.uleb128 0x3
 451 0031 6E000000 		.4byte	.LASF3
 452 0035 02       		.byte	0x2
 453 0036 2A       		.byte	0x2a
 454 0037 3B000000 		.4byte	0x3b
 455 003b 02       		.uleb128 0x2
 456 003c 01       		.byte	0x1
 457 003d 08       		.byte	0x8
 458 003e 37010000 		.4byte	.LASF1
 459 0042 02       		.uleb128 0x2
 460 0043 02       		.byte	0x2
 461 0044 05       		.byte	0x5
 462 0045 BA000000 		.4byte	.LASF2
 463 0049 03       		.uleb128 0x3
 464 004a 92010000 		.4byte	.LASF4
 465 004e 02       		.byte	0x2
 466 004f 36       		.byte	0x36
 467 0050 54000000 		.4byte	0x54
 468 0054 02       		.uleb128 0x2
 469 0055 02       		.byte	0x2
 470 0056 07       		.byte	0x7
 471 0057 D4010000 		.4byte	.LASF5
 472 005b 03       		.uleb128 0x3
 473 005c FD010000 		.4byte	.LASF6
 474 0060 02       		.byte	0x2
 475 0061 4F       		.byte	0x4f
 476 0062 66000000 		.4byte	0x66
ARM GAS  /tmp/ccLt1DA2.s 			page 18


 477 0066 02       		.uleb128 0x2
 478 0067 04       		.byte	0x4
 479 0068 05       		.byte	0x5
 480 0069 E4000000 		.4byte	.LASF7
 481 006d 03       		.uleb128 0x3
 482 006e B1000000 		.4byte	.LASF8
 483 0072 02       		.byte	0x2
 484 0073 50       		.byte	0x50
 485 0074 78000000 		.4byte	0x78
 486 0078 02       		.uleb128 0x2
 487 0079 04       		.byte	0x4
 488 007a 07       		.byte	0x7
 489 007b 9B010000 		.4byte	.LASF9
 490 007f 02       		.uleb128 0x2
 491 0080 08       		.byte	0x8
 492 0081 05       		.byte	0x5
 493 0082 D1000000 		.4byte	.LASF10
 494 0086 02       		.uleb128 0x2
 495 0087 08       		.byte	0x8
 496 0088 07       		.byte	0x7
 497 0089 68010000 		.4byte	.LASF11
 498 008d 04       		.uleb128 0x4
 499 008e 04       		.byte	0x4
 500 008f 05       		.byte	0x5
 501 0090 696E7400 		.ascii	"int\000"
 502 0094 02       		.uleb128 0x2
 503 0095 04       		.byte	0x4
 504 0096 07       		.byte	0x7
 505 0097 85010000 		.4byte	.LASF12
 506 009b 05       		.uleb128 0x5
 507 009c 6D000000 		.4byte	0x6d
 508 00a0 06       		.uleb128 0x6
 509 00a1 8C       		.byte	0x8c
 510 00a2 03       		.byte	0x3
 511 00a3 6101     		.2byte	0x161
 512 00a5 E6010000 		.4byte	0x1e6
 513 00a9 07       		.uleb128 0x7
 514 00aa 4F000000 		.4byte	.LASF13
 515 00ae 03       		.byte	0x3
 516 00af 6301     		.2byte	0x163
 517 00b1 E6010000 		.4byte	0x1e6
 518 00b5 02       		.byte	0x2
 519 00b6 23       		.byte	0x23
 520 00b7 00       		.uleb128 0
 521 00b8 07       		.uleb128 0x7
 522 00b9 C4000000 		.4byte	.LASF14
 523 00bd 03       		.byte	0x3
 524 00be 6401     		.2byte	0x164
 525 00c0 9B000000 		.4byte	0x9b
 526 00c4 02       		.byte	0x2
 527 00c5 23       		.byte	0x23
 528 00c6 04       		.uleb128 0x4
 529 00c7 07       		.uleb128 0x7
 530 00c8 F8010000 		.4byte	.LASF15
 531 00cc 03       		.byte	0x3
 532 00cd 6501     		.2byte	0x165
 533 00cf 9B000000 		.4byte	0x9b
ARM GAS  /tmp/ccLt1DA2.s 			page 19


 534 00d3 02       		.byte	0x2
 535 00d4 23       		.byte	0x23
 536 00d5 08       		.uleb128 0x8
 537 00d6 07       		.uleb128 0x7
 538 00d7 31010000 		.4byte	.LASF16
 539 00db 03       		.byte	0x3
 540 00dc 6601     		.2byte	0x166
 541 00de 9B000000 		.4byte	0x9b
 542 00e2 02       		.byte	0x2
 543 00e3 23       		.byte	0x23
 544 00e4 0C       		.uleb128 0xc
 545 00e5 08       		.uleb128 0x8
 546 00e6 53435200 		.ascii	"SCR\000"
 547 00ea 03       		.byte	0x3
 548 00eb 6701     		.2byte	0x167
 549 00ed 9B000000 		.4byte	0x9b
 550 00f1 02       		.byte	0x2
 551 00f2 23       		.byte	0x23
 552 00f3 10       		.uleb128 0x10
 553 00f4 08       		.uleb128 0x8
 554 00f5 43435200 		.ascii	"CCR\000"
 555 00f9 03       		.byte	0x3
 556 00fa 6801     		.2byte	0x168
 557 00fc 9B000000 		.4byte	0x9b
 558 0100 02       		.byte	0x2
 559 0101 23       		.byte	0x23
 560 0102 14       		.uleb128 0x14
 561 0103 08       		.uleb128 0x8
 562 0104 53485000 		.ascii	"SHP\000"
 563 0108 03       		.byte	0x3
 564 0109 6901     		.2byte	0x169
 565 010b FB010000 		.4byte	0x1fb
 566 010f 02       		.byte	0x2
 567 0110 23       		.byte	0x23
 568 0111 18       		.uleb128 0x18
 569 0112 07       		.uleb128 0x7
 570 0113 7F010000 		.4byte	.LASF17
 571 0117 03       		.byte	0x3
 572 0118 6A01     		.2byte	0x16a
 573 011a 9B000000 		.4byte	0x9b
 574 011e 02       		.byte	0x2
 575 011f 23       		.byte	0x23
 576 0120 24       		.uleb128 0x24
 577 0121 07       		.uleb128 0x7
 578 0122 02010000 		.4byte	.LASF18
 579 0126 03       		.byte	0x3
 580 0127 6B01     		.2byte	0x16b
 581 0129 9B000000 		.4byte	0x9b
 582 012d 02       		.byte	0x2
 583 012e 23       		.byte	0x23
 584 012f 28       		.uleb128 0x28
 585 0130 07       		.uleb128 0x7
 586 0131 1F020000 		.4byte	.LASF19
 587 0135 03       		.byte	0x3
 588 0136 6C01     		.2byte	0x16c
 589 0138 9B000000 		.4byte	0x9b
 590 013c 02       		.byte	0x2
ARM GAS  /tmp/ccLt1DA2.s 			page 20


 591 013d 23       		.byte	0x23
 592 013e 2C       		.uleb128 0x2c
 593 013f 07       		.uleb128 0x7
 594 0140 0A020000 		.4byte	.LASF20
 595 0144 03       		.byte	0x3
 596 0145 6D01     		.2byte	0x16d
 597 0147 9B000000 		.4byte	0x9b
 598 014b 02       		.byte	0x2
 599 014c 23       		.byte	0x23
 600 014d 30       		.uleb128 0x30
 601 014e 07       		.uleb128 0x7
 602 014f C3010000 		.4byte	.LASF21
 603 0153 03       		.byte	0x3
 604 0154 6E01     		.2byte	0x16e
 605 0156 9B000000 		.4byte	0x9b
 606 015a 02       		.byte	0x2
 607 015b 23       		.byte	0x23
 608 015c 34       		.uleb128 0x34
 609 015d 07       		.uleb128 0x7
 610 015e DF000000 		.4byte	.LASF22
 611 0162 03       		.byte	0x3
 612 0163 6F01     		.2byte	0x16f
 613 0165 9B000000 		.4byte	0x9b
 614 0169 02       		.byte	0x2
 615 016a 23       		.byte	0x23
 616 016b 38       		.uleb128 0x38
 617 016c 07       		.uleb128 0x7
 618 016d EA020000 		.4byte	.LASF23
 619 0171 03       		.byte	0x3
 620 0172 7001     		.2byte	0x170
 621 0174 9B000000 		.4byte	0x9b
 622 0178 02       		.byte	0x2
 623 0179 23       		.byte	0x23
 624 017a 3C       		.uleb128 0x3c
 625 017b 08       		.uleb128 0x8
 626 017c 50465200 		.ascii	"PFR\000"
 627 0180 03       		.byte	0x3
 628 0181 7101     		.2byte	0x171
 629 0183 10020000 		.4byte	0x210
 630 0187 02       		.byte	0x2
 631 0188 23       		.byte	0x23
 632 0189 40       		.uleb128 0x40
 633 018a 08       		.uleb128 0x8
 634 018b 44465200 		.ascii	"DFR\000"
 635 018f 03       		.byte	0x3
 636 0190 7201     		.2byte	0x172
 637 0192 E6010000 		.4byte	0x1e6
 638 0196 02       		.byte	0x2
 639 0197 23       		.byte	0x23
 640 0198 48       		.uleb128 0x48
 641 0199 08       		.uleb128 0x8
 642 019a 41445200 		.ascii	"ADR\000"
 643 019e 03       		.byte	0x3
 644 019f 7301     		.2byte	0x173
 645 01a1 E6010000 		.4byte	0x1e6
 646 01a5 02       		.byte	0x2
 647 01a6 23       		.byte	0x23
ARM GAS  /tmp/ccLt1DA2.s 			page 21


 648 01a7 4C       		.uleb128 0x4c
 649 01a8 07       		.uleb128 0x7
 650 01a9 2E020000 		.4byte	.LASF24
 651 01ad 03       		.byte	0x3
 652 01ae 7401     		.2byte	0x174
 653 01b0 2A020000 		.4byte	0x22a
 654 01b4 02       		.byte	0x2
 655 01b5 23       		.byte	0x23
 656 01b6 50       		.uleb128 0x50
 657 01b7 07       		.uleb128 0x7
 658 01b8 05020000 		.4byte	.LASF25
 659 01bc 03       		.byte	0x3
 660 01bd 7501     		.2byte	0x175
 661 01bf 44020000 		.4byte	0x244
 662 01c3 02       		.byte	0x2
 663 01c4 23       		.byte	0x23
 664 01c5 60       		.uleb128 0x60
 665 01c6 07       		.uleb128 0x7
 666 01c7 33020000 		.4byte	.LASF26
 667 01cb 03       		.byte	0x3
 668 01cc 7601     		.2byte	0x176
 669 01ce 34020000 		.4byte	0x234
 670 01d2 02       		.byte	0x2
 671 01d3 23       		.byte	0x23
 672 01d4 74       		.uleb128 0x74
 673 01d5 07       		.uleb128 0x7
 674 01d6 13030000 		.4byte	.LASF27
 675 01da 03       		.byte	0x3
 676 01db 7701     		.2byte	0x177
 677 01dd 9B000000 		.4byte	0x9b
 678 01e1 03       		.byte	0x3
 679 01e2 23       		.byte	0x23
 680 01e3 8801     		.uleb128 0x88
 681 01e5 00       		.byte	0
 682 01e6 09       		.uleb128 0x9
 683 01e7 9B000000 		.4byte	0x9b
 684 01eb 0A       		.uleb128 0xa
 685 01ec 30000000 		.4byte	0x30
 686 01f0 FB010000 		.4byte	0x1fb
 687 01f4 0B       		.uleb128 0xb
 688 01f5 94000000 		.4byte	0x94
 689 01f9 0B       		.byte	0xb
 690 01fa 00       		.byte	0
 691 01fb 05       		.uleb128 0x5
 692 01fc EB010000 		.4byte	0x1eb
 693 0200 0A       		.uleb128 0xa
 694 0201 6D000000 		.4byte	0x6d
 695 0205 10020000 		.4byte	0x210
 696 0209 0B       		.uleb128 0xb
 697 020a 94000000 		.4byte	0x94
 698 020e 01       		.byte	0x1
 699 020f 00       		.byte	0
 700 0210 09       		.uleb128 0x9
 701 0211 15020000 		.4byte	0x215
 702 0215 05       		.uleb128 0x5
 703 0216 00020000 		.4byte	0x200
 704 021a 0A       		.uleb128 0xa
ARM GAS  /tmp/ccLt1DA2.s 			page 22


 705 021b 6D000000 		.4byte	0x6d
 706 021f 2A020000 		.4byte	0x22a
 707 0223 0B       		.uleb128 0xb
 708 0224 94000000 		.4byte	0x94
 709 0228 03       		.byte	0x3
 710 0229 00       		.byte	0
 711 022a 09       		.uleb128 0x9
 712 022b 2F020000 		.4byte	0x22f
 713 022f 05       		.uleb128 0x5
 714 0230 1A020000 		.4byte	0x21a
 715 0234 0A       		.uleb128 0xa
 716 0235 6D000000 		.4byte	0x6d
 717 0239 44020000 		.4byte	0x244
 718 023d 0B       		.uleb128 0xb
 719 023e 94000000 		.4byte	0x94
 720 0242 04       		.byte	0x4
 721 0243 00       		.byte	0
 722 0244 09       		.uleb128 0x9
 723 0245 49020000 		.4byte	0x249
 724 0249 05       		.uleb128 0x5
 725 024a 34020000 		.4byte	0x234
 726 024e 0C       		.uleb128 0xc
 727 024f 76000000 		.4byte	.LASF28
 728 0253 03       		.byte	0x3
 729 0254 7801     		.2byte	0x178
 730 0256 A0000000 		.4byte	0xa0
 731 025a 05       		.uleb128 0x5
 732 025b 5B000000 		.4byte	0x5b
 733 025f 0D       		.uleb128 0xd
 734 0260 01       		.byte	0x1
 735 0261 04       		.byte	0x4
 736 0262 1E01     		.2byte	0x11e
 737 0264 75020000 		.4byte	0x275
 738 0268 0E       		.uleb128 0xe
 739 0269 DB020000 		.4byte	.LASF29
 740 026d 00       		.sleb128 0
 741 026e 0F       		.uleb128 0xf
 742 026f 53455400 		.ascii	"SET\000"
 743 0273 01       		.sleb128 1
 744 0274 00       		.byte	0
 745 0275 06       		.uleb128 0x6
 746 0276 18       		.byte	0x18
 747 0277 04       		.byte	0x4
 748 0278 4602     		.2byte	0x246
 749 027a D7020000 		.4byte	0x2d7
 750 027e 08       		.uleb128 0x8
 751 027f 41435200 		.ascii	"ACR\000"
 752 0283 04       		.byte	0x4
 753 0284 4802     		.2byte	0x248
 754 0286 9B000000 		.4byte	0x9b
 755 028a 02       		.byte	0x2
 756 028b 23       		.byte	0x23
 757 028c 00       		.uleb128 0
 758 028d 07       		.uleb128 0x7
 759 028e 22010000 		.4byte	.LASF30
 760 0292 04       		.byte	0x4
 761 0293 4902     		.2byte	0x249
ARM GAS  /tmp/ccLt1DA2.s 			page 23


 762 0295 9B000000 		.4byte	0x9b
 763 0299 02       		.byte	0x2
 764 029a 23       		.byte	0x23
 765 029b 04       		.uleb128 0x4
 766 029c 07       		.uleb128 0x7
 767 029d C9000000 		.4byte	.LASF31
 768 02a1 04       		.byte	0x4
 769 02a2 4A02     		.2byte	0x24a
 770 02a4 9B000000 		.4byte	0x9b
 771 02a8 02       		.byte	0x2
 772 02a9 23       		.byte	0x23
 773 02aa 08       		.uleb128 0x8
 774 02ab 08       		.uleb128 0x8
 775 02ac 535200   		.ascii	"SR\000"
 776 02af 04       		.byte	0x4
 777 02b0 4B02     		.2byte	0x24b
 778 02b2 9B000000 		.4byte	0x9b
 779 02b6 02       		.byte	0x2
 780 02b7 23       		.byte	0x23
 781 02b8 0C       		.uleb128 0xc
 782 02b9 08       		.uleb128 0x8
 783 02ba 435200   		.ascii	"CR\000"
 784 02bd 04       		.byte	0x4
 785 02be 4C02     		.2byte	0x24c
 786 02c0 9B000000 		.4byte	0x9b
 787 02c4 02       		.byte	0x2
 788 02c5 23       		.byte	0x23
 789 02c6 10       		.uleb128 0x10
 790 02c7 07       		.uleb128 0x7
 791 02c8 23030000 		.4byte	.LASF32
 792 02cc 04       		.byte	0x4
 793 02cd 4D02     		.2byte	0x24d
 794 02cf 9B000000 		.4byte	0x9b
 795 02d3 02       		.byte	0x2
 796 02d4 23       		.byte	0x23
 797 02d5 14       		.uleb128 0x14
 798 02d6 00       		.byte	0
 799 02d7 0C       		.uleb128 0xc
 800 02d8 F8020000 		.4byte	.LASF33
 801 02dc 04       		.byte	0x4
 802 02dd 4E02     		.2byte	0x24e
 803 02df 75020000 		.4byte	0x275
 804 02e3 06       		.uleb128 0x6
 805 02e4 08       		.byte	0x8
 806 02e5 04       		.byte	0x4
 807 02e6 D402     		.2byte	0x2d4
 808 02e8 0A030000 		.4byte	0x30a
 809 02ec 08       		.uleb128 0x8
 810 02ed 435200   		.ascii	"CR\000"
 811 02f0 04       		.byte	0x4
 812 02f1 D602     		.2byte	0x2d6
 813 02f3 9B000000 		.4byte	0x9b
 814 02f7 02       		.byte	0x2
 815 02f8 23       		.byte	0x23
 816 02f9 00       		.uleb128 0
 817 02fa 08       		.uleb128 0x8
 818 02fb 43535200 		.ascii	"CSR\000"
ARM GAS  /tmp/ccLt1DA2.s 			page 24


 819 02ff 04       		.byte	0x4
 820 0300 D702     		.2byte	0x2d7
 821 0302 9B000000 		.4byte	0x9b
 822 0306 02       		.byte	0x2
 823 0307 23       		.byte	0x23
 824 0308 04       		.uleb128 0x4
 825 0309 00       		.byte	0
 826 030a 0C       		.uleb128 0xc
 827 030b 33000000 		.4byte	.LASF34
 828 030f 04       		.byte	0x4
 829 0310 D802     		.2byte	0x2d8
 830 0312 E3020000 		.4byte	0x2e3
 831 0316 06       		.uleb128 0x6
 832 0317 88       		.byte	0x88
 833 0318 04       		.byte	0x4
 834 0319 DE02     		.2byte	0x2de
 835 031b E3040000 		.4byte	0x4e3
 836 031f 08       		.uleb128 0x8
 837 0320 435200   		.ascii	"CR\000"
 838 0323 04       		.byte	0x4
 839 0324 E002     		.2byte	0x2e0
 840 0326 9B000000 		.4byte	0x9b
 841 032a 02       		.byte	0x2
 842 032b 23       		.byte	0x23
 843 032c 00       		.uleb128 0
 844 032d 07       		.uleb128 0x7
 845 032e 0A000000 		.4byte	.LASF35
 846 0332 04       		.byte	0x4
 847 0333 E102     		.2byte	0x2e1
 848 0335 9B000000 		.4byte	0x9b
 849 0339 02       		.byte	0x2
 850 033a 23       		.byte	0x23
 851 033b 04       		.uleb128 0x4
 852 033c 07       		.uleb128 0x7
 853 033d 5F000000 		.4byte	.LASF36
 854 0341 04       		.byte	0x4
 855 0342 E202     		.2byte	0x2e2
 856 0344 9B000000 		.4byte	0x9b
 857 0348 02       		.byte	0x2
 858 0349 23       		.byte	0x23
 859 034a 08       		.uleb128 0x8
 860 034b 08       		.uleb128 0x8
 861 034c 43495200 		.ascii	"CIR\000"
 862 0350 04       		.byte	0x4
 863 0351 E302     		.2byte	0x2e3
 864 0353 9B000000 		.4byte	0x9b
 865 0357 02       		.byte	0x2
 866 0358 23       		.byte	0x23
 867 0359 0C       		.uleb128 0xc
 868 035a 07       		.uleb128 0x7
 869 035b E1020000 		.4byte	.LASF37
 870 035f 04       		.byte	0x4
 871 0360 E402     		.2byte	0x2e4
 872 0362 9B000000 		.4byte	0x9b
 873 0366 02       		.byte	0x2
 874 0367 23       		.byte	0x23
 875 0368 10       		.uleb128 0x10
ARM GAS  /tmp/ccLt1DA2.s 			page 25


 876 0369 07       		.uleb128 0x7
 877 036a 07010000 		.4byte	.LASF38
 878 036e 04       		.byte	0x4
 879 036f E502     		.2byte	0x2e5
 880 0371 9B000000 		.4byte	0x9b
 881 0375 02       		.byte	0x2
 882 0376 23       		.byte	0x23
 883 0377 14       		.uleb128 0x14
 884 0378 07       		.uleb128 0x7
 885 0379 EF020000 		.4byte	.LASF39
 886 037d 04       		.byte	0x4
 887 037e E602     		.2byte	0x2e6
 888 0380 9B000000 		.4byte	0x9b
 889 0384 02       		.byte	0x2
 890 0385 23       		.byte	0x23
 891 0386 18       		.uleb128 0x18
 892 0387 07       		.uleb128 0x7
 893 0388 33020000 		.4byte	.LASF26
 894 038c 04       		.byte	0x4
 895 038d E702     		.2byte	0x2e7
 896 038f 6D000000 		.4byte	0x6d
 897 0393 02       		.byte	0x2
 898 0394 23       		.byte	0x23
 899 0395 1C       		.uleb128 0x1c
 900 0396 07       		.uleb128 0x7
 901 0397 12000000 		.4byte	.LASF40
 902 039b 04       		.byte	0x4
 903 039c E802     		.2byte	0x2e8
 904 039e 9B000000 		.4byte	0x9b
 905 03a2 02       		.byte	0x2
 906 03a3 23       		.byte	0x23
 907 03a4 20       		.uleb128 0x20
 908 03a5 07       		.uleb128 0x7
 909 03a6 F9000000 		.4byte	.LASF41
 910 03aa 04       		.byte	0x4
 911 03ab E902     		.2byte	0x2e9
 912 03ad 9B000000 		.4byte	0x9b
 913 03b1 02       		.byte	0x2
 914 03b2 23       		.byte	0x23
 915 03b3 24       		.uleb128 0x24
 916 03b4 07       		.uleb128 0x7
 917 03b5 3D020000 		.4byte	.LASF42
 918 03b9 04       		.byte	0x4
 919 03ba EA02     		.2byte	0x2ea
 920 03bc 00020000 		.4byte	0x200
 921 03c0 02       		.byte	0x2
 922 03c1 23       		.byte	0x23
 923 03c2 28       		.uleb128 0x28
 924 03c3 07       		.uleb128 0x7
 925 03c4 D3020000 		.4byte	.LASF43
 926 03c8 04       		.byte	0x4
 927 03c9 EB02     		.2byte	0x2eb
 928 03cb 9B000000 		.4byte	0x9b
 929 03cf 02       		.byte	0x2
 930 03d0 23       		.byte	0x23
 931 03d1 30       		.uleb128 0x30
 932 03d2 07       		.uleb128 0x7
ARM GAS  /tmp/ccLt1DA2.s 			page 26


 933 03d3 1B000000 		.4byte	.LASF44
 934 03d7 04       		.byte	0x4
 935 03d8 EC02     		.2byte	0x2ec
 936 03da 9B000000 		.4byte	0x9b
 937 03de 02       		.byte	0x2
 938 03df 23       		.byte	0x23
 939 03e0 34       		.uleb128 0x34
 940 03e1 07       		.uleb128 0x7
 941 03e2 1A010000 		.4byte	.LASF45
 942 03e6 04       		.byte	0x4
 943 03e7 ED02     		.2byte	0x2ed
 944 03e9 9B000000 		.4byte	0x9b
 945 03ed 02       		.byte	0x2
 946 03ee 23       		.byte	0x23
 947 03ef 38       		.uleb128 0x38
 948 03f0 07       		.uleb128 0x7
 949 03f1 47020000 		.4byte	.LASF46
 950 03f5 04       		.byte	0x4
 951 03f6 EE02     		.2byte	0x2ee
 952 03f8 6D000000 		.4byte	0x6d
 953 03fc 02       		.byte	0x2
 954 03fd 23       		.byte	0x23
 955 03fe 3C       		.uleb128 0x3c
 956 03ff 07       		.uleb128 0x7
 957 0400 7F000000 		.4byte	.LASF47
 958 0404 04       		.byte	0x4
 959 0405 EF02     		.2byte	0x2ef
 960 0407 9B000000 		.4byte	0x9b
 961 040b 02       		.byte	0x2
 962 040c 23       		.byte	0x23
 963 040d 40       		.uleb128 0x40
 964 040e 07       		.uleb128 0x7
 965 040f 45010000 		.4byte	.LASF48
 966 0413 04       		.byte	0x4
 967 0414 F002     		.2byte	0x2f0
 968 0416 9B000000 		.4byte	0x9b
 969 041a 02       		.byte	0x2
 970 041b 23       		.byte	0x23
 971 041c 44       		.uleb128 0x44
 972 041d 07       		.uleb128 0x7
 973 041e 64000000 		.4byte	.LASF49
 974 0422 04       		.byte	0x4
 975 0423 F102     		.2byte	0x2f1
 976 0425 00020000 		.4byte	0x200
 977 0429 02       		.byte	0x2
 978 042a 23       		.byte	0x23
 979 042b 48       		.uleb128 0x48
 980 042c 07       		.uleb128 0x7
 981 042d 00000000 		.4byte	.LASF50
 982 0431 04       		.byte	0x4
 983 0432 F202     		.2byte	0x2f2
 984 0434 9B000000 		.4byte	0x9b
 985 0438 02       		.byte	0x2
 986 0439 23       		.byte	0x23
 987 043a 50       		.uleb128 0x50
 988 043b 07       		.uleb128 0x7
 989 043c 24020000 		.4byte	.LASF51
ARM GAS  /tmp/ccLt1DA2.s 			page 27


 990 0440 04       		.byte	0x4
 991 0441 F302     		.2byte	0x2f3
 992 0443 9B000000 		.4byte	0x9b
 993 0447 02       		.byte	0x2
 994 0448 23       		.byte	0x23
 995 0449 54       		.uleb128 0x54
 996 044a 07       		.uleb128 0x7
 997 044b 55000000 		.4byte	.LASF52
 998 044f 04       		.byte	0x4
 999 0450 F402     		.2byte	0x2f4
 1000 0452 9B000000 		.4byte	0x9b
 1001 0456 02       		.byte	0x2
 1002 0457 23       		.byte	0x23
 1003 0458 58       		.uleb128 0x58
 1004 0459 07       		.uleb128 0x7
 1005 045a 5D020000 		.4byte	.LASF53
 1006 045e 04       		.byte	0x4
 1007 045f F502     		.2byte	0x2f5
 1008 0461 6D000000 		.4byte	0x6d
 1009 0465 02       		.byte	0x2
 1010 0466 23       		.byte	0x23
 1011 0467 5C       		.uleb128 0x5c
 1012 0468 07       		.uleb128 0x7
 1013 0469 E7010000 		.4byte	.LASF54
 1014 046d 04       		.byte	0x4
 1015 046e F602     		.2byte	0x2f6
 1016 0470 9B000000 		.4byte	0x9b
 1017 0474 02       		.byte	0x2
 1018 0475 23       		.byte	0x23
 1019 0476 60       		.uleb128 0x60
 1020 0477 07       		.uleb128 0x7
 1021 0478 19030000 		.4byte	.LASF55
 1022 047c 04       		.byte	0x4
 1023 047d F702     		.2byte	0x2f7
 1024 047f 9B000000 		.4byte	0x9b
 1025 0483 02       		.byte	0x2
 1026 0484 23       		.byte	0x23
 1027 0485 64       		.uleb128 0x64
 1028 0486 07       		.uleb128 0x7
 1029 0487 67020000 		.4byte	.LASF56
 1030 048b 04       		.byte	0x4
 1031 048c F802     		.2byte	0x2f8
 1032 048e 00020000 		.4byte	0x200
 1033 0492 02       		.byte	0x2
 1034 0493 23       		.byte	0x23
 1035 0494 68       		.uleb128 0x68
 1036 0495 07       		.uleb128 0x7
 1037 0496 23000000 		.4byte	.LASF57
 1038 049a 04       		.byte	0x4
 1039 049b F902     		.2byte	0x2f9
 1040 049d 9B000000 		.4byte	0x9b
 1041 04a1 02       		.byte	0x2
 1042 04a2 23       		.byte	0x23
 1043 04a3 70       		.uleb128 0x70
 1044 04a4 08       		.uleb128 0x8
 1045 04a5 43535200 		.ascii	"CSR\000"
 1046 04a9 04       		.byte	0x4
ARM GAS  /tmp/ccLt1DA2.s 			page 28


 1047 04aa FA02     		.2byte	0x2fa
 1048 04ac 9B000000 		.4byte	0x9b
 1049 04b0 02       		.byte	0x2
 1050 04b1 23       		.byte	0x23
 1051 04b2 74       		.uleb128 0x74
 1052 04b3 07       		.uleb128 0x7
 1053 04b4 71020000 		.4byte	.LASF58
 1054 04b8 04       		.byte	0x4
 1055 04b9 FB02     		.2byte	0x2fb
 1056 04bb 00020000 		.4byte	0x200
 1057 04bf 02       		.byte	0x2
 1058 04c0 23       		.byte	0x23
 1059 04c1 78       		.uleb128 0x78
 1060 04c2 07       		.uleb128 0x7
 1061 04c3 3F000000 		.4byte	.LASF59
 1062 04c7 04       		.byte	0x4
 1063 04c8 FC02     		.2byte	0x2fc
 1064 04ca 9B000000 		.4byte	0x9b
 1065 04ce 03       		.byte	0x3
 1066 04cf 23       		.byte	0x23
 1067 04d0 8001     		.uleb128 0x80
 1068 04d2 07       		.uleb128 0x7
 1069 04d3 28000000 		.4byte	.LASF60
 1070 04d7 04       		.byte	0x4
 1071 04d8 FD02     		.2byte	0x2fd
 1072 04da 9B000000 		.4byte	0x9b
 1073 04de 03       		.byte	0x3
 1074 04df 23       		.byte	0x23
 1075 04e0 8401     		.uleb128 0x84
 1076 04e2 00       		.byte	0
 1077 04e3 0C       		.uleb128 0xc
 1078 04e4 ED000000 		.4byte	.LASF61
 1079 04e8 04       		.byte	0x4
 1080 04e9 FE02     		.2byte	0x2fe
 1081 04eb 16030000 		.4byte	0x316
 1082 04ef 10       		.uleb128 0x10
 1083 04f0 51020000 		.4byte	.LASF74
 1084 04f4 01       		.byte	0x1
 1085 04f5 5C01     		.2byte	0x15c
 1086 04f7 01       		.byte	0x1
 1087 04f8 00000000 		.4byte	.LFB112
 1088 04fc D8000000 		.4byte	.LFE112
 1089 0500 00000000 		.4byte	.LLST0
 1090 0504 29050000 		.4byte	0x529
 1091 0508 11       		.uleb128 0x11
 1092 0509 4D010000 		.4byte	.LASF62
 1093 050d 01       		.byte	0x1
 1094 050e 6101     		.2byte	0x161
 1095 0510 9B000000 		.4byte	0x9b
 1096 0514 20000000 		.4byte	.LLST1
 1097 0518 11       		.uleb128 0x11
 1098 0519 45000000 		.4byte	.LASF63
 1099 051d 01       		.byte	0x1
 1100 051e 6101     		.2byte	0x161
 1101 0520 9B000000 		.4byte	0x9b
 1102 0524 4B000000 		.4byte	.LLST2
 1103 0528 00       		.byte	0
ARM GAS  /tmp/ccLt1DA2.s 			page 29


 1104 0529 12       		.uleb128 0x12
 1105 052a 01       		.byte	0x1
 1106 052b C9010000 		.4byte	.LASF75
 1107 052f 01       		.byte	0x1
 1108 0530 D6       		.byte	0xd6
 1109 0531 01       		.byte	0x1
 1110 0532 00000000 		.4byte	.LFB110
 1111 0536 56000000 		.4byte	.LFE110
 1112 053a 76000000 		.4byte	.LLST3
 1113 053e 13       		.uleb128 0x13
 1114 053f 01       		.byte	0x1
 1115 0540 AD010000 		.4byte	.LASF76
 1116 0544 01       		.byte	0x1
 1117 0545 2401     		.2byte	0x124
 1118 0547 01       		.byte	0x1
 1119 0548 00000000 		.4byte	.LFB111
 1120 054c 90000000 		.4byte	.LFE111
 1121 0550 02       		.byte	0x2
 1122 0551 7D       		.byte	0x7d
 1123 0552 00       		.sleb128 0
 1124 0553 A8050000 		.4byte	0x5a8
 1125 0557 14       		.uleb128 0x14
 1126 0558 746D7000 		.ascii	"tmp\000"
 1127 055c 01       		.byte	0x1
 1128 055d 2601     		.2byte	0x126
 1129 055f 6D000000 		.4byte	0x6d
 1130 0563 96000000 		.4byte	.LLST4
 1131 0567 11       		.uleb128 0x11
 1132 0568 F1010000 		.4byte	.LASF64
 1133 056c 01       		.byte	0x1
 1134 056d 2601     		.2byte	0x126
 1135 056f 6D000000 		.4byte	0x6d
 1136 0573 D5000000 		.4byte	.LLST5
 1137 0577 11       		.uleb128 0x11
 1138 0578 2C010000 		.4byte	.LASF65
 1139 057c 01       		.byte	0x1
 1140 057d 2601     		.2byte	0x126
 1141 057f 6D000000 		.4byte	0x6d
 1142 0583 00010000 		.4byte	.LLST6
 1143 0587 11       		.uleb128 0x11
 1144 0588 10010000 		.4byte	.LASF66
 1145 058c 01       		.byte	0x1
 1146 058d 2601     		.2byte	0x126
 1147 058f 6D000000 		.4byte	0x6d
 1148 0593 20010000 		.4byte	.LLST7
 1149 0597 11       		.uleb128 0x11
 1150 0598 27010000 		.4byte	.LASF67
 1151 059c 01       		.byte	0x1
 1152 059d 2601     		.2byte	0x126
 1153 059f 6D000000 		.4byte	0x6d
 1154 05a3 55010000 		.4byte	.LLST8
 1155 05a7 00       		.byte	0
 1156 05a8 15       		.uleb128 0x15
 1157 05a9 06030000 		.4byte	.LASF68
 1158 05ad 03       		.byte	0x3
 1159 05ae 9806     		.2byte	0x698
 1160 05b0 5A020000 		.4byte	0x25a
ARM GAS  /tmp/ccLt1DA2.s 			page 30


 1161 05b4 01       		.byte	0x1
 1162 05b5 01       		.byte	0x1
 1163 05b6 16       		.uleb128 0x16
 1164 05b7 0F020000 		.4byte	.LASF69
 1165 05bb 05       		.byte	0x5
 1166 05bc 3B       		.byte	0x3b
 1167 05bd 6D000000 		.4byte	0x6d
 1168 05c1 01       		.byte	0x1
 1169 05c2 01       		.byte	0x1
 1170 05c3 0A       		.uleb128 0xa
 1171 05c4 30000000 		.4byte	0x30
 1172 05c8 D3050000 		.4byte	0x5d3
 1173 05cc 0B       		.uleb128 0xb
 1174 05cd 94000000 		.4byte	0x94
 1175 05d1 0F       		.byte	0xf
 1176 05d2 00       		.byte	0
 1177 05d3 16       		.uleb128 0x16
 1178 05d4 87000000 		.4byte	.LASF70
 1179 05d8 01       		.byte	0x1
 1180 05d9 B8       		.byte	0xb8
 1181 05da E0050000 		.4byte	0x5e0
 1182 05de 01       		.byte	0x1
 1183 05df 01       		.byte	0x1
 1184 05e0 09       		.uleb128 0x9
 1185 05e1 E5050000 		.4byte	0x5e5
 1186 05e5 05       		.uleb128 0x5
 1187 05e6 C3050000 		.4byte	0x5c3
 1188 05ea 15       		.uleb128 0x15
 1189 05eb 06030000 		.4byte	.LASF68
 1190 05ef 03       		.byte	0x3
 1191 05f0 9806     		.2byte	0x698
 1192 05f2 5A020000 		.4byte	0x25a
 1193 05f6 01       		.byte	0x1
 1194 05f7 01       		.byte	0x1
 1195 05f8 17       		.uleb128 0x17
 1196 05f9 0F020000 		.4byte	.LASF69
 1197 05fd 01       		.byte	0x1
 1198 05fe B6       		.byte	0xb6
 1199 05ff 6D000000 		.4byte	0x6d
 1200 0603 01       		.byte	0x1
 1201 0604 05       		.byte	0x5
 1202 0605 03       		.byte	0x3
 1203 0606 00000000 		.4byte	SystemCoreClock
 1204 060a 17       		.uleb128 0x17
 1205 060b 87000000 		.4byte	.LASF70
 1206 060f 01       		.byte	0x1
 1207 0610 B8       		.byte	0xb8
 1208 0611 1C060000 		.4byte	0x61c
 1209 0615 01       		.byte	0x1
 1210 0616 05       		.byte	0x5
 1211 0617 03       		.byte	0x3
 1212 0618 00000000 		.4byte	AHBPrescTable
 1213 061c 09       		.uleb128 0x9
 1214 061d 21060000 		.4byte	0x621
 1215 0621 05       		.uleb128 0x5
 1216 0622 C3050000 		.4byte	0x5c3
 1217 0626 00       		.byte	0
ARM GAS  /tmp/ccLt1DA2.s 			page 31


 1218              		.section	.debug_abbrev,"",%progbits
 1219              	.Ldebug_abbrev0:
 1220 0000 01       		.uleb128 0x1
 1221 0001 11       		.uleb128 0x11
 1222 0002 01       		.byte	0x1
 1223 0003 25       		.uleb128 0x25
 1224 0004 0E       		.uleb128 0xe
 1225 0005 13       		.uleb128 0x13
 1226 0006 0B       		.uleb128 0xb
 1227 0007 03       		.uleb128 0x3
 1228 0008 0E       		.uleb128 0xe
 1229 0009 1B       		.uleb128 0x1b
 1230 000a 0E       		.uleb128 0xe
 1231 000b 11       		.uleb128 0x11
 1232 000c 01       		.uleb128 0x1
 1233 000d 52       		.uleb128 0x52
 1234 000e 01       		.uleb128 0x1
 1235 000f 55       		.uleb128 0x55
 1236 0010 06       		.uleb128 0x6
 1237 0011 10       		.uleb128 0x10
 1238 0012 06       		.uleb128 0x6
 1239 0013 00       		.byte	0
 1240 0014 00       		.byte	0
 1241 0015 02       		.uleb128 0x2
 1242 0016 24       		.uleb128 0x24
 1243 0017 00       		.byte	0
 1244 0018 0B       		.uleb128 0xb
 1245 0019 0B       		.uleb128 0xb
 1246 001a 3E       		.uleb128 0x3e
 1247 001b 0B       		.uleb128 0xb
 1248 001c 03       		.uleb128 0x3
 1249 001d 0E       		.uleb128 0xe
 1250 001e 00       		.byte	0
 1251 001f 00       		.byte	0
 1252 0020 03       		.uleb128 0x3
 1253 0021 16       		.uleb128 0x16
 1254 0022 00       		.byte	0
 1255 0023 03       		.uleb128 0x3
 1256 0024 0E       		.uleb128 0xe
 1257 0025 3A       		.uleb128 0x3a
 1258 0026 0B       		.uleb128 0xb
 1259 0027 3B       		.uleb128 0x3b
 1260 0028 0B       		.uleb128 0xb
 1261 0029 49       		.uleb128 0x49
 1262 002a 13       		.uleb128 0x13
 1263 002b 00       		.byte	0
 1264 002c 00       		.byte	0
 1265 002d 04       		.uleb128 0x4
 1266 002e 24       		.uleb128 0x24
 1267 002f 00       		.byte	0
 1268 0030 0B       		.uleb128 0xb
 1269 0031 0B       		.uleb128 0xb
 1270 0032 3E       		.uleb128 0x3e
 1271 0033 0B       		.uleb128 0xb
 1272 0034 03       		.uleb128 0x3
 1273 0035 08       		.uleb128 0x8
 1274 0036 00       		.byte	0
ARM GAS  /tmp/ccLt1DA2.s 			page 32


 1275 0037 00       		.byte	0
 1276 0038 05       		.uleb128 0x5
 1277 0039 35       		.uleb128 0x35
 1278 003a 00       		.byte	0
 1279 003b 49       		.uleb128 0x49
 1280 003c 13       		.uleb128 0x13
 1281 003d 00       		.byte	0
 1282 003e 00       		.byte	0
 1283 003f 06       		.uleb128 0x6
 1284 0040 13       		.uleb128 0x13
 1285 0041 01       		.byte	0x1
 1286 0042 0B       		.uleb128 0xb
 1287 0043 0B       		.uleb128 0xb
 1288 0044 3A       		.uleb128 0x3a
 1289 0045 0B       		.uleb128 0xb
 1290 0046 3B       		.uleb128 0x3b
 1291 0047 05       		.uleb128 0x5
 1292 0048 01       		.uleb128 0x1
 1293 0049 13       		.uleb128 0x13
 1294 004a 00       		.byte	0
 1295 004b 00       		.byte	0
 1296 004c 07       		.uleb128 0x7
 1297 004d 0D       		.uleb128 0xd
 1298 004e 00       		.byte	0
 1299 004f 03       		.uleb128 0x3
 1300 0050 0E       		.uleb128 0xe
 1301 0051 3A       		.uleb128 0x3a
 1302 0052 0B       		.uleb128 0xb
 1303 0053 3B       		.uleb128 0x3b
 1304 0054 05       		.uleb128 0x5
 1305 0055 49       		.uleb128 0x49
 1306 0056 13       		.uleb128 0x13
 1307 0057 38       		.uleb128 0x38
 1308 0058 0A       		.uleb128 0xa
 1309 0059 00       		.byte	0
 1310 005a 00       		.byte	0
 1311 005b 08       		.uleb128 0x8
 1312 005c 0D       		.uleb128 0xd
 1313 005d 00       		.byte	0
 1314 005e 03       		.uleb128 0x3
 1315 005f 08       		.uleb128 0x8
 1316 0060 3A       		.uleb128 0x3a
 1317 0061 0B       		.uleb128 0xb
 1318 0062 3B       		.uleb128 0x3b
 1319 0063 05       		.uleb128 0x5
 1320 0064 49       		.uleb128 0x49
 1321 0065 13       		.uleb128 0x13
 1322 0066 38       		.uleb128 0x38
 1323 0067 0A       		.uleb128 0xa
 1324 0068 00       		.byte	0
 1325 0069 00       		.byte	0
 1326 006a 09       		.uleb128 0x9
 1327 006b 26       		.uleb128 0x26
 1328 006c 00       		.byte	0
 1329 006d 49       		.uleb128 0x49
 1330 006e 13       		.uleb128 0x13
 1331 006f 00       		.byte	0
ARM GAS  /tmp/ccLt1DA2.s 			page 33


 1332 0070 00       		.byte	0
 1333 0071 0A       		.uleb128 0xa
 1334 0072 01       		.uleb128 0x1
 1335 0073 01       		.byte	0x1
 1336 0074 49       		.uleb128 0x49
 1337 0075 13       		.uleb128 0x13
 1338 0076 01       		.uleb128 0x1
 1339 0077 13       		.uleb128 0x13
 1340 0078 00       		.byte	0
 1341 0079 00       		.byte	0
 1342 007a 0B       		.uleb128 0xb
 1343 007b 21       		.uleb128 0x21
 1344 007c 00       		.byte	0
 1345 007d 49       		.uleb128 0x49
 1346 007e 13       		.uleb128 0x13
 1347 007f 2F       		.uleb128 0x2f
 1348 0080 0B       		.uleb128 0xb
 1349 0081 00       		.byte	0
 1350 0082 00       		.byte	0
 1351 0083 0C       		.uleb128 0xc
 1352 0084 16       		.uleb128 0x16
 1353 0085 00       		.byte	0
 1354 0086 03       		.uleb128 0x3
 1355 0087 0E       		.uleb128 0xe
 1356 0088 3A       		.uleb128 0x3a
 1357 0089 0B       		.uleb128 0xb
 1358 008a 3B       		.uleb128 0x3b
 1359 008b 05       		.uleb128 0x5
 1360 008c 49       		.uleb128 0x49
 1361 008d 13       		.uleb128 0x13
 1362 008e 00       		.byte	0
 1363 008f 00       		.byte	0
 1364 0090 0D       		.uleb128 0xd
 1365 0091 04       		.uleb128 0x4
 1366 0092 01       		.byte	0x1
 1367 0093 0B       		.uleb128 0xb
 1368 0094 0B       		.uleb128 0xb
 1369 0095 3A       		.uleb128 0x3a
 1370 0096 0B       		.uleb128 0xb
 1371 0097 3B       		.uleb128 0x3b
 1372 0098 05       		.uleb128 0x5
 1373 0099 01       		.uleb128 0x1
 1374 009a 13       		.uleb128 0x13
 1375 009b 00       		.byte	0
 1376 009c 00       		.byte	0
 1377 009d 0E       		.uleb128 0xe
 1378 009e 28       		.uleb128 0x28
 1379 009f 00       		.byte	0
 1380 00a0 03       		.uleb128 0x3
 1381 00a1 0E       		.uleb128 0xe
 1382 00a2 1C       		.uleb128 0x1c
 1383 00a3 0D       		.uleb128 0xd
 1384 00a4 00       		.byte	0
 1385 00a5 00       		.byte	0
 1386 00a6 0F       		.uleb128 0xf
 1387 00a7 28       		.uleb128 0x28
 1388 00a8 00       		.byte	0
ARM GAS  /tmp/ccLt1DA2.s 			page 34


 1389 00a9 03       		.uleb128 0x3
 1390 00aa 08       		.uleb128 0x8
 1391 00ab 1C       		.uleb128 0x1c
 1392 00ac 0D       		.uleb128 0xd
 1393 00ad 00       		.byte	0
 1394 00ae 00       		.byte	0
 1395 00af 10       		.uleb128 0x10
 1396 00b0 2E       		.uleb128 0x2e
 1397 00b1 01       		.byte	0x1
 1398 00b2 03       		.uleb128 0x3
 1399 00b3 0E       		.uleb128 0xe
 1400 00b4 3A       		.uleb128 0x3a
 1401 00b5 0B       		.uleb128 0xb
 1402 00b6 3B       		.uleb128 0x3b
 1403 00b7 05       		.uleb128 0x5
 1404 00b8 27       		.uleb128 0x27
 1405 00b9 0C       		.uleb128 0xc
 1406 00ba 11       		.uleb128 0x11
 1407 00bb 01       		.uleb128 0x1
 1408 00bc 12       		.uleb128 0x12
 1409 00bd 01       		.uleb128 0x1
 1410 00be 40       		.uleb128 0x40
 1411 00bf 06       		.uleb128 0x6
 1412 00c0 01       		.uleb128 0x1
 1413 00c1 13       		.uleb128 0x13
 1414 00c2 00       		.byte	0
 1415 00c3 00       		.byte	0
 1416 00c4 11       		.uleb128 0x11
 1417 00c5 34       		.uleb128 0x34
 1418 00c6 00       		.byte	0
 1419 00c7 03       		.uleb128 0x3
 1420 00c8 0E       		.uleb128 0xe
 1421 00c9 3A       		.uleb128 0x3a
 1422 00ca 0B       		.uleb128 0xb
 1423 00cb 3B       		.uleb128 0x3b
 1424 00cc 05       		.uleb128 0x5
 1425 00cd 49       		.uleb128 0x49
 1426 00ce 13       		.uleb128 0x13
 1427 00cf 02       		.uleb128 0x2
 1428 00d0 06       		.uleb128 0x6
 1429 00d1 00       		.byte	0
 1430 00d2 00       		.byte	0
 1431 00d3 12       		.uleb128 0x12
 1432 00d4 2E       		.uleb128 0x2e
 1433 00d5 00       		.byte	0
 1434 00d6 3F       		.uleb128 0x3f
 1435 00d7 0C       		.uleb128 0xc
 1436 00d8 03       		.uleb128 0x3
 1437 00d9 0E       		.uleb128 0xe
 1438 00da 3A       		.uleb128 0x3a
 1439 00db 0B       		.uleb128 0xb
 1440 00dc 3B       		.uleb128 0x3b
 1441 00dd 0B       		.uleb128 0xb
 1442 00de 27       		.uleb128 0x27
 1443 00df 0C       		.uleb128 0xc
 1444 00e0 11       		.uleb128 0x11
 1445 00e1 01       		.uleb128 0x1
ARM GAS  /tmp/ccLt1DA2.s 			page 35


 1446 00e2 12       		.uleb128 0x12
 1447 00e3 01       		.uleb128 0x1
 1448 00e4 40       		.uleb128 0x40
 1449 00e5 06       		.uleb128 0x6
 1450 00e6 00       		.byte	0
 1451 00e7 00       		.byte	0
 1452 00e8 13       		.uleb128 0x13
 1453 00e9 2E       		.uleb128 0x2e
 1454 00ea 01       		.byte	0x1
 1455 00eb 3F       		.uleb128 0x3f
 1456 00ec 0C       		.uleb128 0xc
 1457 00ed 03       		.uleb128 0x3
 1458 00ee 0E       		.uleb128 0xe
 1459 00ef 3A       		.uleb128 0x3a
 1460 00f0 0B       		.uleb128 0xb
 1461 00f1 3B       		.uleb128 0x3b
 1462 00f2 05       		.uleb128 0x5
 1463 00f3 27       		.uleb128 0x27
 1464 00f4 0C       		.uleb128 0xc
 1465 00f5 11       		.uleb128 0x11
 1466 00f6 01       		.uleb128 0x1
 1467 00f7 12       		.uleb128 0x12
 1468 00f8 01       		.uleb128 0x1
 1469 00f9 40       		.uleb128 0x40
 1470 00fa 0A       		.uleb128 0xa
 1471 00fb 01       		.uleb128 0x1
 1472 00fc 13       		.uleb128 0x13
 1473 00fd 00       		.byte	0
 1474 00fe 00       		.byte	0
 1475 00ff 14       		.uleb128 0x14
 1476 0100 34       		.uleb128 0x34
 1477 0101 00       		.byte	0
 1478 0102 03       		.uleb128 0x3
 1479 0103 08       		.uleb128 0x8
 1480 0104 3A       		.uleb128 0x3a
 1481 0105 0B       		.uleb128 0xb
 1482 0106 3B       		.uleb128 0x3b
 1483 0107 05       		.uleb128 0x5
 1484 0108 49       		.uleb128 0x49
 1485 0109 13       		.uleb128 0x13
 1486 010a 02       		.uleb128 0x2
 1487 010b 06       		.uleb128 0x6
 1488 010c 00       		.byte	0
 1489 010d 00       		.byte	0
 1490 010e 15       		.uleb128 0x15
 1491 010f 34       		.uleb128 0x34
 1492 0110 00       		.byte	0
 1493 0111 03       		.uleb128 0x3
 1494 0112 0E       		.uleb128 0xe
 1495 0113 3A       		.uleb128 0x3a
 1496 0114 0B       		.uleb128 0xb
 1497 0115 3B       		.uleb128 0x3b
 1498 0116 05       		.uleb128 0x5
 1499 0117 49       		.uleb128 0x49
 1500 0118 13       		.uleb128 0x13
 1501 0119 3F       		.uleb128 0x3f
 1502 011a 0C       		.uleb128 0xc
ARM GAS  /tmp/ccLt1DA2.s 			page 36


 1503 011b 3C       		.uleb128 0x3c
 1504 011c 0C       		.uleb128 0xc
 1505 011d 00       		.byte	0
 1506 011e 00       		.byte	0
 1507 011f 16       		.uleb128 0x16
 1508 0120 34       		.uleb128 0x34
 1509 0121 00       		.byte	0
 1510 0122 03       		.uleb128 0x3
 1511 0123 0E       		.uleb128 0xe
 1512 0124 3A       		.uleb128 0x3a
 1513 0125 0B       		.uleb128 0xb
 1514 0126 3B       		.uleb128 0x3b
 1515 0127 0B       		.uleb128 0xb
 1516 0128 49       		.uleb128 0x49
 1517 0129 13       		.uleb128 0x13
 1518 012a 3F       		.uleb128 0x3f
 1519 012b 0C       		.uleb128 0xc
 1520 012c 3C       		.uleb128 0x3c
 1521 012d 0C       		.uleb128 0xc
 1522 012e 00       		.byte	0
 1523 012f 00       		.byte	0
 1524 0130 17       		.uleb128 0x17
 1525 0131 34       		.uleb128 0x34
 1526 0132 00       		.byte	0
 1527 0133 03       		.uleb128 0x3
 1528 0134 0E       		.uleb128 0xe
 1529 0135 3A       		.uleb128 0x3a
 1530 0136 0B       		.uleb128 0xb
 1531 0137 3B       		.uleb128 0x3b
 1532 0138 0B       		.uleb128 0xb
 1533 0139 49       		.uleb128 0x49
 1534 013a 13       		.uleb128 0x13
 1535 013b 3F       		.uleb128 0x3f
 1536 013c 0C       		.uleb128 0xc
 1537 013d 02       		.uleb128 0x2
 1538 013e 0A       		.uleb128 0xa
 1539 013f 00       		.byte	0
 1540 0140 00       		.byte	0
 1541 0141 00       		.byte	0
 1542              		.section	.debug_loc,"",%progbits
 1543              	.Ldebug_loc0:
 1544              	.LLST0:
 1545 0000 00000000 		.4byte	.LFB112
 1546 0004 02000000 		.4byte	.LCFI0
 1547 0008 0200     		.2byte	0x2
 1548 000a 7D       		.byte	0x7d
 1549 000b 00       		.sleb128 0
 1550 000c 02000000 		.4byte	.LCFI0
 1551 0010 D8000000 		.4byte	.LFE112
 1552 0014 0200     		.2byte	0x2
 1553 0016 7D       		.byte	0x7d
 1554 0017 08       		.sleb128 8
 1555 0018 00000000 		.4byte	0
 1556 001c 00000000 		.4byte	0
 1557              	.LLST1:
 1558 0020 0E000000 		.4byte	.LVL0
 1559 0024 2E000000 		.4byte	.LVL5
ARM GAS  /tmp/ccLt1DA2.s 			page 37


 1560 0028 0200     		.2byte	0x2
 1561 002a 91       		.byte	0x91
 1562 002b 78       		.sleb128 -8
 1563 002c 30000000 		.4byte	.LVL6
 1564 0030 32000000 		.4byte	.LVL7
 1565 0034 0100     		.2byte	0x1
 1566 0036 53       		.byte	0x53
 1567 0037 32000000 		.4byte	.LVL7
 1568 003b D8000000 		.4byte	.LFE112
 1569 003f 0200     		.2byte	0x2
 1570 0041 91       		.byte	0x91
 1571 0042 78       		.sleb128 -8
 1572 0043 00000000 		.4byte	0
 1573 0047 00000000 		.4byte	0
 1574              	.LLST2:
 1575 004b 10000000 		.4byte	.LVL1
 1576 004f 28000000 		.4byte	.LVL2
 1577 0053 0200     		.2byte	0x2
 1578 0055 91       		.byte	0x91
 1579 0056 7C       		.sleb128 -4
 1580 0057 2A000000 		.4byte	.LVL3
 1581 005b 2C000000 		.4byte	.LVL4
 1582 005f 0100     		.2byte	0x1
 1583 0061 53       		.byte	0x53
 1584 0062 2C000000 		.4byte	.LVL4
 1585 0066 D8000000 		.4byte	.LFE112
 1586 006a 0200     		.2byte	0x2
 1587 006c 91       		.byte	0x91
 1588 006d 7C       		.sleb128 -4
 1589 006e 00000000 		.4byte	0
 1590 0072 00000000 		.4byte	0
 1591              	.LLST3:
 1592 0076 00000000 		.4byte	.LFB110
 1593 007a 02000000 		.4byte	.LCFI1
 1594 007e 0200     		.2byte	0x2
 1595 0080 7D       		.byte	0x7d
 1596 0081 00       		.sleb128 0
 1597 0082 02000000 		.4byte	.LCFI1
 1598 0086 56000000 		.4byte	.LFE110
 1599 008a 0200     		.2byte	0x2
 1600 008c 7D       		.byte	0x7d
 1601 008d 08       		.sleb128 8
 1602 008e 00000000 		.4byte	0
 1603 0092 00000000 		.4byte	0
 1604              	.LLST4:
 1605 0096 00000000 		.4byte	.LVL8
 1606 009a 0A000000 		.4byte	.LVL9
 1607 009e 0200     		.2byte	0x2
 1608 00a0 30       		.byte	0x30
 1609 00a1 9F       		.byte	0x9f
 1610 00a2 0A000000 		.4byte	.LVL9
 1611 00a6 0E000000 		.4byte	.LVL10
 1612 00aa 0500     		.2byte	0x5
 1613 00ac 72       		.byte	0x72
 1614 00ad 00       		.sleb128 0
 1615 00ae 3C       		.byte	0x3c
 1616 00af 1A       		.byte	0x1a
ARM GAS  /tmp/ccLt1DA2.s 			page 38


 1617 00b0 9F       		.byte	0x9f
 1618 00b1 0E000000 		.4byte	.LVL10
 1619 00b5 16000000 		.4byte	.LVL11
 1620 00b9 0100     		.2byte	0x1
 1621 00bb 52       		.byte	0x52
 1622 00bc 3C000000 		.4byte	.LVL13
 1623 00c0 40000000 		.4byte	.LVL14
 1624 00c4 0700     		.2byte	0x7
 1625 00c6 73       		.byte	0x73
 1626 00c7 00       		.sleb128 0
 1627 00c8 48       		.byte	0x48
 1628 00c9 24       		.byte	0x24
 1629 00ca 48       		.byte	0x48
 1630 00cb 25       		.byte	0x25
 1631 00cc 9F       		.byte	0x9f
 1632 00cd 00000000 		.4byte	0
 1633 00d1 00000000 		.4byte	0
 1634              	.LLST5:
 1635 00d5 00000000 		.4byte	.LVL8
 1636 00d9 2A000000 		.4byte	.LVL12
 1637 00dd 0200     		.2byte	0x2
 1638 00df 30       		.byte	0x30
 1639 00e0 9F       		.byte	0x9f
 1640 00e1 44000000 		.4byte	.LVL15
 1641 00e5 80000000 		.4byte	.LVL19
 1642 00e9 0200     		.2byte	0x2
 1643 00eb 30       		.byte	0x30
 1644 00ec 9F       		.byte	0x9f
 1645 00ed 80000000 		.4byte	.LVL19
 1646 00f1 86000000 		.4byte	.LVL20
 1647 00f5 0100     		.2byte	0x1
 1648 00f7 52       		.byte	0x52
 1649 00f8 00000000 		.4byte	0
 1650 00fc 00000000 		.4byte	0
 1651              	.LLST6:
 1652 0100 00000000 		.4byte	.LVL8
 1653 0104 2A000000 		.4byte	.LVL12
 1654 0108 0200     		.2byte	0x2
 1655 010a 32       		.byte	0x32
 1656 010b 9F       		.byte	0x9f
 1657 010c 44000000 		.4byte	.LVL15
 1658 0110 80000000 		.4byte	.LVL19
 1659 0114 0200     		.2byte	0x2
 1660 0116 32       		.byte	0x32
 1661 0117 9F       		.byte	0x9f
 1662 0118 00000000 		.4byte	0
 1663 011c 00000000 		.4byte	0
 1664              	.LLST7:
 1665 0120 00000000 		.4byte	.LVL8
 1666 0124 2A000000 		.4byte	.LVL12
 1667 0128 0200     		.2byte	0x2
 1668 012a 30       		.byte	0x30
 1669 012b 9F       		.byte	0x9f
 1670 012c 44000000 		.4byte	.LVL15
 1671 0130 46000000 		.4byte	.LVL16
 1672 0134 0200     		.2byte	0x2
 1673 0136 30       		.byte	0x30
ARM GAS  /tmp/ccLt1DA2.s 			page 39


 1674 0137 9F       		.byte	0x9f
 1675 0138 46000000 		.4byte	.LVL16
 1676 013c 4E000000 		.4byte	.LVL17
 1677 0140 0B00     		.2byte	0xb
 1678 0142 70       		.byte	0x70
 1679 0143 00       		.sleb128 0
 1680 0144 0C       		.byte	0xc
 1681 0145 00004000 		.4byte	0x400000
 1682 0149 1A       		.byte	0x1a
 1683 014a 46       		.byte	0x46
 1684 014b 25       		.byte	0x25
 1685 014c 9F       		.byte	0x9f
 1686 014d 00000000 		.4byte	0
 1687 0151 00000000 		.4byte	0
 1688              	.LLST8:
 1689 0155 00000000 		.4byte	.LVL8
 1690 0159 2A000000 		.4byte	.LVL12
 1691 015d 0200     		.2byte	0x2
 1692 015f 32       		.byte	0x32
 1693 0160 9F       		.byte	0x9f
 1694 0161 44000000 		.4byte	.LVL15
 1695 0165 64000000 		.4byte	.LVL18
 1696 0169 0200     		.2byte	0x2
 1697 016b 32       		.byte	0x32
 1698 016c 9F       		.byte	0x9f
 1699 016d 64000000 		.4byte	.LVL18
 1700 0171 90000000 		.4byte	.LFE111
 1701 0175 0100     		.2byte	0x1
 1702 0177 51       		.byte	0x51
 1703 0178 00000000 		.4byte	0
 1704 017c 00000000 		.4byte	0
 1705              		.section	.debug_aranges,"",%progbits
 1706 0000 2C000000 		.4byte	0x2c
 1707 0004 0200     		.2byte	0x2
 1708 0006 00000000 		.4byte	.Ldebug_info0
 1709 000a 04       		.byte	0x4
 1710 000b 00       		.byte	0
 1711 000c 0000     		.2byte	0
 1712 000e 0000     		.2byte	0
 1713 0010 00000000 		.4byte	.LFB112
 1714 0014 D8000000 		.4byte	.LFE112-.LFB112
 1715 0018 00000000 		.4byte	.LFB110
 1716 001c 56000000 		.4byte	.LFE110-.LFB110
 1717 0020 00000000 		.4byte	.LFB111
 1718 0024 90000000 		.4byte	.LFE111-.LFB111
 1719 0028 00000000 		.4byte	0
 1720 002c 00000000 		.4byte	0
 1721              		.section	.debug_ranges,"",%progbits
 1722              	.Ldebug_ranges0:
 1723 0000 00000000 		.4byte	.LFB112
 1724 0004 D8000000 		.4byte	.LFE112
 1725 0008 00000000 		.4byte	.LFB110
 1726 000c 56000000 		.4byte	.LFE110
 1727 0010 00000000 		.4byte	.LFB111
 1728 0014 90000000 		.4byte	.LFE111
 1729 0018 00000000 		.4byte	0
 1730 001c 00000000 		.4byte	0
ARM GAS  /tmp/ccLt1DA2.s 			page 40


 1731              		.section	.debug_line,"",%progbits
 1732              	.Ldebug_line0:
 1733 0000 76010000 		.section	.debug_str,"MS",%progbits,1
 1733      0200C700 
 1733      00000201 
 1733      FB0E0D00 
 1733      01010101 
 1734              	.LASF50:
 1735 0000 41484231 		.ascii	"AHB1LPENR\000"
 1735      4C50454E 
 1735      5200
 1736              	.LASF35:
 1737 000a 504C4C43 		.ascii	"PLLCFGR\000"
 1737      46475200 
 1738              	.LASF40:
 1739 0012 41504231 		.ascii	"APB1RSTR\000"
 1739      52535452 
 1739      00
 1740              	.LASF44:
 1741 001b 41484232 		.ascii	"AHB2ENR\000"
 1741      454E5200 
 1742              	.LASF57:
 1743 0023 42444352 		.ascii	"BDCR\000"
 1743      00
 1744              	.LASF60:
 1745 0028 504C4C49 		.ascii	"PLLI2SCFGR\000"
 1745      32534346 
 1745      475200
 1746              	.LASF34:
 1747 0033 5057525F 		.ascii	"PWR_TypeDef\000"
 1747      54797065 
 1747      44656600 
 1748              	.LASF59:
 1749 003f 53534347 		.ascii	"SSCGR\000"
 1749      5200
 1750              	.LASF63:
 1751 0045 48534553 		.ascii	"HSEStatus\000"
 1751      74617475 
 1751      7300
 1752              	.LASF13:
 1753 004f 43505549 		.ascii	"CPUID\000"
 1753      4400
 1754              	.LASF52:
 1755 0055 41484233 		.ascii	"AHB3LPENR\000"
 1755      4C50454E 
 1755      5200
 1756              	.LASF36:
 1757 005f 43464752 		.ascii	"CFGR\000"
 1757      00
 1758              	.LASF49:
 1759 0064 52455345 		.ascii	"RESERVED3\000"
 1759      52564544 
 1759      3300
 1760              	.LASF3:
 1761 006e 75696E74 		.ascii	"uint8_t\000"
 1761      385F7400 
 1762              	.LASF28:
ARM GAS  /tmp/ccLt1DA2.s 			page 41


 1763 0076 5343425F 		.ascii	"SCB_Type\000"
 1763      54797065 
 1763      00
 1764              	.LASF47:
 1765 007f 41504231 		.ascii	"APB1ENR\000"
 1765      454E5200 
 1766              	.LASF70:
 1767 0087 41484250 		.ascii	"AHBPrescTable\000"
 1767      72657363 
 1767      5461626C 
 1767      6500
 1768              	.LASF72:
 1769 0095 2E2E2F63 		.ascii	"../cmsis/system_stm32f4xx.c\000"
 1769      6D736973 
 1769      2F737973 
 1769      74656D5F 
 1769      73746D33 
 1770              	.LASF8:
 1771 00b1 75696E74 		.ascii	"uint32_t\000"
 1771      33325F74 
 1771      00
 1772              	.LASF2:
 1773 00ba 73686F72 		.ascii	"short int\000"
 1773      7420696E 
 1773      7400
 1774              	.LASF14:
 1775 00c4 49435352 		.ascii	"ICSR\000"
 1775      00
 1776              	.LASF31:
 1777 00c9 4F50544B 		.ascii	"OPTKEYR\000"
 1777      45595200 
 1778              	.LASF10:
 1779 00d1 6C6F6E67 		.ascii	"long long int\000"
 1779      206C6F6E 
 1779      6720696E 
 1779      7400
 1780              	.LASF22:
 1781 00df 42464152 		.ascii	"BFAR\000"
 1781      00
 1782              	.LASF7:
 1783 00e4 6C6F6E67 		.ascii	"long int\000"
 1783      20696E74 
 1783      00
 1784              	.LASF61:
 1785 00ed 5243435F 		.ascii	"RCC_TypeDef\000"
 1785      54797065 
 1785      44656600 
 1786              	.LASF41:
 1787 00f9 41504232 		.ascii	"APB2RSTR\000"
 1787      52535452 
 1787      00
 1788              	.LASF18:
 1789 0102 43465352 		.ascii	"CFSR\000"
 1789      00
 1790              	.LASF38:
 1791 0107 41484232 		.ascii	"AHB2RSTR\000"
 1791      52535452 
ARM GAS  /tmp/ccLt1DA2.s 			page 42


 1791      00
 1792              	.LASF66:
 1793 0110 706C6C73 		.ascii	"pllsource\000"
 1793      6F757263 
 1793      6500
 1794              	.LASF45:
 1795 011a 41484233 		.ascii	"AHB3ENR\000"
 1795      454E5200 
 1796              	.LASF30:
 1797 0122 4B455952 		.ascii	"KEYR\000"
 1797      00
 1798              	.LASF67:
 1799 0127 706C6C6D 		.ascii	"pllm\000"
 1799      00
 1800              	.LASF65:
 1801 012c 706C6C70 		.ascii	"pllp\000"
 1801      00
 1802              	.LASF16:
 1803 0131 41495243 		.ascii	"AIRCR\000"
 1803      5200
 1804              	.LASF1:
 1805 0137 756E7369 		.ascii	"unsigned char\000"
 1805      676E6564 
 1805      20636861 
 1805      7200
 1806              	.LASF48:
 1807 0145 41504232 		.ascii	"APB2ENR\000"
 1807      454E5200 
 1808              	.LASF62:
 1809 014d 53746172 		.ascii	"StartUpCounter\000"
 1809      74557043 
 1809      6F756E74 
 1809      657200
 1810              	.LASF0:
 1811 015c 7369676E 		.ascii	"signed char\000"
 1811      65642063 
 1811      68617200 
 1812              	.LASF11:
 1813 0168 6C6F6E67 		.ascii	"long long unsigned int\000"
 1813      206C6F6E 
 1813      6720756E 
 1813      7369676E 
 1813      65642069 
 1814              	.LASF17:
 1815 017f 53484353 		.ascii	"SHCSR\000"
 1815      5200
 1816              	.LASF12:
 1817 0185 756E7369 		.ascii	"unsigned int\000"
 1817      676E6564 
 1817      20696E74 
 1817      00
 1818              	.LASF4:
 1819 0192 75696E74 		.ascii	"uint16_t\000"
 1819      31365F74 
 1819      00
 1820              	.LASF9:
 1821 019b 6C6F6E67 		.ascii	"long unsigned int\000"
ARM GAS  /tmp/ccLt1DA2.s 			page 43


 1821      20756E73 
 1821      69676E65 
 1821      6420696E 
 1821      7400
 1822              	.LASF76:
 1823 01ad 53797374 		.ascii	"SystemCoreClockUpdate\000"
 1823      656D436F 
 1823      7265436C 
 1823      6F636B55 
 1823      70646174 
 1824              	.LASF21:
 1825 01c3 4D4D4641 		.ascii	"MMFAR\000"
 1825      5200
 1826              	.LASF75:
 1827 01c9 53797374 		.ascii	"SystemInit\000"
 1827      656D496E 
 1827      697400
 1828              	.LASF5:
 1829 01d4 73686F72 		.ascii	"short unsigned int\000"
 1829      7420756E 
 1829      7369676E 
 1829      65642069 
 1829      6E7400
 1830              	.LASF54:
 1831 01e7 41504231 		.ascii	"APB1LPENR\000"
 1831      4C50454E 
 1831      5200
 1832              	.LASF64:
 1833 01f1 706C6C76 		.ascii	"pllvco\000"
 1833      636F00
 1834              	.LASF15:
 1835 01f8 56544F52 		.ascii	"VTOR\000"
 1835      00
 1836              	.LASF6:
 1837 01fd 696E7433 		.ascii	"int32_t\000"
 1837      325F7400 
 1838              	.LASF25:
 1839 0205 49534152 		.ascii	"ISAR\000"
 1839      00
 1840              	.LASF20:
 1841 020a 44465352 		.ascii	"DFSR\000"
 1841      00
 1842              	.LASF69:
 1843 020f 53797374 		.ascii	"SystemCoreClock\000"
 1843      656D436F 
 1843      7265436C 
 1843      6F636B00 
 1844              	.LASF19:
 1845 021f 48465352 		.ascii	"HFSR\000"
 1845      00
 1846              	.LASF51:
 1847 0224 41484232 		.ascii	"AHB2LPENR\000"
 1847      4C50454E 
 1847      5200
 1848              	.LASF24:
 1849 022e 4D4D4652 		.ascii	"MMFR\000"
 1849      00
ARM GAS  /tmp/ccLt1DA2.s 			page 44


 1850              	.LASF26:
 1851 0233 52455345 		.ascii	"RESERVED0\000"
 1851      52564544 
 1851      3000
 1852              	.LASF42:
 1853 023d 52455345 		.ascii	"RESERVED1\000"
 1853      52564544 
 1853      3100
 1854              	.LASF46:
 1855 0247 52455345 		.ascii	"RESERVED2\000"
 1855      52564544 
 1855      3200
 1856              	.LASF74:
 1857 0251 53657453 		.ascii	"SetSysClock\000"
 1857      7973436C 
 1857      6F636B00 
 1858              	.LASF53:
 1859 025d 52455345 		.ascii	"RESERVED4\000"
 1859      52564544 
 1859      3400
 1860              	.LASF56:
 1861 0267 52455345 		.ascii	"RESERVED5\000"
 1861      52564544 
 1861      3500
 1862              	.LASF58:
 1863 0271 52455345 		.ascii	"RESERVED6\000"
 1863      52564544 
 1863      3600
 1864              	.LASF73:
 1865 027b 2F686F6D 		.ascii	"/home/xavier/stm32code/usb_test/USB_host_demo/Defau"
 1865      652F7861 
 1865      76696572 
 1865      2F73746D 
 1865      3332636F 
 1866 02ae 6C7400   		.ascii	"lt\000"
 1867              	.LASF71:
 1868 02b1 474E5520 		.ascii	"GNU C 4.6.2 20111004 (prerelease)\000"
 1868      4320342E 
 1868      362E3220 
 1868      32303131 
 1868      31303034 
 1869              	.LASF43:
 1870 02d3 41484231 		.ascii	"AHB1ENR\000"
 1870      454E5200 
 1871              	.LASF29:
 1872 02db 52455345 		.ascii	"RESET\000"
 1872      5400
 1873              	.LASF37:
 1874 02e1 41484231 		.ascii	"AHB1RSTR\000"
 1874      52535452 
 1874      00
 1875              	.LASF23:
 1876 02ea 41465352 		.ascii	"AFSR\000"
 1876      00
 1877              	.LASF39:
 1878 02ef 41484233 		.ascii	"AHB3RSTR\000"
 1878      52535452 
ARM GAS  /tmp/ccLt1DA2.s 			page 45


 1878      00
 1879              	.LASF33:
 1880 02f8 464C4153 		.ascii	"FLASH_TypeDef\000"
 1880      485F5479 
 1880      70654465 
 1880      6600
 1881              	.LASF68:
 1882 0306 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1882      52784275 
 1882      66666572 
 1882      00
 1883              	.LASF27:
 1884 0313 43504143 		.ascii	"CPACR\000"
 1884      5200
 1885              	.LASF55:
 1886 0319 41504232 		.ascii	"APB2LPENR\000"
 1886      4C50454E 
 1886      5200
 1887              	.LASF32:
 1888 0323 4F505443 		.ascii	"OPTCR\000"
 1888      5200
 1889              		.ident	"GCC: (Linaro GCC 4.6-2011.10) 4.6.2 20111004 (prerelease)"
ARM GAS  /tmp/ccLt1DA2.s 			page 46


DEFINED SYMBOLS
                            *ABS*:0000000000000000 system_stm32f4xx.c
     /tmp/ccLt1DA2.s:70     .text.SetSysClock:0000000000000000 $t
     /tmp/ccLt1DA2.s:75     .text.SetSysClock:0000000000000000 SetSysClock
     /tmp/ccLt1DA2.s:222    .text.SystemInit:0000000000000000 $t
     /tmp/ccLt1DA2.s:228    .text.SystemInit:0000000000000000 SystemInit
     /tmp/ccLt1DA2.s:290    .text.SystemCoreClockUpdate:0000000000000000 $t
     /tmp/ccLt1DA2.s:296    .text.SystemCoreClockUpdate:0000000000000000 SystemCoreClockUpdate
     /tmp/ccLt1DA2.s:389    .text.SystemCoreClockUpdate:0000000000000088 $d
     /tmp/ccLt1DA2.s:401    .data.AHBPrescTable:0000000000000000 AHBPrescTable
     /tmp/ccLt1DA2.s:423    .data.SystemCoreClock:0000000000000000 SystemCoreClock
     /tmp/ccLt1DA2.s:397    .data.AHBPrescTable:0000000000000000 $d
     /tmp/ccLt1DA2.s:419    .data.SystemCoreClock:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

NO UNDEFINED SYMBOLS
