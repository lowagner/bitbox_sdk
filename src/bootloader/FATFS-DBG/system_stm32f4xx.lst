ARM GAS  /tmp/ccV8CS10.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3	@ Tag_ABI_HardFP_use
   4              		.eabi_attribute 28, 1	@ Tag_ABI_VFP_args
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1	@ Tag_ABI_FP_denormal
   7              		.eabi_attribute 21, 1	@ Tag_ABI_FP_exceptions
   8              		.eabi_attribute 23, 3	@ Tag_ABI_FP_number_model
   9              		.eabi_attribute 24, 1	@ Tag_ABI_align8_needed
  10              		.eabi_attribute 25, 1	@ Tag_ABI_align8_preserved
  11              		.eabi_attribute 26, 1	@ Tag_ABI_enum_size
  12              		.eabi_attribute 30, 4	@ Tag_ABI_optimization_goals
  13              		.eabi_attribute 34, 1	@ Tag_CPU_unaligned_access
  14              		.eabi_attribute 18, 4	@ Tag_ABI_PCS_wchar_t
  15              		.file	"system_stm32f4xx.c"
  16              	@ GNU C (GNU Tools for ARM Embedded Processors) version 4.7.4 20130913 (release) [ARM/embedded-4_7-
  17              	@	compiled by GNU C version 4.7.3, GMP version 5.0.5, MPFR version 3.1.1-p2, MPC version 0.9
  18              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  19              	@ options passed:  -I . -I ../ -I cmsis/ -imultilib armv7e-m/fpu
  20              	@ -iprefix /usr/bin/../lib/gcc/arm-none-eabi/4.7.4/
  21              	@ -isysroot /usr/bin/../arm-none-eabi -MD system_stm32f4xx.d
  22              	@ -MF .dep/system_stm32f4xx.o.d -MP -MQ system_stm32f4xx.o
  23              	@ -D__USES_INITFINI__ -D __FPU_USED=1 -D __arm__ -D __ASSEMBLY__
  24              	@ -D USE_STDPERIPH_DRIVER -D STM32F4XX -D HSE_VALUE=8000000
  25              	@ -D __FPU_PRESENT=1 -D __FPU_USED=1 -D STM32F405VG -D USE_USB_OTG_FS
  26              	@ -D RUN_FROM_FLASH=1 system_stm32f4xx.c -mthumb -mcpu=cortex-m4
  27              	@ -mfloat-abi=hard -mfpu=fpv4-sp-d16 -mthumb
  28              	@ -auxbase-strip system_stm32f4xx.o -gdwarf-2 -Os -Wall -Wstrict-prototypes
  29              	@ -std=gnu99 -falign-functions=16 -fno-inline -fomit-frame-pointer
  30              	@ -fverbose-asm -ffunction-sections -fdata-sections
  31              	@ options enabled:  -fauto-inc-dec -fbranch-count-reg -fcaller-saves
  32              	@ -fcombine-stack-adjustments -fcommon -fcompare-elim -fcprop-registers
  33              	@ -fcrossjumping -fcse-follow-jumps -fdata-sections -fdebug-types-section
  34              	@ -fdefer-pop -fdelete-null-pointer-checks -fdevirtualize -fdwarf2-cfi-asm
  35              	@ -fearly-inlining -feliminate-unused-debug-types -fexpensive-optimizations
  36              	@ -fforward-propagate -ffunction-cse -ffunction-sections -fgcse -fgcse-lm
  37              	@ -fgnu-runtime -fguess-branch-probability -fident -fif-conversion
  38              	@ -fif-conversion2 -findirect-inlining -finline-atomics -finline-functions
  39              	@ -finline-functions-called-once -finline-small-functions -fipa-cp
  40              	@ -fipa-profile -fipa-pure-const -fipa-reference -fipa-sra
  41              	@ -fira-share-save-slots -fira-share-spill-slots -fivopts
  42              	@ -fkeep-static-consts -fleading-underscore -fmath-errno -fmerge-constants
  43              	@ -fmerge-debug-strings -fomit-frame-pointer -foptimize-register-move
  44              	@ -foptimize-sibling-calls -fpartial-inlining -fpeephole -fpeephole2
  45              	@ -fprefetch-loop-arrays -freg-struct-return -fregmove -frename-registers
  46              	@ -freorder-blocks -freorder-functions -frerun-cse-after-loop
  47              	@ -fsched-critical-path-heuristic -fsched-dep-count-heuristic
  48              	@ -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
  49              	@ -fsched-rank-heuristic -fsched-spec -fsched-spec-insn-heuristic
  50              	@ -fsched-stalled-insns-dep -fschedule-insns2 -fsection-anchors
  51              	@ -fshow-column -fshrink-wrap -fsigned-zeros -fsplit-ivs-in-unroller
  52              	@ -fsplit-wide-types -fstrict-aliasing -fstrict-overflow
  53              	@ -fstrict-volatile-bitfields -fthread-jumps -ftoplevel-reorder
  54              	@ -ftrapping-math -ftree-bit-ccp -ftree-builtin-call-dce -ftree-ccp
  55              	@ -ftree-ch -ftree-copy-prop -ftree-copyrename -ftree-cselim -ftree-dce
  56              	@ -ftree-dominator-opts -ftree-dse -ftree-forwprop -ftree-fre
  57              	@ -ftree-loop-if-convert -ftree-loop-im -ftree-loop-ivcanon
ARM GAS  /tmp/ccV8CS10.s 			page 2


  58              	@ -ftree-loop-optimize -ftree-parallelize-loops= -ftree-phiprop -ftree-pre
  59              	@ -ftree-pta -ftree-reassoc -ftree-scev-cprop -ftree-sink
  60              	@ -ftree-slp-vectorize -ftree-sra -ftree-switch-conversion
  61              	@ -ftree-tail-merge -ftree-ter -ftree-vect-loop-version -ftree-vrp
  62              	@ -funit-at-a-time -funroll-loops -fvar-tracking -fvar-tracking-assignments
  63              	@ -fverbose-asm -fweb -fzero-initialized-in-bss -mlittle-endian
  64              	@ -msched-prolog -mthumb -munaligned-access -mvectorize-with-neon-quad
  65              	
  66              		.text
  67              	.Ltext0:
  68              		.cfi_sections	.debug_frame
  69              		.section	.text.SetSysClock,"ax",%progbits
  70              		.align	1
  71              		.thumb
  72              		.thumb_func
  73              		.type	SetSysClock, %function
  74              	SetSysClock:
  75              	.LFB112:
  76              		.file 1 "system_stm32f4xx.c"
   1:system_stm32f4xx.c **** /**
   2:system_stm32f4xx.c ****   ******************************************************************************
   3:system_stm32f4xx.c ****   * @file    system_stm32f4xx.c
   4:system_stm32f4xx.c ****   * @author  MCD Application Team
   5:system_stm32f4xx.c ****   * @version V1.1.0
   6:system_stm32f4xx.c ****   * @date    19-March-2012
   7:system_stm32f4xx.c ****   * @brief   CMSIS Cortex-M4 Device Peripheral Access Layer System Source File.
   8:system_stm32f4xx.c ****   *          This file contains the system clock configuration for STM32F4xx devices,
   9:system_stm32f4xx.c ****   *          and is generated by the clock configuration tool
  10:system_stm32f4xx.c ****   *          stm32f4xx_Clock_Configuration_V1.0.0.xls
  11:system_stm32f4xx.c ****   *             
  12:system_stm32f4xx.c ****   * 1.  This file provides two functions and one global variable to be called from 
  13:system_stm32f4xx.c ****   *     user application:
  14:system_stm32f4xx.c ****   *      - SystemInit(): Setups the system clock (System clock source, PLL Multiplier
  15:system_stm32f4xx.c ****   *                      and Divider factors, AHB/APBx prescalers and Flash settings),
  16:system_stm32f4xx.c ****   *                      depending on the configuration made in the clock xls tool. 
  17:system_stm32f4xx.c ****   *                      This function is called at startup just after reset and 
  18:system_stm32f4xx.c ****   *                      before branch to main program. This call is made inside
  19:system_stm32f4xx.c ****   *                      the "startup_stm32f4xx.s" file.
  20:system_stm32f4xx.c ****   *
  21:system_stm32f4xx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  22:system_stm32f4xx.c ****   *                                  by the user application to setup the SysTick 
  23:system_stm32f4xx.c ****   *                                  timer or configure other parameters.
  24:system_stm32f4xx.c ****   *                                     
  25:system_stm32f4xx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  26:system_stm32f4xx.c ****   *                                 be called whenever the core clock is changed
  27:system_stm32f4xx.c ****   *                                 during program execution.
  28:system_stm32f4xx.c ****   *
  29:system_stm32f4xx.c ****   * 2. After each device reset the HSI (16 MHz) is used as system clock source.
  30:system_stm32f4xx.c ****   *    Then SystemInit() function is called, in "startup_stm32f4xx.s" file, to
  31:system_stm32f4xx.c ****   *    configure the system clock before to branch to main program.
  32:system_stm32f4xx.c ****   *
  33:system_stm32f4xx.c ****   * 3. If the system clock source selected by user fails to startup, the SystemInit()
  34:system_stm32f4xx.c ****   *    function will do nothing and HSI still used as system clock source. User can 
  35:system_stm32f4xx.c ****   *    add some code to deal with this issue inside the SetSysClock() function.
  36:system_stm32f4xx.c ****   *
  37:system_stm32f4xx.c ****   * 4. The default value of HSE crystal is set to 8 MHz, refer to "HSE_VALUE" define
  38:system_stm32f4xx.c ****   *    in "stm32f4xx.h" file. When HSE is used as system clock source, directly or
ARM GAS  /tmp/ccV8CS10.s 			page 3


  39:system_stm32f4xx.c ****   *    through PLL, and you are using different crystal you have to adapt the HSE
  40:system_stm32f4xx.c ****   *    value to your own configuration.
  41:system_stm32f4xx.c ****   *
  42:system_stm32f4xx.c ****   * 5. This file configures the system clock as follows:
  43:system_stm32f4xx.c ****   *=============================================================================
  44:system_stm32f4xx.c ****   *=============================================================================
  45:system_stm32f4xx.c ****   *        Supported STM32F4xx device revision    | Rev A
  46:system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  47:system_stm32f4xx.c ****   *        System Clock source                    | PLL (HSE)
  48:system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  49:system_stm32f4xx.c ****   *        SYSCLK(Hz)                             | 168000000
  50:system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  51:system_stm32f4xx.c ****   *        HCLK(Hz)                               | 168000000
  52:system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  53:system_stm32f4xx.c ****   *        AHB Prescaler                          | 1
  54:system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  55:system_stm32f4xx.c ****   *        APB1 Prescaler                         | 4
  56:system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  57:system_stm32f4xx.c ****   *        APB2 Prescaler                         | 2
  58:system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  59:system_stm32f4xx.c ****   *        HSE Frequency(Hz)                      | 8000000
  60:system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  61:system_stm32f4xx.c ****   *        PLL_M                                  | 8
  62:system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  63:system_stm32f4xx.c ****   *        PLL_N                                  | 240
  64:system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  65:system_stm32f4xx.c ****   *        PLL_P                                  | 2
  66:system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  67:system_stm32f4xx.c ****   *        PLL_Q                                  | 5
  68:system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  69:system_stm32f4xx.c ****   *        PLLI2S_N                               | 192
  70:system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  71:system_stm32f4xx.c ****   *        PLLI2S_R                               | 5
  72:system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  73:system_stm32f4xx.c ****   *        I2S input clock(Hz)                    | 38400000
  74:system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  75:system_stm32f4xx.c ****   *        VDD(V)                                 | 3.3
  76:system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  77:system_stm32f4xx.c ****   *        High Performance mode                  | Enabled
  78:system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  79:system_stm32f4xx.c ****   *        Flash Latency(WS)                      | 5
  80:system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  81:system_stm32f4xx.c ****   *        Prefetch Buffer                        | OFF
  82:system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  83:system_stm32f4xx.c ****   *        Instruction cache                      | ON
  84:system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  85:system_stm32f4xx.c ****   *        Data cache                             | ON
  86:system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  87:system_stm32f4xx.c ****   *        Require 48MHz for USB OTG FS,          | Enabled
  88:system_stm32f4xx.c ****   *        SDIO and RNG clock                     |
  89:system_stm32f4xx.c ****   *-----------------------------------------------------------------------------
  90:system_stm32f4xx.c ****   *=============================================================================
  91:system_stm32f4xx.c ****   ****************************************************************************** 
  92:system_stm32f4xx.c ****   * @attention
  93:system_stm32f4xx.c ****   *
  94:system_stm32f4xx.c ****   * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
  95:system_stm32f4xx.c ****   *
ARM GAS  /tmp/ccV8CS10.s 			page 4


  96:system_stm32f4xx.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  97:system_stm32f4xx.c ****   * You may not use this file except in compliance with the License.
  98:system_stm32f4xx.c ****   * You may obtain a copy of the License at:
  99:system_stm32f4xx.c ****   *
 100:system_stm32f4xx.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
 101:system_stm32f4xx.c ****   *
 102:system_stm32f4xx.c ****   * Unless required by applicable law or agreed to in writing, software
 103:system_stm32f4xx.c ****   * distributed under the License is distributed on an "AS IS" BASIS,
 104:system_stm32f4xx.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 105:system_stm32f4xx.c ****   * See the License for the specific language governing permissions and
 106:system_stm32f4xx.c ****   * limitations under the License.
 107:system_stm32f4xx.c ****   *
 108:system_stm32f4xx.c ****   ******************************************************************************
 109:system_stm32f4xx.c ****   */
 110:system_stm32f4xx.c **** 
 111:system_stm32f4xx.c **** /** @addtogroup CMSIS
 112:system_stm32f4xx.c ****   * @{
 113:system_stm32f4xx.c ****   */
 114:system_stm32f4xx.c **** 
 115:system_stm32f4xx.c **** /** @addtogroup stm32f4xx_system
 116:system_stm32f4xx.c ****   * @{
 117:system_stm32f4xx.c ****   */  
 118:system_stm32f4xx.c ****   
 119:system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Includes
 120:system_stm32f4xx.c ****   * @{
 121:system_stm32f4xx.c ****   */
 122:system_stm32f4xx.c **** 
 123:system_stm32f4xx.c **** #include "stm32f4xx.h"
 124:system_stm32f4xx.c **** 
 125:system_stm32f4xx.c **** /**
 126:system_stm32f4xx.c ****   * @}
 127:system_stm32f4xx.c ****   */
 128:system_stm32f4xx.c **** 
 129:system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_TypesDefinitions
 130:system_stm32f4xx.c ****   * @{
 131:system_stm32f4xx.c ****   */
 132:system_stm32f4xx.c **** 
 133:system_stm32f4xx.c **** /**
 134:system_stm32f4xx.c ****   * @}
 135:system_stm32f4xx.c ****   */
 136:system_stm32f4xx.c **** 
 137:system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Defines
 138:system_stm32f4xx.c ****   * @{
 139:system_stm32f4xx.c ****   */
 140:system_stm32f4xx.c **** 
 141:system_stm32f4xx.c **** /************************* Miscellaneous Configuration ************************/
 142:system_stm32f4xx.c **** /*!< Uncomment the following line if you need to use external SRAM mounted
 143:system_stm32f4xx.c ****      on STM324xG_EVAL board as data memory  */
 144:system_stm32f4xx.c **** /* #define DATA_IN_ExtSRAM */
 145:system_stm32f4xx.c **** 
 146:system_stm32f4xx.c **** /*!< Uncomment the following line if you need to relocate your vector Table in
 147:system_stm32f4xx.c ****      Internal SRAM. */
 148:system_stm32f4xx.c **** /* #define VECT_TAB_SRAM */
 149:system_stm32f4xx.c **** #define VECT_TAB_OFFSET  0x00 /*!< Vector Table base offset field. 
 150:system_stm32f4xx.c ****                                    This value must be a multiple of 0x200. */
 151:system_stm32f4xx.c **** /******************************************************************************/
 152:system_stm32f4xx.c **** 
ARM GAS  /tmp/ccV8CS10.s 			page 5


 153:system_stm32f4xx.c **** /************************* PLL Parameters *************************************/
 154:system_stm32f4xx.c **** /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLL_M) * PLL_N */
 155:system_stm32f4xx.c **** #define PLL_M      8
 156:system_stm32f4xx.c **** #define PLL_N      240
 157:system_stm32f4xx.c **** 
 158:system_stm32f4xx.c **** /* SYSCLK = PLL_VCO / PLL_P */
 159:system_stm32f4xx.c **** #define PLL_P      2
 160:system_stm32f4xx.c **** 
 161:system_stm32f4xx.c **** /* USB OTG FS, SDIO and RNG Clock =  PLL_VCO / PLLQ */
 162:system_stm32f4xx.c **** #define PLL_Q      5
 163:system_stm32f4xx.c **** 
 164:system_stm32f4xx.c **** /* PLLI2S_VCO = (HSE_VALUE Or HSI_VALUE / PLL_M) * PLLI2S_N
 165:system_stm32f4xx.c ****    I2SCLK = PLLI2S_VCO / PLLI2S_R */
 166:system_stm32f4xx.c **** #define PLLI2S_N   192
 167:system_stm32f4xx.c **** #define PLLI2S_R   5
 168:system_stm32f4xx.c **** 
 169:system_stm32f4xx.c **** /******************************************************************************/
 170:system_stm32f4xx.c **** 
 171:system_stm32f4xx.c **** /**
 172:system_stm32f4xx.c ****   * @}
 173:system_stm32f4xx.c ****   */
 174:system_stm32f4xx.c **** 
 175:system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Macros
 176:system_stm32f4xx.c ****   * @{
 177:system_stm32f4xx.c ****   */
 178:system_stm32f4xx.c **** 
 179:system_stm32f4xx.c **** /**
 180:system_stm32f4xx.c ****   * @}
 181:system_stm32f4xx.c ****   */
 182:system_stm32f4xx.c **** 
 183:system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Variables
 184:system_stm32f4xx.c ****   * @{
 185:system_stm32f4xx.c ****   */
 186:system_stm32f4xx.c **** 
 187:system_stm32f4xx.c ****   uint32_t SystemCoreClock = 120000000;
 188:system_stm32f4xx.c **** 
 189:system_stm32f4xx.c ****   __I uint8_t AHBPrescTable[16] = {0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 6, 7, 8, 9};
 190:system_stm32f4xx.c **** 
 191:system_stm32f4xx.c **** /**
 192:system_stm32f4xx.c ****   * @}
 193:system_stm32f4xx.c ****   */
 194:system_stm32f4xx.c **** 
 195:system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_FunctionPrototypes
 196:system_stm32f4xx.c ****   * @{
 197:system_stm32f4xx.c ****   */
 198:system_stm32f4xx.c **** 
 199:system_stm32f4xx.c **** static void SetSysClock(void);
 200:system_stm32f4xx.c **** #ifdef DATA_IN_ExtSRAM
 201:system_stm32f4xx.c ****   static void SystemInit_ExtMemCtl(void); 
 202:system_stm32f4xx.c **** #endif /* DATA_IN_ExtSRAM */
 203:system_stm32f4xx.c **** 
 204:system_stm32f4xx.c **** /**
 205:system_stm32f4xx.c ****   * @}
 206:system_stm32f4xx.c ****   */
 207:system_stm32f4xx.c **** 
 208:system_stm32f4xx.c **** /** @addtogroup STM32F4xx_System_Private_Functions
 209:system_stm32f4xx.c ****   * @{
ARM GAS  /tmp/ccV8CS10.s 			page 6


 210:system_stm32f4xx.c ****   */
 211:system_stm32f4xx.c **** 
 212:system_stm32f4xx.c **** /**
 213:system_stm32f4xx.c ****   * @brief  Setup the microcontroller system
 214:system_stm32f4xx.c ****   *         Initialize the Embedded Flash Interface, the PLL and update the 
 215:system_stm32f4xx.c ****   *         SystemFrequency variable.
 216:system_stm32f4xx.c ****   * @param  None
 217:system_stm32f4xx.c ****   * @retval None
 218:system_stm32f4xx.c ****   */
 219:system_stm32f4xx.c **** void SystemInit(void)
 220:system_stm32f4xx.c **** {
 221:system_stm32f4xx.c ****   /* FPU settings ------------------------------------------------------------*/
 222:system_stm32f4xx.c ****   #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 223:system_stm32f4xx.c ****     SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 224:system_stm32f4xx.c ****   #endif
 225:system_stm32f4xx.c **** 
 226:system_stm32f4xx.c ****   /* Reset the RCC clock configuration to the default reset state ------------*/
 227:system_stm32f4xx.c ****   /* Set HSION bit */
 228:system_stm32f4xx.c ****   RCC->CR |= (uint32_t)0x00000001;
 229:system_stm32f4xx.c **** 
 230:system_stm32f4xx.c ****   /* Reset CFGR register */
 231:system_stm32f4xx.c ****   RCC->CFGR = 0x00000000;
 232:system_stm32f4xx.c **** 
 233:system_stm32f4xx.c ****   /* Reset HSEON, CSSON and PLLON bits */
 234:system_stm32f4xx.c ****   RCC->CR &= (uint32_t)0xFEF6FFFF;
 235:system_stm32f4xx.c **** 
 236:system_stm32f4xx.c ****   /* Reset PLLCFGR register */
 237:system_stm32f4xx.c ****   RCC->PLLCFGR = 0x24003010;
 238:system_stm32f4xx.c **** 
 239:system_stm32f4xx.c ****   /* Reset HSEBYP bit */
 240:system_stm32f4xx.c ****   RCC->CR &= (uint32_t)0xFFFBFFFF;
 241:system_stm32f4xx.c **** 
 242:system_stm32f4xx.c ****   /* Disable all interrupts */
 243:system_stm32f4xx.c ****   RCC->CIR = 0x00000000;
 244:system_stm32f4xx.c **** 
 245:system_stm32f4xx.c **** #ifdef DATA_IN_ExtSRAM
 246:system_stm32f4xx.c ****   SystemInit_ExtMemCtl(); 
 247:system_stm32f4xx.c **** #endif /* DATA_IN_ExtSRAM */
 248:system_stm32f4xx.c ****          
 249:system_stm32f4xx.c ****   /* Configure the System clock source, PLL Multiplier and Divider factors, 
 250:system_stm32f4xx.c ****      AHB/APBx prescalers and Flash settings ----------------------------------*/
 251:system_stm32f4xx.c ****   SetSysClock();
 252:system_stm32f4xx.c **** 
 253:system_stm32f4xx.c ****   /* Configure the Vector Table location add offset address ------------------*/
 254:system_stm32f4xx.c **** #ifdef VECT_TAB_SRAM
 255:system_stm32f4xx.c ****   SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
 256:system_stm32f4xx.c **** #else
 257:system_stm32f4xx.c ****   SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 258:system_stm32f4xx.c **** #endif
 259:system_stm32f4xx.c **** }
 260:system_stm32f4xx.c **** 
 261:system_stm32f4xx.c **** /**
 262:system_stm32f4xx.c ****    * @brief  Update SystemCoreClock variable according to Clock Register Values.
 263:system_stm32f4xx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 264:system_stm32f4xx.c ****   *         be used by the user application to setup the SysTick timer or configure
 265:system_stm32f4xx.c ****   *         other parameters.
 266:system_stm32f4xx.c ****   *           
ARM GAS  /tmp/ccV8CS10.s 			page 7


 267:system_stm32f4xx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 268:system_stm32f4xx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 269:system_stm32f4xx.c ****   *         based on this variable will be incorrect.         
 270:system_stm32f4xx.c ****   *     
 271:system_stm32f4xx.c ****   * @note   - The system frequency computed by this function is not the real 
 272:system_stm32f4xx.c ****   *           frequency in the chip. It is calculated based on the predefined 
 273:system_stm32f4xx.c ****   *           constant and the selected clock source:
 274:system_stm32f4xx.c ****   *             
 275:system_stm32f4xx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(*)
 276:system_stm32f4xx.c ****   *                                              
 277:system_stm32f4xx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(**)
 278:system_stm32f4xx.c ****   *                          
 279:system_stm32f4xx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(**) 
 280:system_stm32f4xx.c ****   *             or HSI_VALUE(*) multiplied/divided by the PLL factors.
 281:system_stm32f4xx.c ****   *         
 282:system_stm32f4xx.c ****   *         (*) HSI_VALUE is a constant defined in stm32f4xx.h file (default value
 283:system_stm32f4xx.c ****   *             16 MHz) but the real value may vary depending on the variations
 284:system_stm32f4xx.c ****   *             in voltage and temperature.   
 285:system_stm32f4xx.c ****   *    
 286:system_stm32f4xx.c ****   *         (**) HSE_VALUE is a constant defined in stm32f4xx.h file (default value
 287:system_stm32f4xx.c ****   *              25 MHz), user has to ensure that HSE_VALUE is same as the real
 288:system_stm32f4xx.c ****   *              frequency of the crystal used. Otherwise, this function may
 289:system_stm32f4xx.c ****   *              have wrong result.
 290:system_stm32f4xx.c ****   *                
 291:system_stm32f4xx.c ****   *         - The result of this function could be not correct when using fractional
 292:system_stm32f4xx.c ****   *           value for HSE crystal.
 293:system_stm32f4xx.c ****   *     
 294:system_stm32f4xx.c ****   * @param  None
 295:system_stm32f4xx.c ****   * @retval None
 296:system_stm32f4xx.c ****   */
 297:system_stm32f4xx.c **** void SystemCoreClockUpdate(void)
 298:system_stm32f4xx.c **** {
 299:system_stm32f4xx.c ****   uint32_t tmp = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;
 300:system_stm32f4xx.c ****   
 301:system_stm32f4xx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 302:system_stm32f4xx.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
 303:system_stm32f4xx.c **** 
 304:system_stm32f4xx.c ****   switch (tmp)
 305:system_stm32f4xx.c ****   {
 306:system_stm32f4xx.c ****     case 0x00:  /* HSI used as system clock source */
 307:system_stm32f4xx.c ****       SystemCoreClock = HSI_VALUE;
 308:system_stm32f4xx.c ****       break;
 309:system_stm32f4xx.c ****     case 0x04:  /* HSE used as system clock source */
 310:system_stm32f4xx.c ****       SystemCoreClock = HSE_VALUE;
 311:system_stm32f4xx.c ****       break;
 312:system_stm32f4xx.c ****     case 0x08:  /* PLL used as system clock source */
 313:system_stm32f4xx.c **** 
 314:system_stm32f4xx.c ****       /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLL_M) * PLL_N
 315:system_stm32f4xx.c ****          SYSCLK = PLL_VCO / PLL_P
 316:system_stm32f4xx.c ****          */    
 317:system_stm32f4xx.c ****       pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
 318:system_stm32f4xx.c ****       pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 319:system_stm32f4xx.c ****       
 320:system_stm32f4xx.c ****       if (pllsource != 0)
 321:system_stm32f4xx.c ****       {
 322:system_stm32f4xx.c ****         /* HSE used as PLL clock source */
 323:system_stm32f4xx.c ****         pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
ARM GAS  /tmp/ccV8CS10.s 			page 8


 324:system_stm32f4xx.c ****       }
 325:system_stm32f4xx.c ****       else
 326:system_stm32f4xx.c ****       {
 327:system_stm32f4xx.c ****         /* HSI used as PLL clock source */
 328:system_stm32f4xx.c ****         pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);      
 329:system_stm32f4xx.c ****       }
 330:system_stm32f4xx.c **** 
 331:system_stm32f4xx.c ****       pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
 332:system_stm32f4xx.c ****       SystemCoreClock = pllvco/pllp;
 333:system_stm32f4xx.c ****       break;
 334:system_stm32f4xx.c ****     default:
 335:system_stm32f4xx.c ****       SystemCoreClock = HSI_VALUE;
 336:system_stm32f4xx.c ****       break;
 337:system_stm32f4xx.c ****   }
 338:system_stm32f4xx.c ****   /* Compute HCLK frequency --------------------------------------------------*/
 339:system_stm32f4xx.c ****   /* Get HCLK prescaler */
 340:system_stm32f4xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 341:system_stm32f4xx.c ****   /* HCLK frequency */
 342:system_stm32f4xx.c ****   SystemCoreClock >>= tmp;
 343:system_stm32f4xx.c **** }
 344:system_stm32f4xx.c **** 
 345:system_stm32f4xx.c **** /**
 346:system_stm32f4xx.c ****   * @brief  Configures the System clock source, PLL Multiplier and Divider factors, 
 347:system_stm32f4xx.c ****   *         AHB/APBx prescalers and Flash settings
 348:system_stm32f4xx.c ****   * @Note   This function should be called only once the RCC clock configuration  
 349:system_stm32f4xx.c ****   *         is reset to the default reset state (done in SystemInit() function).   
 350:system_stm32f4xx.c ****   * @param  None
 351:system_stm32f4xx.c ****   * @retval None
 352:system_stm32f4xx.c ****   */
 353:system_stm32f4xx.c **** static void SetSysClock(void)
 354:system_stm32f4xx.c **** {
  77              		.loc 1 354 0
  78              		.cfi_startproc
  79              		@ args = 0, pretend = 0, frame = 8
  80              		@ frame_needed = 0, uses_anonymous_args = 0
  81              		@ link register save eliminated.
  82 0000 82B0     		sub	sp, sp, #8	@,,
  83              	.LCFI0:
  84              		.cfi_def_cfa_offset 8
 355:system_stm32f4xx.c **** /******************************************************************************/
 356:system_stm32f4xx.c **** /*            PLL (clocked by HSE) used as System clock source                */
 357:system_stm32f4xx.c **** /******************************************************************************/
 358:system_stm32f4xx.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
  85              		.loc 1 358 0
  86 0002 0023     		movs	r3, #0	@ tmp170,
 359:system_stm32f4xx.c ****   
 360:system_stm32f4xx.c ****   /* Enable HSE */
 361:system_stm32f4xx.c ****   RCC->CR |= ((uint32_t)RCC_CR_HSEON);
  87              		.loc 1 361 0
  88 0004 3048     		ldr	r0, .L22	@ tmp172,
 358:system_stm32f4xx.c ****   __IO uint32_t StartUpCounter = 0, HSEStatus = 0;
  89              		.loc 1 358 0
  90 0006 0093     		str	r3, [sp, #0]	@ tmp170, StartUpCounter
  91              	.LVL0:
  92 0008 0193     		str	r3, [sp, #4]	@ tmp170, HSEStatus
  93              	.LVL1:
  94              		.loc 1 361 0
ARM GAS  /tmp/ccV8CS10.s 			page 9


  95 000a 0268     		ldr	r2, [r0, #0]	@ D.5984, MEM[(struct RCC_TypeDef *)1073887232B].CR
  96 000c 42F48031 		orr	r1, r2, #65536	@ D.5985, D.5984,
  97 0010 0160     		str	r1, [r0, #0]	@ D.5985, MEM[(struct RCC_TypeDef *)1073887232B].CR
  98              	.L3:
 362:system_stm32f4xx.c ****  
 363:system_stm32f4xx.c ****   /* Wait till HSE is ready and if Time out is reached exit */
 364:system_stm32f4xx.c ****   do
 365:system_stm32f4xx.c ****   {
 366:system_stm32f4xx.c ****     HSEStatus = RCC->CR & RCC_CR_HSERDY;
  99              		.loc 1 366 0 discriminator 1
 100 0012 2D4B     		ldr	r3, .L22	@ tmp174,
 101 0014 1868     		ldr	r0, [r3, #0]	@ D.5986, MEM[(struct RCC_TypeDef *)1073887232B].CR
 102 0016 00F40032 		and	r2, r0, #131072	@ HSEStatus.4, D.5986,
 103              	.LVL2:
 104 001a 0192     		str	r2, [sp, #4]	@ HSEStatus.4, HSEStatus
 105              	.LVL3:
 367:system_stm32f4xx.c ****     StartUpCounter++;
 106              		.loc 1 367 0 discriminator 1
 107 001c 0099     		ldr	r1, [sp, #0]	@ StartUpCounter.5, StartUpCounter
 108 001e 481C     		adds	r0, r1, #1	@ StartUpCounter.6, StartUpCounter.5,
 109              	.LVL4:
 110 0020 0090     		str	r0, [sp, #0]	@ StartUpCounter.6, StartUpCounter
 111              	.LVL5:
 368:system_stm32f4xx.c ****   } while((HSEStatus == 0) && (StartUpCounter != HSE_STARTUP_TIMEOUT));
 112              		.loc 1 368 0 discriminator 1
 113 0022 019A     		ldr	r2, [sp, #4]	@ HSEStatus.7, HSEStatus
 114              	.LVL6:
 115 0024 1AB9     		cbnz	r2, .L2	@ HSEStatus.7,
 116 0026 0099     		ldr	r1, [sp, #0]	@ StartUpCounter.8, StartUpCounter
 117 0028 B1F5A06F 		cmp	r1, #1280	@ StartUpCounter.8,
 118 002c F1D1     		bne	.L3	@,
 119              	.L2:
 369:system_stm32f4xx.c **** 
 370:system_stm32f4xx.c ****   if ((RCC->CR & RCC_CR_HSERDY) != RESET)
 120              		.loc 1 370 0
 121 002e 1B68     		ldr	r3, [r3, #0]	@ D.5993, MEM[(struct RCC_TypeDef *)1073887232B].CR
 122 0030 13F40030 		ands	r0, r3, #131072	@ tmp176, D.5993,
 371:system_stm32f4xx.c ****   {
 372:system_stm32f4xx.c ****     HSEStatus = (uint32_t)0x01;
 123              		.loc 1 372 0
 124 0034 18BF     		it	ne
 125 0036 0120     		movne	r0, #1	@ tmp177,
 373:system_stm32f4xx.c ****   }
 374:system_stm32f4xx.c ****   else
 375:system_stm32f4xx.c ****   {
 376:system_stm32f4xx.c ****     HSEStatus = (uint32_t)0x00;
 126              		.loc 1 376 0
 127 0038 0190     		str	r0, [sp, #4]	@ tmp176, HSEStatus
 377:system_stm32f4xx.c ****   }
 378:system_stm32f4xx.c **** 
 379:system_stm32f4xx.c ****   if (HSEStatus == (uint32_t)0x01)
 128              		.loc 1 379 0
 129 003a 019A     		ldr	r2, [sp, #4]	@ HSEStatus.9, HSEStatus
 130 003c 012A     		cmp	r2, #1	@ HSEStatus.9,
 131 003e 0CD0     		beq	.L6	@,
 132              	.L10:
 380:system_stm32f4xx.c ****   {
ARM GAS  /tmp/ccV8CS10.s 			page 10


 381:system_stm32f4xx.c ****     /* Enable high performance mode, System frequency up to 168 MHz */
 382:system_stm32f4xx.c ****     RCC->APB1ENR |= RCC_APB1ENR_PWREN;
 383:system_stm32f4xx.c ****     PWR->CR |= PWR_CR_PMODE;  
 384:system_stm32f4xx.c **** 
 385:system_stm32f4xx.c ****     /* HCLK = SYSCLK / 1*/
 386:system_stm32f4xx.c ****     RCC->CFGR |= RCC_CFGR_HPRE_DIV1;
 387:system_stm32f4xx.c ****       
 388:system_stm32f4xx.c ****     /* PCLK2 = HCLK / 2*/
 389:system_stm32f4xx.c ****     RCC->CFGR |= RCC_CFGR_PPRE2_DIV2;
 390:system_stm32f4xx.c ****     
 391:system_stm32f4xx.c ****     /* PCLK1 = HCLK / 4*/
 392:system_stm32f4xx.c ****     RCC->CFGR |= RCC_CFGR_PPRE1_DIV4;
 393:system_stm32f4xx.c **** 
 394:system_stm32f4xx.c ****     /* Configure the main PLL */
 395:system_stm32f4xx.c ****     RCC->PLLCFGR = PLL_M | (PLL_N << 6) | (((PLL_P >> 1) -1) << 16) |
 396:system_stm32f4xx.c ****                    (RCC_PLLCFGR_PLLSRC_HSE) | (PLL_Q << 24);
 397:system_stm32f4xx.c **** 
 398:system_stm32f4xx.c ****     /* Enable the main PLL */
 399:system_stm32f4xx.c ****     RCC->CR |= RCC_CR_PLLON;
 400:system_stm32f4xx.c **** 
 401:system_stm32f4xx.c ****     /* Wait till the main PLL is ready */
 402:system_stm32f4xx.c ****     while((RCC->CR & RCC_CR_PLLRDY) == 0)
 403:system_stm32f4xx.c ****     {
 404:system_stm32f4xx.c ****     }
 405:system_stm32f4xx.c ****    
 406:system_stm32f4xx.c ****     /* Configure Flash prefetch, Instruction cache, Data cache and wait state */
 407:system_stm32f4xx.c ****     FLASH->ACR = FLASH_ACR_ICEN |FLASH_ACR_DCEN |FLASH_ACR_LATENCY_5WS;
 408:system_stm32f4xx.c **** 
 409:system_stm32f4xx.c ****     /* Select the main PLL as system clock source */
 410:system_stm32f4xx.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 411:system_stm32f4xx.c ****     RCC->CFGR |= RCC_CFGR_SW_PLL;
 412:system_stm32f4xx.c **** 
 413:system_stm32f4xx.c ****     /* Wait till the main PLL is used as system clock source */
 414:system_stm32f4xx.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS ) != RCC_CFGR_SWS_PLL);
 415:system_stm32f4xx.c ****     {
 416:system_stm32f4xx.c ****     }
 417:system_stm32f4xx.c ****   }
 418:system_stm32f4xx.c ****   else
 419:system_stm32f4xx.c ****   { /* If HSE fails to start-up, the application will have wrong clock
 420:system_stm32f4xx.c ****          configuration. User can add here some code to deal with this error */
 421:system_stm32f4xx.c ****   }
 422:system_stm32f4xx.c **** 
 423:system_stm32f4xx.c **** /******************************************************************************/
 424:system_stm32f4xx.c **** /*                        I2S clock configuration                             */
 425:system_stm32f4xx.c **** /******************************************************************************/
 426:system_stm32f4xx.c ****   /* PLLI2S clock used as I2S clock source */
 427:system_stm32f4xx.c ****   RCC->CFGR &= ~RCC_CFGR_I2SSRC;
 133              		.loc 1 427 0
 134 0040 2148     		ldr	r0, .L22	@ tmp179,
 428:system_stm32f4xx.c **** 
 429:system_stm32f4xx.c ****   /* Configure PLLI2S */
 430:system_stm32f4xx.c ****   RCC->PLLI2SCFGR = (PLLI2S_N << 6) | (PLLI2S_R << 28);
 135              		.loc 1 430 0
 136 0042 224B     		ldr	r3, .L22+4	@ tmp182,
 427:system_stm32f4xx.c ****   RCC->CFGR &= ~RCC_CFGR_I2SSRC;
 137              		.loc 1 427 0
 138 0044 8268     		ldr	r2, [r0, #8]	@ D.6023, MEM[(struct RCC_TypeDef *)1073887232B].CFGR
ARM GAS  /tmp/ccV8CS10.s 			page 11


 139 0046 22F40001 		bic	r1, r2, #8388608	@ D.6024, D.6023,
 140 004a 8160     		str	r1, [r0, #8]	@ D.6024, MEM[(struct RCC_TypeDef *)1073887232B].CFGR
 141              		.loc 1 430 0
 142 004c C0F88430 		str	r3, [r0, #132]	@ tmp182, MEM[(struct RCC_TypeDef *)1073887232B].PLLI2SCFGR
 431:system_stm32f4xx.c **** 
 432:system_stm32f4xx.c ****   /* Enable PLLI2S */
 433:system_stm32f4xx.c ****   RCC->CR |= ((uint32_t)RCC_CR_PLLI2SON);
 143              		.loc 1 433 0
 144 0050 0268     		ldr	r2, [r0, #0]	@ D.6025, MEM[(struct RCC_TypeDef *)1073887232B].CR
 145 0052 42F08061 		orr	r1, r2, #67108864	@ D.6026, D.6025,
 146 0056 0160     		str	r1, [r0, #0]	@ D.6026, MEM[(struct RCC_TypeDef *)1073887232B].CR
 434:system_stm32f4xx.c **** 
 435:system_stm32f4xx.c ****   /* Wait till PLLI2S is ready */
 436:system_stm32f4xx.c ****   while((RCC->CR & RCC_CR_PLLI2SRDY) == 0)
 147              		.loc 1 436 0
 148 0058 30E0     		b	.L7	@
 149              	.L6:
 382:system_stm32f4xx.c ****     RCC->APB1ENR |= RCC_APB1ENR_PWREN;
 150              		.loc 1 382 0
 151 005a 1B4B     		ldr	r3, .L22	@ tmp185,
 383:system_stm32f4xx.c ****     PWR->CR |= PWR_CR_PMODE;  
 152              		.loc 1 383 0
 153 005c 1C4A     		ldr	r2, .L22+8	@ tmp187,
 382:system_stm32f4xx.c ****     RCC->APB1ENR |= RCC_APB1ENR_PWREN;
 154              		.loc 1 382 0
 155 005e 196C     		ldr	r1, [r3, #64]	@ D.6001, MEM[(struct RCC_TypeDef *)1073887232B].APB1ENR
 156 0060 41F08050 		orr	r0, r1, #268435456	@ D.6002, D.6001,
 157 0064 1864     		str	r0, [r3, #64]	@ D.6002, MEM[(struct RCC_TypeDef *)1073887232B].APB1ENR
 383:system_stm32f4xx.c ****     PWR->CR |= PWR_CR_PMODE;  
 158              		.loc 1 383 0
 159 0066 1168     		ldr	r1, [r2, #0]	@ D.6004, MEM[(struct PWR_TypeDef *)1073770496B].CR
 160 0068 41F48040 		orr	r0, r1, #16384	@ D.6005, D.6004,
 161 006c 1060     		str	r0, [r2, #0]	@ D.6005, MEM[(struct PWR_TypeDef *)1073770496B].CR
 386:system_stm32f4xx.c ****     RCC->CFGR |= RCC_CFGR_HPRE_DIV1;
 162              		.loc 1 386 0
 163 006e 9A68     		ldr	r2, [r3, #8]	@ D.6006, MEM[(struct RCC_TypeDef *)1073887232B].CFGR
 164 0070 9A60     		str	r2, [r3, #8]	@ D.6006, MEM[(struct RCC_TypeDef *)1073887232B].CFGR
 389:system_stm32f4xx.c ****     RCC->CFGR |= RCC_CFGR_PPRE2_DIV2;
 165              		.loc 1 389 0
 166 0072 9968     		ldr	r1, [r3, #8]	@ D.6007, MEM[(struct RCC_TypeDef *)1073887232B].CFGR
 167 0074 41F40040 		orr	r0, r1, #32768	@ D.6008, D.6007,
 168 0078 9860     		str	r0, [r3, #8]	@ D.6008, MEM[(struct RCC_TypeDef *)1073887232B].CFGR
 392:system_stm32f4xx.c ****     RCC->CFGR |= RCC_CFGR_PPRE1_DIV4;
 169              		.loc 1 392 0
 170 007a 9A68     		ldr	r2, [r3, #8]	@ D.6009, MEM[(struct RCC_TypeDef *)1073887232B].CFGR
 395:system_stm32f4xx.c ****     RCC->PLLCFGR = PLL_M | (PLL_N << 6) | (((PLL_P >> 1) -1) << 16) |
 171              		.loc 1 395 0
 172 007c 1548     		ldr	r0, .L22+12	@ tmp196,
 392:system_stm32f4xx.c ****     RCC->CFGR |= RCC_CFGR_PPRE1_DIV4;
 173              		.loc 1 392 0
 174 007e 42F4A051 		orr	r1, r2, #5120	@ D.6010, D.6009,
 175 0082 9960     		str	r1, [r3, #8]	@ D.6010, MEM[(struct RCC_TypeDef *)1073887232B].CFGR
 395:system_stm32f4xx.c ****     RCC->PLLCFGR = PLL_M | (PLL_N << 6) | (((PLL_P >> 1) -1) << 16) |
 176              		.loc 1 395 0
 177 0084 5860     		str	r0, [r3, #4]	@ tmp196, MEM[(struct RCC_TypeDef *)1073887232B].PLLCFGR
 399:system_stm32f4xx.c ****     RCC->CR |= RCC_CR_PLLON;
 178              		.loc 1 399 0
ARM GAS  /tmp/ccV8CS10.s 			page 12


 179 0086 1A68     		ldr	r2, [r3, #0]	@ D.6011, MEM[(struct RCC_TypeDef *)1073887232B].CR
 180 0088 42F08071 		orr	r1, r2, #16777216	@ D.6012, D.6011,
 181 008c 1960     		str	r1, [r3, #0]	@ D.6012, MEM[(struct RCC_TypeDef *)1073887232B].CR
 182              	.L8:
 402:system_stm32f4xx.c ****     while((RCC->CR & RCC_CR_PLLRDY) == 0)
 183              		.loc 1 402 0 discriminator 1
 184 008e 1A68     		ldr	r2, [r3, #0]	@ D.6013, MEM[(struct RCC_TypeDef *)1073887232B].CR
 185 0090 0D48     		ldr	r0, .L22	@ tmp199,
 186 0092 9101     		lsls	r1, r2, #6	@, D.6013,
 187 0094 FBD5     		bpl	.L8	@,
 407:system_stm32f4xx.c ****     FLASH->ACR = FLASH_ACR_ICEN |FLASH_ACR_DCEN |FLASH_ACR_LATENCY_5WS;
 188              		.loc 1 407 0
 189 0096 104B     		ldr	r3, .L22+16	@ tmp201,
 190 0098 40F20561 		movw	r1, #1541	@ tmp202,
 191 009c 1960     		str	r1, [r3, #0]	@ tmp202, MEM[(struct FLASH_TypeDef *)1073888256B].ACR
 410:system_stm32f4xx.c ****     RCC->CFGR &= (uint32_t)((uint32_t)~(RCC_CFGR_SW));
 192              		.loc 1 410 0
 193 009e 8268     		ldr	r2, [r0, #8]	@ D.6016, MEM[(struct RCC_TypeDef *)1073887232B].CFGR
 194 00a0 22F00301 		bic	r1, r2, #3	@ D.6017, D.6016,
 195 00a4 8160     		str	r1, [r0, #8]	@ D.6017, MEM[(struct RCC_TypeDef *)1073887232B].CFGR
 411:system_stm32f4xx.c ****     RCC->CFGR |= RCC_CFGR_SW_PLL;
 196              		.loc 1 411 0
 197 00a6 8368     		ldr	r3, [r0, #8]	@ D.6018, MEM[(struct RCC_TypeDef *)1073887232B].CFGR
 198 00a8 43F00202 		orr	r2, r3, #2	@ D.6019, D.6018,
 199 00ac 8260     		str	r2, [r0, #8]	@ D.6019, MEM[(struct RCC_TypeDef *)1073887232B].CFGR
 200              	.L9:
 414:system_stm32f4xx.c ****     while ((RCC->CFGR & (uint32_t)RCC_CFGR_SWS ) != RCC_CFGR_SWS_PLL);
 201              		.loc 1 414 0 discriminator 1
 202 00ae 0648     		ldr	r0, .L22	@ tmp207,
 203 00b0 8168     		ldr	r1, [r0, #8]	@ D.6020, MEM[(struct RCC_TypeDef *)1073887232B].CFGR
 204 00b2 01F00C03 		and	r3, r1, #12	@ tmp208, D.6020,
 205 00b6 082B     		cmp	r3, #8	@ tmp208,
 206 00b8 F9D1     		bne	.L9	@,
 207 00ba C1E7     		b	.L10	@
 208              	.L7:
 209              		.loc 1 436 0 discriminator 1
 210 00bc 0368     		ldr	r3, [r0, #0]	@ D.6027, MEM[(struct RCC_TypeDef *)1073887232B].CR
 211 00be 1A01     		lsls	r2, r3, #4	@, D.6027,
 212 00c0 FCD5     		bpl	.L7	@,
 437:system_stm32f4xx.c ****   {
 438:system_stm32f4xx.c ****   }
 439:system_stm32f4xx.c **** }
 213              		.loc 1 439 0
 214 00c2 02B0     		add	sp, sp, #8	@,,
 215 00c4 7047     		bx	lr
 216              	.L23:
 217 00c6 00BF     		.align	2
 218              	.L22:
 219 00c8 00380240 		.word	1073887232
 220 00cc 00300050 		.word	1342189568
 221 00d0 00700040 		.word	1073770496
 222 00d4 083C4005 		.word	88095752
 223 00d8 003C0240 		.word	1073888256
 224              		.cfi_endproc
 225              	.LFE112:
 226              		.size	SetSysClock, .-SetSysClock
 227              		.section	.text.SystemInit,"ax",%progbits
ARM GAS  /tmp/ccV8CS10.s 			page 13


 228              		.align	1
 229              		.global	SystemInit
 230              		.thumb
 231              		.thumb_func
 232              		.type	SystemInit, %function
 233              	SystemInit:
 234              	.LFB110:
 220:system_stm32f4xx.c **** {
 235              		.loc 1 220 0
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 0
 238              		@ frame_needed = 0, uses_anonymous_args = 0
 239 0000 10B5     		push	{r4, lr}	@
 240              	.LCFI1:
 241              		.cfi_def_cfa_offset 8
 242              		.cfi_offset 4, -8
 243              		.cfi_offset 14, -4
 223:system_stm32f4xx.c ****     SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 244              		.loc 1 223 0
 245 0002 104C     		ldr	r4, .L25	@ tmp142,
 246 0004 D4F88830 		ldr	r3, [r4, #136]	@ D.5974, MEM[(struct SCB_Type *)3758157056B].CPACR
 247 0008 43F47000 		orr	r0, r3, #15728640	@ D.5975, D.5974,
 228:system_stm32f4xx.c ****   RCC->CR |= (uint32_t)0x00000001;
 248              		.loc 1 228 0
 249 000c 0E4B     		ldr	r3, .L25+4	@ tmp144,
 223:system_stm32f4xx.c ****     SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 250              		.loc 1 223 0
 251 000e C4F88800 		str	r0, [r4, #136]	@ D.5975, MEM[(struct SCB_Type *)3758157056B].CPACR
 228:system_stm32f4xx.c ****   RCC->CR |= (uint32_t)0x00000001;
 252              		.loc 1 228 0
 253 0012 1A68     		ldr	r2, [r3, #0]	@ D.5977, MEM[(struct RCC_TypeDef *)1073887232B].CR
 231:system_stm32f4xx.c ****   RCC->CFGR = 0x00000000;
 254              		.loc 1 231 0
 255 0014 0020     		movs	r0, #0	@ tmp147,
 228:system_stm32f4xx.c ****   RCC->CR |= (uint32_t)0x00000001;
 256              		.loc 1 228 0
 257 0016 42F00101 		orr	r1, r2, #1	@ D.5978, D.5977,
 258 001a 1960     		str	r1, [r3, #0]	@ D.5978, MEM[(struct RCC_TypeDef *)1073887232B].CR
 231:system_stm32f4xx.c ****   RCC->CFGR = 0x00000000;
 259              		.loc 1 231 0
 260 001c 9860     		str	r0, [r3, #8]	@ tmp147, MEM[(struct RCC_TypeDef *)1073887232B].CFGR
 234:system_stm32f4xx.c ****   RCC->CR &= (uint32_t)0xFEF6FFFF;
 261              		.loc 1 234 0
 262 001e 1A68     		ldr	r2, [r3, #0]	@ D.5979, MEM[(struct RCC_TypeDef *)1073887232B].CR
 263 0020 22F08471 		bic	r1, r2, #17301504	@ tmp149, D.5979,
 264 0024 21F48032 		bic	r2, r1, #65536	@ D.5980, tmp149,
 237:system_stm32f4xx.c ****   RCC->PLLCFGR = 0x24003010;
 265              		.loc 1 237 0
 266 0028 0849     		ldr	r1, .L25+8	@ tmp152,
 234:system_stm32f4xx.c ****   RCC->CR &= (uint32_t)0xFEF6FFFF;
 267              		.loc 1 234 0
 268 002a 1A60     		str	r2, [r3, #0]	@ D.5980, MEM[(struct RCC_TypeDef *)1073887232B].CR
 237:system_stm32f4xx.c ****   RCC->PLLCFGR = 0x24003010;
 269              		.loc 1 237 0
 270 002c 5960     		str	r1, [r3, #4]	@ tmp152, MEM[(struct RCC_TypeDef *)1073887232B].PLLCFGR
 240:system_stm32f4xx.c ****   RCC->CR &= (uint32_t)0xFFFBFFFF;
 271              		.loc 1 240 0
ARM GAS  /tmp/ccV8CS10.s 			page 14


 272 002e 1A68     		ldr	r2, [r3, #0]	@ D.5981, MEM[(struct RCC_TypeDef *)1073887232B].CR
 273 0030 22F48021 		bic	r1, r2, #262144	@ D.5982, D.5981,
 274 0034 1960     		str	r1, [r3, #0]	@ D.5982, MEM[(struct RCC_TypeDef *)1073887232B].CR
 243:system_stm32f4xx.c ****   RCC->CIR = 0x00000000;
 275              		.loc 1 243 0
 276 0036 D860     		str	r0, [r3, #12]	@ tmp147, MEM[(struct RCC_TypeDef *)1073887232B].CIR
 251:system_stm32f4xx.c ****   SetSysClock();
 277              		.loc 1 251 0
 278 0038 FFF7FEFF 		bl	SetSysClock	@
 279              	.LVL7:
 257:system_stm32f4xx.c ****   SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 280              		.loc 1 257 0
 281 003c 4FF00063 		mov	r3, #134217728	@ tmp158,
 282 0040 A360     		str	r3, [r4, #8]	@ tmp158, MEM[(struct SCB_Type *)3758157056B].VTOR
 283 0042 10BD     		pop	{r4, pc}	@
 284              	.L26:
 285              		.align	2
 286              	.L25:
 287 0044 00ED00E0 		.word	-536810240
 288 0048 00380240 		.word	1073887232
 289 004c 10300024 		.word	603992080
 290              		.cfi_endproc
 291              	.LFE110:
 292              		.size	SystemInit, .-SystemInit
 293              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
 294              		.align	1
 295              		.global	SystemCoreClockUpdate
 296              		.thumb
 297              		.thumb_func
 298              		.type	SystemCoreClockUpdate, %function
 299              	SystemCoreClockUpdate:
 300              	.LFB111:
 298:system_stm32f4xx.c **** {
 301              		.loc 1 298 0
 302              		.cfi_startproc
 303              		@ args = 0, pretend = 0, frame = 0
 304              		@ frame_needed = 0, uses_anonymous_args = 0
 305              		@ link register save eliminated.
 306              	.LVL8:
 302:system_stm32f4xx.c ****   tmp = RCC->CFGR & RCC_CFGR_SWS;
 307              		.loc 1 302 0
 308 0000 184B     		ldr	r3, .L37	@ tmp163,
 309 0002 194A     		ldr	r2, .L37+4	@ tmp206,
 310 0004 9968     		ldr	r1, [r3, #8]	@ D.5946, MEM[(struct RCC_TypeDef *)1073887232B].CFGR
 311              	.LVL9:
 312 0006 01F00C00 		and	r0, r1, #12	@ tmp164, D.5946,
 313              	.LVL10:
 304:system_stm32f4xx.c ****   switch (tmp)
 314              		.loc 1 304 0
 315 000a 0428     		cmp	r0, #4	@ tmp164,
 316 000c 03D0     		beq	.L30	@,
 317 000e 0828     		cmp	r0, #8	@ tmp164,
 318 0010 03D0     		beq	.L31	@,
 319 0012 164B     		ldr	r3, .L37+8	@ tmp207,
 320 0014 19E0     		b	.L36	@
 321              	.L30:
 310:system_stm32f4xx.c ****       SystemCoreClock = HSE_VALUE;
ARM GAS  /tmp/ccV8CS10.s 			page 15


 322              		.loc 1 310 0
 323 0016 164B     		ldr	r3, .L37+12	@ tmp168,
 324 0018 17E0     		b	.L36	@
 325              	.L31:
 317:system_stm32f4xx.c ****       pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
 326              		.loc 1 317 0
 327 001a 5968     		ldr	r1, [r3, #4]	@ D.5947, MEM[(struct RCC_TypeDef *)1073887232B].PLLCFGR
 328              	.LVL11:
 318:system_stm32f4xx.c ****       pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 329              		.loc 1 318 0
 330 001c 5A68     		ldr	r2, [r3, #4]	@ D.5949, MEM[(struct RCC_TypeDef *)1073887232B].PLLCFGR
 320:system_stm32f4xx.c ****       if (pllsource != 0)
 331              		.loc 1 320 0
 332 001e 11F4800F 		tst	r1, #4194304	@ D.5947,
 323:system_stm32f4xx.c ****         pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 333              		.loc 1 323 0
 334 0022 5968     		ldr	r1, [r3, #4]	@ D.5953,
 335              	.LVL12:
 336 0024 14BF     		ite	ne
 337 0026 124B     		ldrne	r3, .L37+12	@ tmp179,
 328:system_stm32f4xx.c ****         pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);      
 338              		.loc 1 328 0
 339 0028 104B     		ldreq	r3, .L37+8	@ tmp186,
 318:system_stm32f4xx.c ****       pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 340              		.loc 1 318 0
 341 002a 02F03F00 		and	r0, r2, #63	@ pllm, D.5949,
 342              	.LVL13:
 328:system_stm32f4xx.c ****         pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);      
 343              		.loc 1 328 0
 344 002e B3FBF0F3 		udiv	r3, r3, r0	@ tmp185, tmp186, pllm
 331:system_stm32f4xx.c ****       pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
 345              		.loc 1 331 0
 346 0032 0C48     		ldr	r0, .L37	@ tmp187,
 347              	.LVL14:
 323:system_stm32f4xx.c ****         pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
 348              		.loc 1 323 0
 349 0034 C1F38812 		ubfx	r2, r1, #6, #9	@ tmp176, D.5953,,
 350              	.LVL15:
 331:system_stm32f4xx.c ****       pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
 351              		.loc 1 331 0
 352 0038 4168     		ldr	r1, [r0, #4]	@ D.5961, MEM[(struct RCC_TypeDef *)1073887232B].PLLCFGR
 328:system_stm32f4xx.c ****         pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);      
 353              		.loc 1 328 0
 354 003a 5343     		muls	r3, r2, r3	@ pllvco, tmp183
 355              	.LVL16:
 331:system_stm32f4xx.c ****       pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
 356              		.loc 1 331 0
 357 003c C1F30142 		ubfx	r2, r1, #16, #2	@ tmp190, D.5961,,
 358 0040 501C     		adds	r0, r2, #1	@ tmp191, tmp190,
 359 0042 4100     		lsls	r1, r0, #1	@ tmp192, tmp191,
 360              	.LVL17:
 332:system_stm32f4xx.c ****       SystemCoreClock = pllvco/pllp;
 361              		.loc 1 332 0
 362 0044 084A     		ldr	r2, .L37+4	@ tmp188,
 363 0046 B3FBF1F3 		udiv	r3, r3, r1	@ tmp193, pllvco, tmp192
 364              	.LVL18:
 365              	.L36:
ARM GAS  /tmp/ccV8CS10.s 			page 16


 340:system_stm32f4xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 366              		.loc 1 340 0
 367 004a 0648     		ldr	r0, .L37	@ tmp196,
 332:system_stm32f4xx.c ****       SystemCoreClock = pllvco/pllp;
 368              		.loc 1 332 0
 369 004c 1360     		str	r3, [r2, #0]	@ tmp193, SystemCoreClock
 340:system_stm32f4xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 370              		.loc 1 340 0
 371 004e 8168     		ldr	r1, [r0, #8]	@ D.5966, MEM[(struct RCC_TypeDef *)1073887232B].CFGR
 372 0050 084A     		ldr	r2, .L37+16	@ tmp198,
 373 0052 C1F30313 		ubfx	r3, r1, #4, #4	@ D.5968, D.5966,,
 342:system_stm32f4xx.c ****   SystemCoreClock >>= tmp;
 374              		.loc 1 342 0
 375 0056 0449     		ldr	r1, .L37+4	@ tmp202,
 340:system_stm32f4xx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
 376              		.loc 1 340 0
 377 0058 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2	@ tmp201, AHBPrescTable
 378              	.LVL19:
 342:system_stm32f4xx.c ****   SystemCoreClock >>= tmp;
 379              		.loc 1 342 0
 380 005a 0B68     		ldr	r3, [r1, #0]	@ SystemCoreClock, SystemCoreClock
 381 005c 23FA00F3 		lsr	r3, r3, r0	@ tmp204, SystemCoreClock, tmp201
 382 0060 0B60     		str	r3, [r1, #0]	@ tmp204, SystemCoreClock
 383 0062 7047     		bx	lr	@
 384              	.L38:
 385              		.align	2
 386              	.L37:
 387 0064 00380240 		.word	1073887232
 388 0068 00000000 		.word	.LANCHOR0
 389 006c 0024F400 		.word	16000000
 390 0070 00127A00 		.word	8000000
 391 0074 00000000 		.word	.LANCHOR1
 392              		.cfi_endproc
 393              	.LFE111:
 394              		.size	SystemCoreClockUpdate, .-SystemCoreClockUpdate
 395              		.global	AHBPrescTable
 396              		.global	SystemCoreClock
 397              		.section	.data.AHBPrescTable,"aw",%progbits
 398              		.set	.LANCHOR1,. + 0
 399              		.type	AHBPrescTable, %object
 400              		.size	AHBPrescTable, 16
 401              	AHBPrescTable:
 402 0000 00       		.byte	0
 403 0001 00       		.byte	0
 404 0002 00       		.byte	0
 405 0003 00       		.byte	0
 406 0004 00       		.byte	0
 407 0005 00       		.byte	0
 408 0006 00       		.byte	0
 409 0007 00       		.byte	0
 410 0008 01       		.byte	1
 411 0009 02       		.byte	2
 412 000a 03       		.byte	3
 413 000b 04       		.byte	4
 414 000c 06       		.byte	6
 415 000d 07       		.byte	7
 416 000e 08       		.byte	8
ARM GAS  /tmp/ccV8CS10.s 			page 17


 417 000f 09       		.byte	9
 418              		.section	.data.SystemCoreClock,"aw",%progbits
 419              		.align	2
 420              		.set	.LANCHOR0,. + 0
 421              		.type	SystemCoreClock, %object
 422              		.size	SystemCoreClock, 4
 423              	SystemCoreClock:
 424 0000 000E2707 		.word	120000000
 425              		.text
 426              	.Letext0:
 427              		.file 2 "/usr/bin/../lib/gcc/arm-none-eabi/4.7.4/../../../../arm-none-eabi/include/stdint.h"
 428              		.file 3 "cmsis/core_cm4.h"
 429              		.file 4 "stm32f4xx.h"
 430              		.section	.debug_info,"",%progbits
 431              	.Ldebug_info0:
 432 0000 09060000 		.4byte	0x609
 433 0004 0200     		.2byte	0x2
 434 0006 00000000 		.4byte	.Ldebug_abbrev0
 435 000a 04       		.byte	0x4
 436 000b 01       		.uleb128 0x1
 437 000c C4010000 		.4byte	.LASF74
 438 0010 01       		.byte	0x1
 439 0011 0D030000 		.4byte	.LASF75
 440 0015 23000000 		.4byte	.LASF76
 441 0019 00000000 		.4byte	.Ldebug_ranges0+0
 442 001d 00000000 		.4byte	0
 443 0021 00000000 		.4byte	0
 444 0025 00000000 		.4byte	.Ldebug_line0
 445 0029 02       		.uleb128 0x2
 446 002a 01       		.byte	0x1
 447 002b 06       		.byte	0x6
 448 002c 8E010000 		.4byte	.LASF0
 449 0030 03       		.uleb128 0x3
 450 0031 BC000000 		.4byte	.LASF3
 451 0035 02       		.byte	0x2
 452 0036 2A       		.byte	0x2a
 453 0037 3B000000 		.4byte	0x3b
 454 003b 02       		.uleb128 0x2
 455 003c 01       		.byte	0x1
 456 003d 08       		.byte	0x8
 457 003e 69010000 		.4byte	.LASF1
 458 0042 02       		.uleb128 0x2
 459 0043 02       		.byte	0x2
 460 0044 05       		.byte	0x5
 461 0045 EC000000 		.4byte	.LASF2
 462 0049 03       		.uleb128 0x3
 463 004a 6A020000 		.4byte	.LASF4
 464 004e 02       		.byte	0x2
 465 004f 36       		.byte	0x36
 466 0050 54000000 		.4byte	0x54
 467 0054 02       		.uleb128 0x2
 468 0055 02       		.byte	0x2
 469 0056 07       		.byte	0x7
 470 0057 46020000 		.4byte	.LASF5
 471 005b 03       		.uleb128 0x3
 472 005c 78020000 		.4byte	.LASF6
 473 0060 02       		.byte	0x2
ARM GAS  /tmp/ccV8CS10.s 			page 18


 474 0061 4F       		.byte	0x4f
 475 0062 66000000 		.4byte	0x66
 476 0066 02       		.uleb128 0x2
 477 0067 04       		.byte	0x4
 478 0068 05       		.byte	0x5
 479 0069 16010000 		.4byte	.LASF7
 480 006d 03       		.uleb128 0x3
 481 006e E3000000 		.4byte	.LASF8
 482 0072 02       		.byte	0x2
 483 0073 50       		.byte	0x50
 484 0074 78000000 		.4byte	0x78
 485 0078 02       		.uleb128 0x2
 486 0079 04       		.byte	0x4
 487 007a 07       		.byte	0x7
 488 007b 0D020000 		.4byte	.LASF9
 489 007f 02       		.uleb128 0x2
 490 0080 08       		.byte	0x8
 491 0081 05       		.byte	0x5
 492 0082 03010000 		.4byte	.LASF10
 493 0086 02       		.uleb128 0x2
 494 0087 08       		.byte	0x8
 495 0088 07       		.byte	0x7
 496 0089 9A010000 		.4byte	.LASF11
 497 008d 04       		.uleb128 0x4
 498 008e 04       		.byte	0x4
 499 008f 05       		.byte	0x5
 500 0090 696E7400 		.ascii	"int\000"
 501 0094 02       		.uleb128 0x2
 502 0095 04       		.byte	0x4
 503 0096 07       		.byte	0x7
 504 0097 B7010000 		.4byte	.LASF12
 505 009b 02       		.uleb128 0x2
 506 009c 04       		.byte	0x4
 507 009d 07       		.byte	0x7
 508 009e 68000000 		.4byte	.LASF13
 509 00a2 05       		.uleb128 0x5
 510 00a3 6D000000 		.4byte	0x6d
 511 00a7 06       		.uleb128 0x6
 512 00a8 8C       		.byte	0x8c
 513 00a9 03       		.byte	0x3
 514 00aa 6101     		.2byte	0x161
 515 00ac ED010000 		.4byte	0x1ed
 516 00b0 07       		.uleb128 0x7
 517 00b1 9D000000 		.4byte	.LASF14
 518 00b5 03       		.byte	0x3
 519 00b6 6301     		.2byte	0x163
 520 00b8 ED010000 		.4byte	0x1ed
 521 00bc 02       		.byte	0x2
 522 00bd 23       		.byte	0x23
 523 00be 00       		.uleb128 0
 524 00bf 07       		.uleb128 0x7
 525 00c0 F6000000 		.4byte	.LASF15
 526 00c4 03       		.byte	0x3
 527 00c5 6401     		.2byte	0x164
 528 00c7 A2000000 		.4byte	0xa2
 529 00cb 02       		.byte	0x2
 530 00cc 23       		.byte	0x23
ARM GAS  /tmp/ccV8CS10.s 			page 19


 531 00cd 04       		.uleb128 0x4
 532 00ce 07       		.uleb128 0x7
 533 00cf 73020000 		.4byte	.LASF16
 534 00d3 03       		.byte	0x3
 535 00d4 6501     		.2byte	0x165
 536 00d6 A2000000 		.4byte	0xa2
 537 00da 02       		.byte	0x2
 538 00db 23       		.byte	0x23
 539 00dc 08       		.uleb128 0x8
 540 00dd 07       		.uleb128 0x7
 541 00de 63010000 		.4byte	.LASF17
 542 00e2 03       		.byte	0x3
 543 00e3 6601     		.2byte	0x166
 544 00e5 A2000000 		.4byte	0xa2
 545 00e9 02       		.byte	0x2
 546 00ea 23       		.byte	0x23
 547 00eb 0C       		.uleb128 0xc
 548 00ec 08       		.uleb128 0x8
 549 00ed 53435200 		.ascii	"SCR\000"
 550 00f1 03       		.byte	0x3
 551 00f2 6701     		.2byte	0x167
 552 00f4 A2000000 		.4byte	0xa2
 553 00f8 02       		.byte	0x2
 554 00f9 23       		.byte	0x23
 555 00fa 10       		.uleb128 0x10
 556 00fb 08       		.uleb128 0x8
 557 00fc 43435200 		.ascii	"CCR\000"
 558 0100 03       		.byte	0x3
 559 0101 6801     		.2byte	0x168
 560 0103 A2000000 		.4byte	0xa2
 561 0107 02       		.byte	0x2
 562 0108 23       		.byte	0x23
 563 0109 14       		.uleb128 0x14
 564 010a 08       		.uleb128 0x8
 565 010b 53485000 		.ascii	"SHP\000"
 566 010f 03       		.byte	0x3
 567 0110 6901     		.2byte	0x169
 568 0112 02020000 		.4byte	0x202
 569 0116 02       		.byte	0x2
 570 0117 23       		.byte	0x23
 571 0118 18       		.uleb128 0x18
 572 0119 07       		.uleb128 0x7
 573 011a B1010000 		.4byte	.LASF18
 574 011e 03       		.byte	0x3
 575 011f 6A01     		.2byte	0x16a
 576 0121 A2000000 		.4byte	0xa2
 577 0125 02       		.byte	0x2
 578 0126 23       		.byte	0x23
 579 0127 24       		.uleb128 0x24
 580 0128 07       		.uleb128 0x7
 581 0129 34010000 		.4byte	.LASF19
 582 012d 03       		.byte	0x3
 583 012e 6B01     		.2byte	0x16b
 584 0130 A2000000 		.4byte	0xa2
 585 0134 02       		.byte	0x2
 586 0135 23       		.byte	0x23
 587 0136 28       		.uleb128 0x28
ARM GAS  /tmp/ccV8CS10.s 			page 20


 588 0137 07       		.uleb128 0x7
 589 0138 9A020000 		.4byte	.LASF20
 590 013c 03       		.byte	0x3
 591 013d 6C01     		.2byte	0x16c
 592 013f A2000000 		.4byte	0xa2
 593 0143 02       		.byte	0x2
 594 0144 23       		.byte	0x23
 595 0145 2C       		.uleb128 0x2c
 596 0146 07       		.uleb128 0x7
 597 0147 85020000 		.4byte	.LASF21
 598 014b 03       		.byte	0x3
 599 014c 6D01     		.2byte	0x16d
 600 014e A2000000 		.4byte	0xa2
 601 0152 02       		.byte	0x2
 602 0153 23       		.byte	0x23
 603 0154 30       		.uleb128 0x30
 604 0155 07       		.uleb128 0x7
 605 0156 35020000 		.4byte	.LASF22
 606 015a 03       		.byte	0x3
 607 015b 6E01     		.2byte	0x16e
 608 015d A2000000 		.4byte	0xa2
 609 0161 02       		.byte	0x2
 610 0162 23       		.byte	0x23
 611 0163 34       		.uleb128 0x34
 612 0164 07       		.uleb128 0x7
 613 0165 11010000 		.4byte	.LASF23
 614 0169 03       		.byte	0x3
 615 016a 6F01     		.2byte	0x16f
 616 016c A2000000 		.4byte	0xa2
 617 0170 02       		.byte	0x2
 618 0171 23       		.byte	0x23
 619 0172 38       		.uleb128 0x38
 620 0173 07       		.uleb128 0x7
 621 0174 20030000 		.4byte	.LASF24
 622 0178 03       		.byte	0x3
 623 0179 7001     		.2byte	0x170
 624 017b A2000000 		.4byte	0xa2
 625 017f 02       		.byte	0x2
 626 0180 23       		.byte	0x23
 627 0181 3C       		.uleb128 0x3c
 628 0182 08       		.uleb128 0x8
 629 0183 50465200 		.ascii	"PFR\000"
 630 0187 03       		.byte	0x3
 631 0188 7101     		.2byte	0x171
 632 018a 17020000 		.4byte	0x217
 633 018e 02       		.byte	0x2
 634 018f 23       		.byte	0x23
 635 0190 40       		.uleb128 0x40
 636 0191 08       		.uleb128 0x8
 637 0192 44465200 		.ascii	"DFR\000"
 638 0196 03       		.byte	0x3
 639 0197 7201     		.2byte	0x172
 640 0199 ED010000 		.4byte	0x1ed
 641 019d 02       		.byte	0x2
 642 019e 23       		.byte	0x23
 643 019f 48       		.uleb128 0x48
 644 01a0 08       		.uleb128 0x8
ARM GAS  /tmp/ccV8CS10.s 			page 21


 645 01a1 41445200 		.ascii	"ADR\000"
 646 01a5 03       		.byte	0x3
 647 01a6 7301     		.2byte	0x173
 648 01a8 ED010000 		.4byte	0x1ed
 649 01ac 02       		.byte	0x2
 650 01ad 23       		.byte	0x23
 651 01ae 4C       		.uleb128 0x4c
 652 01af 07       		.uleb128 0x7
 653 01b0 A9020000 		.4byte	.LASF25
 654 01b4 03       		.byte	0x3
 655 01b5 7401     		.2byte	0x174
 656 01b7 31020000 		.4byte	0x231
 657 01bb 02       		.byte	0x2
 658 01bc 23       		.byte	0x23
 659 01bd 50       		.uleb128 0x50
 660 01be 07       		.uleb128 0x7
 661 01bf 80020000 		.4byte	.LASF26
 662 01c3 03       		.byte	0x3
 663 01c4 7501     		.2byte	0x175
 664 01c6 4B020000 		.4byte	0x24b
 665 01ca 02       		.byte	0x2
 666 01cb 23       		.byte	0x23
 667 01cc 60       		.uleb128 0x60
 668 01cd 07       		.uleb128 0x7
 669 01ce AE020000 		.4byte	.LASF27
 670 01d2 03       		.byte	0x3
 671 01d3 7601     		.2byte	0x176
 672 01d5 3B020000 		.4byte	0x23b
 673 01d9 02       		.byte	0x2
 674 01da 23       		.byte	0x23
 675 01db 74       		.uleb128 0x74
 676 01dc 07       		.uleb128 0x7
 677 01dd 49030000 		.4byte	.LASF28
 678 01e1 03       		.byte	0x3
 679 01e2 7701     		.2byte	0x177
 680 01e4 A2000000 		.4byte	0xa2
 681 01e8 03       		.byte	0x3
 682 01e9 23       		.byte	0x23
 683 01ea 8801     		.uleb128 0x88
 684 01ec 00       		.byte	0
 685 01ed 09       		.uleb128 0x9
 686 01ee A2000000 		.4byte	0xa2
 687 01f2 0A       		.uleb128 0xa
 688 01f3 30000000 		.4byte	0x30
 689 01f7 02020000 		.4byte	0x202
 690 01fb 0B       		.uleb128 0xb
 691 01fc 9B000000 		.4byte	0x9b
 692 0200 0B       		.byte	0xb
 693 0201 00       		.byte	0
 694 0202 05       		.uleb128 0x5
 695 0203 F2010000 		.4byte	0x1f2
 696 0207 0A       		.uleb128 0xa
 697 0208 6D000000 		.4byte	0x6d
 698 020c 17020000 		.4byte	0x217
 699 0210 0B       		.uleb128 0xb
 700 0211 9B000000 		.4byte	0x9b
 701 0215 01       		.byte	0x1
ARM GAS  /tmp/ccV8CS10.s 			page 22


 702 0216 00       		.byte	0
 703 0217 09       		.uleb128 0x9
 704 0218 1C020000 		.4byte	0x21c
 705 021c 05       		.uleb128 0x5
 706 021d 07020000 		.4byte	0x207
 707 0221 0A       		.uleb128 0xa
 708 0222 6D000000 		.4byte	0x6d
 709 0226 31020000 		.4byte	0x231
 710 022a 0B       		.uleb128 0xb
 711 022b 9B000000 		.4byte	0x9b
 712 022f 03       		.byte	0x3
 713 0230 00       		.byte	0
 714 0231 09       		.uleb128 0x9
 715 0232 36020000 		.4byte	0x236
 716 0236 05       		.uleb128 0x5
 717 0237 21020000 		.4byte	0x221
 718 023b 0A       		.uleb128 0xa
 719 023c 6D000000 		.4byte	0x6d
 720 0240 4B020000 		.4byte	0x24b
 721 0244 0B       		.uleb128 0xb
 722 0245 9B000000 		.4byte	0x9b
 723 0249 04       		.byte	0x4
 724 024a 00       		.byte	0
 725 024b 09       		.uleb128 0x9
 726 024c 50020000 		.4byte	0x250
 727 0250 05       		.uleb128 0x5
 728 0251 3B020000 		.4byte	0x23b
 729 0255 0C       		.uleb128 0xc
 730 0256 C4000000 		.4byte	.LASF29
 731 025a 03       		.byte	0x3
 732 025b 7801     		.2byte	0x178
 733 025d A7000000 		.4byte	0xa7
 734 0261 05       		.uleb128 0x5
 735 0262 5B000000 		.4byte	0x5b
 736 0266 0D       		.uleb128 0xd
 737 0267 01       		.byte	0x1
 738 0268 04       		.byte	0x4
 739 0269 1D01     		.2byte	0x11d
 740 026b 7C020000 		.4byte	0x27c
 741 026f 0E       		.uleb128 0xe
 742 0270 FE020000 		.4byte	.LASF30
 743 0274 00       		.sleb128 0
 744 0275 0F       		.uleb128 0xf
 745 0276 53455400 		.ascii	"SET\000"
 746 027a 01       		.sleb128 1
 747 027b 00       		.byte	0
 748 027c 06       		.uleb128 0x6
 749 027d 18       		.byte	0x18
 750 027e 04       		.byte	0x4
 751 027f 4502     		.2byte	0x245
 752 0281 DE020000 		.4byte	0x2de
 753 0285 08       		.uleb128 0x8
 754 0286 41435200 		.ascii	"ACR\000"
 755 028a 04       		.byte	0x4
 756 028b 4702     		.2byte	0x247
 757 028d A2000000 		.4byte	0xa2
 758 0291 02       		.byte	0x2
ARM GAS  /tmp/ccV8CS10.s 			page 23


 759 0292 23       		.byte	0x23
 760 0293 00       		.uleb128 0
 761 0294 07       		.uleb128 0x7
 762 0295 54010000 		.4byte	.LASF31
 763 0299 04       		.byte	0x4
 764 029a 4802     		.2byte	0x248
 765 029c A2000000 		.4byte	0xa2
 766 02a0 02       		.byte	0x2
 767 02a1 23       		.byte	0x23
 768 02a2 04       		.uleb128 0x4
 769 02a3 07       		.uleb128 0x7
 770 02a4 FB000000 		.4byte	.LASF32
 771 02a8 04       		.byte	0x4
 772 02a9 4902     		.2byte	0x249
 773 02ab A2000000 		.4byte	0xa2
 774 02af 02       		.byte	0x2
 775 02b0 23       		.byte	0x23
 776 02b1 08       		.uleb128 0x8
 777 02b2 08       		.uleb128 0x8
 778 02b3 535200   		.ascii	"SR\000"
 779 02b6 04       		.byte	0x4
 780 02b7 4A02     		.2byte	0x24a
 781 02b9 A2000000 		.4byte	0xa2
 782 02bd 02       		.byte	0x2
 783 02be 23       		.byte	0x23
 784 02bf 0C       		.uleb128 0xc
 785 02c0 08       		.uleb128 0x8
 786 02c1 435200   		.ascii	"CR\000"
 787 02c4 04       		.byte	0x4
 788 02c5 4B02     		.2byte	0x24b
 789 02c7 A2000000 		.4byte	0xa2
 790 02cb 02       		.byte	0x2
 791 02cc 23       		.byte	0x23
 792 02cd 10       		.uleb128 0x10
 793 02ce 07       		.uleb128 0x7
 794 02cf 59030000 		.4byte	.LASF33
 795 02d3 04       		.byte	0x4
 796 02d4 4C02     		.2byte	0x24c
 797 02d6 A2000000 		.4byte	0xa2
 798 02da 02       		.byte	0x2
 799 02db 23       		.byte	0x23
 800 02dc 14       		.uleb128 0x14
 801 02dd 00       		.byte	0
 802 02de 0C       		.uleb128 0xc
 803 02df 2E030000 		.4byte	.LASF34
 804 02e3 04       		.byte	0x4
 805 02e4 4D02     		.2byte	0x24d
 806 02e6 7C020000 		.4byte	0x27c
 807 02ea 06       		.uleb128 0x6
 808 02eb 08       		.byte	0x8
 809 02ec 04       		.byte	0x4
 810 02ed D302     		.2byte	0x2d3
 811 02ef 11030000 		.4byte	0x311
 812 02f3 08       		.uleb128 0x8
 813 02f4 435200   		.ascii	"CR\000"
 814 02f7 04       		.byte	0x4
 815 02f8 D502     		.2byte	0x2d5
ARM GAS  /tmp/ccV8CS10.s 			page 24


 816 02fa A2000000 		.4byte	0xa2
 817 02fe 02       		.byte	0x2
 818 02ff 23       		.byte	0x23
 819 0300 00       		.uleb128 0
 820 0301 08       		.uleb128 0x8
 821 0302 43535200 		.ascii	"CSR\000"
 822 0306 04       		.byte	0x4
 823 0307 D602     		.2byte	0x2d6
 824 0309 A2000000 		.4byte	0xa2
 825 030d 02       		.byte	0x2
 826 030e 23       		.byte	0x23
 827 030f 04       		.uleb128 0x4
 828 0310 00       		.byte	0
 829 0311 0C       		.uleb128 0xc
 830 0312 81000000 		.4byte	.LASF35
 831 0316 04       		.byte	0x4
 832 0317 D702     		.2byte	0x2d7
 833 0319 EA020000 		.4byte	0x2ea
 834 031d 06       		.uleb128 0x6
 835 031e 88       		.byte	0x88
 836 031f 04       		.byte	0x4
 837 0320 DD02     		.2byte	0x2dd
 838 0322 EA040000 		.4byte	0x4ea
 839 0326 08       		.uleb128 0x8
 840 0327 435200   		.ascii	"CR\000"
 841 032a 04       		.byte	0x4
 842 032b DF02     		.2byte	0x2df
 843 032d A2000000 		.4byte	0xa2
 844 0331 02       		.byte	0x2
 845 0332 23       		.byte	0x23
 846 0333 00       		.uleb128 0
 847 0334 07       		.uleb128 0x7
 848 0335 0A000000 		.4byte	.LASF36
 849 0339 04       		.byte	0x4
 850 033a E002     		.2byte	0x2e0
 851 033c A2000000 		.4byte	0xa2
 852 0340 02       		.byte	0x2
 853 0341 23       		.byte	0x23
 854 0342 04       		.uleb128 0x4
 855 0343 07       		.uleb128 0x7
 856 0344 AD000000 		.4byte	.LASF37
 857 0348 04       		.byte	0x4
 858 0349 E102     		.2byte	0x2e1
 859 034b A2000000 		.4byte	0xa2
 860 034f 02       		.byte	0x2
 861 0350 23       		.byte	0x23
 862 0351 08       		.uleb128 0x8
 863 0352 08       		.uleb128 0x8
 864 0353 43495200 		.ascii	"CIR\000"
 865 0357 04       		.byte	0x4
 866 0358 E202     		.2byte	0x2e2
 867 035a A2000000 		.4byte	0xa2
 868 035e 02       		.byte	0x2
 869 035f 23       		.byte	0x23
 870 0360 0C       		.uleb128 0xc
 871 0361 07       		.uleb128 0x7
 872 0362 04030000 		.4byte	.LASF38
ARM GAS  /tmp/ccV8CS10.s 			page 25


 873 0366 04       		.byte	0x4
 874 0367 E302     		.2byte	0x2e3
 875 0369 A2000000 		.4byte	0xa2
 876 036d 02       		.byte	0x2
 877 036e 23       		.byte	0x23
 878 036f 10       		.uleb128 0x10
 879 0370 07       		.uleb128 0x7
 880 0371 39010000 		.4byte	.LASF39
 881 0375 04       		.byte	0x4
 882 0376 E402     		.2byte	0x2e4
 883 0378 A2000000 		.4byte	0xa2
 884 037c 02       		.byte	0x2
 885 037d 23       		.byte	0x23
 886 037e 14       		.uleb128 0x14
 887 037f 07       		.uleb128 0x7
 888 0380 25030000 		.4byte	.LASF40
 889 0384 04       		.byte	0x4
 890 0385 E502     		.2byte	0x2e5
 891 0387 A2000000 		.4byte	0xa2
 892 038b 02       		.byte	0x2
 893 038c 23       		.byte	0x23
 894 038d 18       		.uleb128 0x18
 895 038e 07       		.uleb128 0x7
 896 038f AE020000 		.4byte	.LASF27
 897 0393 04       		.byte	0x4
 898 0394 E602     		.2byte	0x2e6
 899 0396 6D000000 		.4byte	0x6d
 900 039a 02       		.byte	0x2
 901 039b 23       		.byte	0x23
 902 039c 1C       		.uleb128 0x1c
 903 039d 07       		.uleb128 0x7
 904 039e 12000000 		.4byte	.LASF41
 905 03a2 04       		.byte	0x4
 906 03a3 E702     		.2byte	0x2e7
 907 03a5 A2000000 		.4byte	0xa2
 908 03a9 02       		.byte	0x2
 909 03aa 23       		.byte	0x23
 910 03ab 20       		.uleb128 0x20
 911 03ac 07       		.uleb128 0x7
 912 03ad 2B010000 		.4byte	.LASF42
 913 03b1 04       		.byte	0x4
 914 03b2 E802     		.2byte	0x2e8
 915 03b4 A2000000 		.4byte	0xa2
 916 03b8 02       		.byte	0x2
 917 03b9 23       		.byte	0x23
 918 03ba 24       		.uleb128 0x24
 919 03bb 07       		.uleb128 0x7
 920 03bc B8020000 		.4byte	.LASF43
 921 03c0 04       		.byte	0x4
 922 03c1 E902     		.2byte	0x2e9
 923 03c3 07020000 		.4byte	0x207
 924 03c7 02       		.byte	0x2
 925 03c8 23       		.byte	0x23
 926 03c9 28       		.uleb128 0x28
 927 03ca 07       		.uleb128 0x7
 928 03cb F6020000 		.4byte	.LASF44
 929 03cf 04       		.byte	0x4
ARM GAS  /tmp/ccV8CS10.s 			page 26


 930 03d0 EA02     		.2byte	0x2ea
 931 03d2 A2000000 		.4byte	0xa2
 932 03d6 02       		.byte	0x2
 933 03d7 23       		.byte	0x23
 934 03d8 30       		.uleb128 0x30
 935 03d9 07       		.uleb128 0x7
 936 03da 1B000000 		.4byte	.LASF45
 937 03de 04       		.byte	0x4
 938 03df EB02     		.2byte	0x2eb
 939 03e1 A2000000 		.4byte	0xa2
 940 03e5 02       		.byte	0x2
 941 03e6 23       		.byte	0x23
 942 03e7 34       		.uleb128 0x34
 943 03e8 07       		.uleb128 0x7
 944 03e9 4C010000 		.4byte	.LASF46
 945 03ed 04       		.byte	0x4
 946 03ee EC02     		.2byte	0x2ec
 947 03f0 A2000000 		.4byte	0xa2
 948 03f4 02       		.byte	0x2
 949 03f5 23       		.byte	0x23
 950 03f6 38       		.uleb128 0x38
 951 03f7 07       		.uleb128 0x7
 952 03f8 C2020000 		.4byte	.LASF47
 953 03fc 04       		.byte	0x4
 954 03fd ED02     		.2byte	0x2ed
 955 03ff 6D000000 		.4byte	0x6d
 956 0403 02       		.byte	0x2
 957 0404 23       		.byte	0x23
 958 0405 3C       		.uleb128 0x3c
 959 0406 07       		.uleb128 0x7
 960 0407 CD000000 		.4byte	.LASF48
 961 040b 04       		.byte	0x4
 962 040c EE02     		.2byte	0x2ee
 963 040e A2000000 		.4byte	0xa2
 964 0412 02       		.byte	0x2
 965 0413 23       		.byte	0x23
 966 0414 40       		.uleb128 0x40
 967 0415 07       		.uleb128 0x7
 968 0416 77010000 		.4byte	.LASF49
 969 041a 04       		.byte	0x4
 970 041b EF02     		.2byte	0x2ef
 971 041d A2000000 		.4byte	0xa2
 972 0421 02       		.byte	0x2
 973 0422 23       		.byte	0x23
 974 0423 44       		.uleb128 0x44
 975 0424 07       		.uleb128 0x7
 976 0425 B2000000 		.4byte	.LASF50
 977 0429 04       		.byte	0x4
 978 042a F002     		.2byte	0x2f0
 979 042c 07020000 		.4byte	0x207
 980 0430 02       		.byte	0x2
 981 0431 23       		.byte	0x23
 982 0432 48       		.uleb128 0x48
 983 0433 07       		.uleb128 0x7
 984 0434 00000000 		.4byte	.LASF51
 985 0438 04       		.byte	0x4
 986 0439 F102     		.2byte	0x2f1
ARM GAS  /tmp/ccV8CS10.s 			page 27


 987 043b A2000000 		.4byte	0xa2
 988 043f 02       		.byte	0x2
 989 0440 23       		.byte	0x23
 990 0441 50       		.uleb128 0x50
 991 0442 07       		.uleb128 0x7
 992 0443 9F020000 		.4byte	.LASF52
 993 0447 04       		.byte	0x4
 994 0448 F202     		.2byte	0x2f2
 995 044a A2000000 		.4byte	0xa2
 996 044e 02       		.byte	0x2
 997 044f 23       		.byte	0x23
 998 0450 54       		.uleb128 0x54
 999 0451 07       		.uleb128 0x7
 1000 0452 A3000000 		.4byte	.LASF53
 1001 0456 04       		.byte	0x4
 1002 0457 F302     		.2byte	0x2f3
 1003 0459 A2000000 		.4byte	0xa2
 1004 045d 02       		.byte	0x2
 1005 045e 23       		.byte	0x23
 1006 045f 58       		.uleb128 0x58
 1007 0460 07       		.uleb128 0x7
 1008 0461 D8020000 		.4byte	.LASF54
 1009 0465 04       		.byte	0x4
 1010 0466 F402     		.2byte	0x2f4
 1011 0468 6D000000 		.4byte	0x6d
 1012 046c 02       		.byte	0x2
 1013 046d 23       		.byte	0x23
 1014 046e 5C       		.uleb128 0x5c
 1015 046f 07       		.uleb128 0x7
 1016 0470 59020000 		.4byte	.LASF55
 1017 0474 04       		.byte	0x4
 1018 0475 F502     		.2byte	0x2f5
 1019 0477 A2000000 		.4byte	0xa2
 1020 047b 02       		.byte	0x2
 1021 047c 23       		.byte	0x23
 1022 047d 60       		.uleb128 0x60
 1023 047e 07       		.uleb128 0x7
 1024 047f 4F030000 		.4byte	.LASF56
 1025 0483 04       		.byte	0x4
 1026 0484 F602     		.2byte	0x2f6
 1027 0486 A2000000 		.4byte	0xa2
 1028 048a 02       		.byte	0x2
 1029 048b 23       		.byte	0x23
 1030 048c 64       		.uleb128 0x64
 1031 048d 07       		.uleb128 0x7
 1032 048e E2020000 		.4byte	.LASF57
 1033 0492 04       		.byte	0x4
 1034 0493 F702     		.2byte	0x2f7
 1035 0495 07020000 		.4byte	0x207
 1036 0499 02       		.byte	0x2
 1037 049a 23       		.byte	0x23
 1038 049b 68       		.uleb128 0x68
 1039 049c 07       		.uleb128 0x7
 1040 049d 71000000 		.4byte	.LASF58
 1041 04a1 04       		.byte	0x4
 1042 04a2 F802     		.2byte	0x2f8
 1043 04a4 A2000000 		.4byte	0xa2
ARM GAS  /tmp/ccV8CS10.s 			page 28


 1044 04a8 02       		.byte	0x2
 1045 04a9 23       		.byte	0x23
 1046 04aa 70       		.uleb128 0x70
 1047 04ab 08       		.uleb128 0x8
 1048 04ac 43535200 		.ascii	"CSR\000"
 1049 04b0 04       		.byte	0x4
 1050 04b1 F902     		.2byte	0x2f9
 1051 04b3 A2000000 		.4byte	0xa2
 1052 04b7 02       		.byte	0x2
 1053 04b8 23       		.byte	0x23
 1054 04b9 74       		.uleb128 0x74
 1055 04ba 07       		.uleb128 0x7
 1056 04bb EC020000 		.4byte	.LASF59
 1057 04bf 04       		.byte	0x4
 1058 04c0 FA02     		.2byte	0x2fa
 1059 04c2 07020000 		.4byte	0x207
 1060 04c6 02       		.byte	0x2
 1061 04c7 23       		.byte	0x23
 1062 04c8 78       		.uleb128 0x78
 1063 04c9 07       		.uleb128 0x7
 1064 04ca 8D000000 		.4byte	.LASF60
 1065 04ce 04       		.byte	0x4
 1066 04cf FB02     		.2byte	0x2fb
 1067 04d1 A2000000 		.4byte	0xa2
 1068 04d5 03       		.byte	0x3
 1069 04d6 23       		.byte	0x23
 1070 04d7 8001     		.uleb128 0x80
 1071 04d9 07       		.uleb128 0x7
 1072 04da 76000000 		.4byte	.LASF61
 1073 04de 04       		.byte	0x4
 1074 04df FC02     		.2byte	0x2fc
 1075 04e1 A2000000 		.4byte	0xa2
 1076 04e5 03       		.byte	0x3
 1077 04e6 23       		.byte	0x23
 1078 04e7 8401     		.uleb128 0x84
 1079 04e9 00       		.byte	0
 1080 04ea 0C       		.uleb128 0xc
 1081 04eb 1F010000 		.4byte	.LASF62
 1082 04ef 04       		.byte	0x4
 1083 04f0 FD02     		.2byte	0x2fd
 1084 04f2 1D030000 		.4byte	0x31d
 1085 04f6 10       		.uleb128 0x10
 1086 04f7 CC020000 		.4byte	.LASF77
 1087 04fb 01       		.byte	0x1
 1088 04fc 6101     		.2byte	0x161
 1089 04fe 01       		.byte	0x1
 1090 04ff 00000000 		.4byte	.LFB112
 1091 0503 DC000000 		.4byte	.LFE112
 1092 0507 00000000 		.4byte	.LLST0
 1093 050b 01       		.byte	0x1
 1094 050c 31050000 		.4byte	0x531
 1095 0510 11       		.uleb128 0x11
 1096 0511 7F010000 		.4byte	.LASF63
 1097 0515 01       		.byte	0x1
 1098 0516 6601     		.2byte	0x166
 1099 0518 A2000000 		.4byte	0xa2
 1100 051c 20000000 		.4byte	.LLST1
ARM GAS  /tmp/ccV8CS10.s 			page 29


 1101 0520 11       		.uleb128 0x11
 1102 0521 93000000 		.4byte	.LASF64
 1103 0525 01       		.byte	0x1
 1104 0526 6601     		.2byte	0x166
 1105 0528 A2000000 		.4byte	0xa2
 1106 052c 3F000000 		.4byte	.LLST2
 1107 0530 00       		.byte	0
 1108 0531 12       		.uleb128 0x12
 1109 0532 01       		.byte	0x1
 1110 0533 3B020000 		.4byte	.LASF65
 1111 0537 01       		.byte	0x1
 1112 0538 DB       		.byte	0xdb
 1113 0539 01       		.byte	0x1
 1114 053a 00000000 		.4byte	.LFB110
 1115 053e 50000000 		.4byte	.LFE110
 1116 0542 6A000000 		.4byte	.LLST3
 1117 0546 01       		.byte	0x1
 1118 0547 55050000 		.4byte	0x555
 1119 054b 13       		.uleb128 0x13
 1120 054c 3C000000 		.4byte	.LVL7
 1121 0550 F6040000 		.4byte	0x4f6
 1122 0554 00       		.byte	0
 1123 0555 14       		.uleb128 0x14
 1124 0556 01       		.byte	0x1
 1125 0557 1F020000 		.4byte	.LASF66
 1126 055b 01       		.byte	0x1
 1127 055c 2901     		.2byte	0x129
 1128 055e 01       		.byte	0x1
 1129 055f 00000000 		.4byte	.LFB111
 1130 0563 78000000 		.4byte	.LFE111
 1131 0567 02       		.byte	0x2
 1132 0568 7D       		.byte	0x7d
 1133 0569 00       		.sleb128 0
 1134 056a 01       		.byte	0x1
 1135 056b C0050000 		.4byte	0x5c0
 1136 056f 15       		.uleb128 0x15
 1137 0570 746D7000 		.ascii	"tmp\000"
 1138 0574 01       		.byte	0x1
 1139 0575 2B01     		.2byte	0x12b
 1140 0577 6D000000 		.4byte	0x6d
 1141 057b 8A000000 		.4byte	.LLST4
 1142 057f 11       		.uleb128 0x11
 1143 0580 63020000 		.4byte	.LASF67
 1144 0584 01       		.byte	0x1
 1145 0585 2B01     		.2byte	0x12b
 1146 0587 6D000000 		.4byte	0x6d
 1147 058b C8000000 		.4byte	.LLST5
 1148 058f 11       		.uleb128 0x11
 1149 0590 5E010000 		.4byte	.LASF68
 1150 0594 01       		.byte	0x1
 1151 0595 2B01     		.2byte	0x12b
 1152 0597 6D000000 		.4byte	0x6d
 1153 059b E7000000 		.4byte	.LLST6
 1154 059f 11       		.uleb128 0x11
 1155 05a0 42010000 		.4byte	.LASF69
 1156 05a4 01       		.byte	0x1
 1157 05a5 2B01     		.2byte	0x12b
ARM GAS  /tmp/ccV8CS10.s 			page 30


 1158 05a7 6D000000 		.4byte	0x6d
 1159 05ab 12010000 		.4byte	.LLST7
 1160 05af 11       		.uleb128 0x11
 1161 05b0 59010000 		.4byte	.LASF70
 1162 05b4 01       		.byte	0x1
 1163 05b5 2B01     		.2byte	0x12b
 1164 05b7 6D000000 		.4byte	0x6d
 1165 05bb 39010000 		.4byte	.LLST8
 1166 05bf 00       		.byte	0
 1167 05c0 16       		.uleb128 0x16
 1168 05c1 3C030000 		.4byte	.LASF71
 1169 05c5 03       		.byte	0x3
 1170 05c6 9806     		.2byte	0x698
 1171 05c8 61020000 		.4byte	0x261
 1172 05cc 01       		.byte	0x1
 1173 05cd 01       		.byte	0x1
 1174 05ce 17       		.uleb128 0x17
 1175 05cf 8A020000 		.4byte	.LASF72
 1176 05d3 01       		.byte	0x1
 1177 05d4 BB       		.byte	0xbb
 1178 05d5 6D000000 		.4byte	0x6d
 1179 05d9 01       		.byte	0x1
 1180 05da 05       		.byte	0x5
 1181 05db 03       		.byte	0x3
 1182 05dc 00000000 		.4byte	SystemCoreClock
 1183 05e0 0A       		.uleb128 0xa
 1184 05e1 30000000 		.4byte	0x30
 1185 05e5 F0050000 		.4byte	0x5f0
 1186 05e9 0B       		.uleb128 0xb
 1187 05ea 9B000000 		.4byte	0x9b
 1188 05ee 0F       		.byte	0xf
 1189 05ef 00       		.byte	0
 1190 05f0 17       		.uleb128 0x17
 1191 05f1 D5000000 		.4byte	.LASF73
 1192 05f5 01       		.byte	0x1
 1193 05f6 BD       		.byte	0xbd
 1194 05f7 02060000 		.4byte	0x602
 1195 05fb 01       		.byte	0x1
 1196 05fc 05       		.byte	0x5
 1197 05fd 03       		.byte	0x3
 1198 05fe 00000000 		.4byte	AHBPrescTable
 1199 0602 09       		.uleb128 0x9
 1200 0603 07060000 		.4byte	0x607
 1201 0607 05       		.uleb128 0x5
 1202 0608 E0050000 		.4byte	0x5e0
 1203 060c 00       		.byte	0
 1204              		.section	.debug_abbrev,"",%progbits
 1205              	.Ldebug_abbrev0:
 1206 0000 01       		.uleb128 0x1
 1207 0001 11       		.uleb128 0x11
 1208 0002 01       		.byte	0x1
 1209 0003 25       		.uleb128 0x25
 1210 0004 0E       		.uleb128 0xe
 1211 0005 13       		.uleb128 0x13
 1212 0006 0B       		.uleb128 0xb
 1213 0007 03       		.uleb128 0x3
 1214 0008 0E       		.uleb128 0xe
ARM GAS  /tmp/ccV8CS10.s 			page 31


 1215 0009 1B       		.uleb128 0x1b
 1216 000a 0E       		.uleb128 0xe
 1217 000b 55       		.uleb128 0x55
 1218 000c 06       		.uleb128 0x6
 1219 000d 11       		.uleb128 0x11
 1220 000e 01       		.uleb128 0x1
 1221 000f 52       		.uleb128 0x52
 1222 0010 01       		.uleb128 0x1
 1223 0011 10       		.uleb128 0x10
 1224 0012 06       		.uleb128 0x6
 1225 0013 00       		.byte	0
 1226 0014 00       		.byte	0
 1227 0015 02       		.uleb128 0x2
 1228 0016 24       		.uleb128 0x24
 1229 0017 00       		.byte	0
 1230 0018 0B       		.uleb128 0xb
 1231 0019 0B       		.uleb128 0xb
 1232 001a 3E       		.uleb128 0x3e
 1233 001b 0B       		.uleb128 0xb
 1234 001c 03       		.uleb128 0x3
 1235 001d 0E       		.uleb128 0xe
 1236 001e 00       		.byte	0
 1237 001f 00       		.byte	0
 1238 0020 03       		.uleb128 0x3
 1239 0021 16       		.uleb128 0x16
 1240 0022 00       		.byte	0
 1241 0023 03       		.uleb128 0x3
 1242 0024 0E       		.uleb128 0xe
 1243 0025 3A       		.uleb128 0x3a
 1244 0026 0B       		.uleb128 0xb
 1245 0027 3B       		.uleb128 0x3b
 1246 0028 0B       		.uleb128 0xb
 1247 0029 49       		.uleb128 0x49
 1248 002a 13       		.uleb128 0x13
 1249 002b 00       		.byte	0
 1250 002c 00       		.byte	0
 1251 002d 04       		.uleb128 0x4
 1252 002e 24       		.uleb128 0x24
 1253 002f 00       		.byte	0
 1254 0030 0B       		.uleb128 0xb
 1255 0031 0B       		.uleb128 0xb
 1256 0032 3E       		.uleb128 0x3e
 1257 0033 0B       		.uleb128 0xb
 1258 0034 03       		.uleb128 0x3
 1259 0035 08       		.uleb128 0x8
 1260 0036 00       		.byte	0
 1261 0037 00       		.byte	0
 1262 0038 05       		.uleb128 0x5
 1263 0039 35       		.uleb128 0x35
 1264 003a 00       		.byte	0
 1265 003b 49       		.uleb128 0x49
 1266 003c 13       		.uleb128 0x13
 1267 003d 00       		.byte	0
 1268 003e 00       		.byte	0
 1269 003f 06       		.uleb128 0x6
 1270 0040 13       		.uleb128 0x13
 1271 0041 01       		.byte	0x1
ARM GAS  /tmp/ccV8CS10.s 			page 32


 1272 0042 0B       		.uleb128 0xb
 1273 0043 0B       		.uleb128 0xb
 1274 0044 3A       		.uleb128 0x3a
 1275 0045 0B       		.uleb128 0xb
 1276 0046 3B       		.uleb128 0x3b
 1277 0047 05       		.uleb128 0x5
 1278 0048 01       		.uleb128 0x1
 1279 0049 13       		.uleb128 0x13
 1280 004a 00       		.byte	0
 1281 004b 00       		.byte	0
 1282 004c 07       		.uleb128 0x7
 1283 004d 0D       		.uleb128 0xd
 1284 004e 00       		.byte	0
 1285 004f 03       		.uleb128 0x3
 1286 0050 0E       		.uleb128 0xe
 1287 0051 3A       		.uleb128 0x3a
 1288 0052 0B       		.uleb128 0xb
 1289 0053 3B       		.uleb128 0x3b
 1290 0054 05       		.uleb128 0x5
 1291 0055 49       		.uleb128 0x49
 1292 0056 13       		.uleb128 0x13
 1293 0057 38       		.uleb128 0x38
 1294 0058 0A       		.uleb128 0xa
 1295 0059 00       		.byte	0
 1296 005a 00       		.byte	0
 1297 005b 08       		.uleb128 0x8
 1298 005c 0D       		.uleb128 0xd
 1299 005d 00       		.byte	0
 1300 005e 03       		.uleb128 0x3
 1301 005f 08       		.uleb128 0x8
 1302 0060 3A       		.uleb128 0x3a
 1303 0061 0B       		.uleb128 0xb
 1304 0062 3B       		.uleb128 0x3b
 1305 0063 05       		.uleb128 0x5
 1306 0064 49       		.uleb128 0x49
 1307 0065 13       		.uleb128 0x13
 1308 0066 38       		.uleb128 0x38
 1309 0067 0A       		.uleb128 0xa
 1310 0068 00       		.byte	0
 1311 0069 00       		.byte	0
 1312 006a 09       		.uleb128 0x9
 1313 006b 26       		.uleb128 0x26
 1314 006c 00       		.byte	0
 1315 006d 49       		.uleb128 0x49
 1316 006e 13       		.uleb128 0x13
 1317 006f 00       		.byte	0
 1318 0070 00       		.byte	0
 1319 0071 0A       		.uleb128 0xa
 1320 0072 01       		.uleb128 0x1
 1321 0073 01       		.byte	0x1
 1322 0074 49       		.uleb128 0x49
 1323 0075 13       		.uleb128 0x13
 1324 0076 01       		.uleb128 0x1
 1325 0077 13       		.uleb128 0x13
 1326 0078 00       		.byte	0
 1327 0079 00       		.byte	0
 1328 007a 0B       		.uleb128 0xb
ARM GAS  /tmp/ccV8CS10.s 			page 33


 1329 007b 21       		.uleb128 0x21
 1330 007c 00       		.byte	0
 1331 007d 49       		.uleb128 0x49
 1332 007e 13       		.uleb128 0x13
 1333 007f 2F       		.uleb128 0x2f
 1334 0080 0B       		.uleb128 0xb
 1335 0081 00       		.byte	0
 1336 0082 00       		.byte	0
 1337 0083 0C       		.uleb128 0xc
 1338 0084 16       		.uleb128 0x16
 1339 0085 00       		.byte	0
 1340 0086 03       		.uleb128 0x3
 1341 0087 0E       		.uleb128 0xe
 1342 0088 3A       		.uleb128 0x3a
 1343 0089 0B       		.uleb128 0xb
 1344 008a 3B       		.uleb128 0x3b
 1345 008b 05       		.uleb128 0x5
 1346 008c 49       		.uleb128 0x49
 1347 008d 13       		.uleb128 0x13
 1348 008e 00       		.byte	0
 1349 008f 00       		.byte	0
 1350 0090 0D       		.uleb128 0xd
 1351 0091 04       		.uleb128 0x4
 1352 0092 01       		.byte	0x1
 1353 0093 0B       		.uleb128 0xb
 1354 0094 0B       		.uleb128 0xb
 1355 0095 3A       		.uleb128 0x3a
 1356 0096 0B       		.uleb128 0xb
 1357 0097 3B       		.uleb128 0x3b
 1358 0098 05       		.uleb128 0x5
 1359 0099 01       		.uleb128 0x1
 1360 009a 13       		.uleb128 0x13
 1361 009b 00       		.byte	0
 1362 009c 00       		.byte	0
 1363 009d 0E       		.uleb128 0xe
 1364 009e 28       		.uleb128 0x28
 1365 009f 00       		.byte	0
 1366 00a0 03       		.uleb128 0x3
 1367 00a1 0E       		.uleb128 0xe
 1368 00a2 1C       		.uleb128 0x1c
 1369 00a3 0D       		.uleb128 0xd
 1370 00a4 00       		.byte	0
 1371 00a5 00       		.byte	0
 1372 00a6 0F       		.uleb128 0xf
 1373 00a7 28       		.uleb128 0x28
 1374 00a8 00       		.byte	0
 1375 00a9 03       		.uleb128 0x3
 1376 00aa 08       		.uleb128 0x8
 1377 00ab 1C       		.uleb128 0x1c
 1378 00ac 0D       		.uleb128 0xd
 1379 00ad 00       		.byte	0
 1380 00ae 00       		.byte	0
 1381 00af 10       		.uleb128 0x10
 1382 00b0 2E       		.uleb128 0x2e
 1383 00b1 01       		.byte	0x1
 1384 00b2 03       		.uleb128 0x3
 1385 00b3 0E       		.uleb128 0xe
ARM GAS  /tmp/ccV8CS10.s 			page 34


 1386 00b4 3A       		.uleb128 0x3a
 1387 00b5 0B       		.uleb128 0xb
 1388 00b6 3B       		.uleb128 0x3b
 1389 00b7 05       		.uleb128 0x5
 1390 00b8 27       		.uleb128 0x27
 1391 00b9 0C       		.uleb128 0xc
 1392 00ba 11       		.uleb128 0x11
 1393 00bb 01       		.uleb128 0x1
 1394 00bc 12       		.uleb128 0x12
 1395 00bd 01       		.uleb128 0x1
 1396 00be 40       		.uleb128 0x40
 1397 00bf 06       		.uleb128 0x6
 1398 00c0 9742     		.uleb128 0x2117
 1399 00c2 0C       		.uleb128 0xc
 1400 00c3 01       		.uleb128 0x1
 1401 00c4 13       		.uleb128 0x13
 1402 00c5 00       		.byte	0
 1403 00c6 00       		.byte	0
 1404 00c7 11       		.uleb128 0x11
 1405 00c8 34       		.uleb128 0x34
 1406 00c9 00       		.byte	0
 1407 00ca 03       		.uleb128 0x3
 1408 00cb 0E       		.uleb128 0xe
 1409 00cc 3A       		.uleb128 0x3a
 1410 00cd 0B       		.uleb128 0xb
 1411 00ce 3B       		.uleb128 0x3b
 1412 00cf 05       		.uleb128 0x5
 1413 00d0 49       		.uleb128 0x49
 1414 00d1 13       		.uleb128 0x13
 1415 00d2 02       		.uleb128 0x2
 1416 00d3 06       		.uleb128 0x6
 1417 00d4 00       		.byte	0
 1418 00d5 00       		.byte	0
 1419 00d6 12       		.uleb128 0x12
 1420 00d7 2E       		.uleb128 0x2e
 1421 00d8 01       		.byte	0x1
 1422 00d9 3F       		.uleb128 0x3f
 1423 00da 0C       		.uleb128 0xc
 1424 00db 03       		.uleb128 0x3
 1425 00dc 0E       		.uleb128 0xe
 1426 00dd 3A       		.uleb128 0x3a
 1427 00de 0B       		.uleb128 0xb
 1428 00df 3B       		.uleb128 0x3b
 1429 00e0 0B       		.uleb128 0xb
 1430 00e1 27       		.uleb128 0x27
 1431 00e2 0C       		.uleb128 0xc
 1432 00e3 11       		.uleb128 0x11
 1433 00e4 01       		.uleb128 0x1
 1434 00e5 12       		.uleb128 0x12
 1435 00e6 01       		.uleb128 0x1
 1436 00e7 40       		.uleb128 0x40
 1437 00e8 06       		.uleb128 0x6
 1438 00e9 9742     		.uleb128 0x2117
 1439 00eb 0C       		.uleb128 0xc
 1440 00ec 01       		.uleb128 0x1
 1441 00ed 13       		.uleb128 0x13
 1442 00ee 00       		.byte	0
ARM GAS  /tmp/ccV8CS10.s 			page 35


 1443 00ef 00       		.byte	0
 1444 00f0 13       		.uleb128 0x13
 1445 00f1 898201   		.uleb128 0x4109
 1446 00f4 00       		.byte	0
 1447 00f5 11       		.uleb128 0x11
 1448 00f6 01       		.uleb128 0x1
 1449 00f7 31       		.uleb128 0x31
 1450 00f8 13       		.uleb128 0x13
 1451 00f9 00       		.byte	0
 1452 00fa 00       		.byte	0
 1453 00fb 14       		.uleb128 0x14
 1454 00fc 2E       		.uleb128 0x2e
 1455 00fd 01       		.byte	0x1
 1456 00fe 3F       		.uleb128 0x3f
 1457 00ff 0C       		.uleb128 0xc
 1458 0100 03       		.uleb128 0x3
 1459 0101 0E       		.uleb128 0xe
 1460 0102 3A       		.uleb128 0x3a
 1461 0103 0B       		.uleb128 0xb
 1462 0104 3B       		.uleb128 0x3b
 1463 0105 05       		.uleb128 0x5
 1464 0106 27       		.uleb128 0x27
 1465 0107 0C       		.uleb128 0xc
 1466 0108 11       		.uleb128 0x11
 1467 0109 01       		.uleb128 0x1
 1468 010a 12       		.uleb128 0x12
 1469 010b 01       		.uleb128 0x1
 1470 010c 40       		.uleb128 0x40
 1471 010d 0A       		.uleb128 0xa
 1472 010e 9742     		.uleb128 0x2117
 1473 0110 0C       		.uleb128 0xc
 1474 0111 01       		.uleb128 0x1
 1475 0112 13       		.uleb128 0x13
 1476 0113 00       		.byte	0
 1477 0114 00       		.byte	0
 1478 0115 15       		.uleb128 0x15
 1479 0116 34       		.uleb128 0x34
 1480 0117 00       		.byte	0
 1481 0118 03       		.uleb128 0x3
 1482 0119 08       		.uleb128 0x8
 1483 011a 3A       		.uleb128 0x3a
 1484 011b 0B       		.uleb128 0xb
 1485 011c 3B       		.uleb128 0x3b
 1486 011d 05       		.uleb128 0x5
 1487 011e 49       		.uleb128 0x49
 1488 011f 13       		.uleb128 0x13
 1489 0120 02       		.uleb128 0x2
 1490 0121 06       		.uleb128 0x6
 1491 0122 00       		.byte	0
 1492 0123 00       		.byte	0
 1493 0124 16       		.uleb128 0x16
 1494 0125 34       		.uleb128 0x34
 1495 0126 00       		.byte	0
 1496 0127 03       		.uleb128 0x3
 1497 0128 0E       		.uleb128 0xe
 1498 0129 3A       		.uleb128 0x3a
 1499 012a 0B       		.uleb128 0xb
ARM GAS  /tmp/ccV8CS10.s 			page 36


 1500 012b 3B       		.uleb128 0x3b
 1501 012c 05       		.uleb128 0x5
 1502 012d 49       		.uleb128 0x49
 1503 012e 13       		.uleb128 0x13
 1504 012f 3F       		.uleb128 0x3f
 1505 0130 0C       		.uleb128 0xc
 1506 0131 3C       		.uleb128 0x3c
 1507 0132 0C       		.uleb128 0xc
 1508 0133 00       		.byte	0
 1509 0134 00       		.byte	0
 1510 0135 17       		.uleb128 0x17
 1511 0136 34       		.uleb128 0x34
 1512 0137 00       		.byte	0
 1513 0138 03       		.uleb128 0x3
 1514 0139 0E       		.uleb128 0xe
 1515 013a 3A       		.uleb128 0x3a
 1516 013b 0B       		.uleb128 0xb
 1517 013c 3B       		.uleb128 0x3b
 1518 013d 0B       		.uleb128 0xb
 1519 013e 49       		.uleb128 0x49
 1520 013f 13       		.uleb128 0x13
 1521 0140 3F       		.uleb128 0x3f
 1522 0141 0C       		.uleb128 0xc
 1523 0142 02       		.uleb128 0x2
 1524 0143 0A       		.uleb128 0xa
 1525 0144 00       		.byte	0
 1526 0145 00       		.byte	0
 1527 0146 00       		.byte	0
 1528              		.section	.debug_loc,"",%progbits
 1529              	.Ldebug_loc0:
 1530              	.LLST0:
 1531 0000 00000000 		.4byte	.LFB112
 1532 0004 02000000 		.4byte	.LCFI0
 1533 0008 0200     		.2byte	0x2
 1534 000a 7D       		.byte	0x7d
 1535 000b 00       		.sleb128 0
 1536 000c 02000000 		.4byte	.LCFI0
 1537 0010 DC000000 		.4byte	.LFE112
 1538 0014 0200     		.2byte	0x2
 1539 0016 7D       		.byte	0x7d
 1540 0017 08       		.sleb128 8
 1541 0018 00000000 		.4byte	0
 1542 001c 00000000 		.4byte	0
 1543              	.LLST1:
 1544 0020 08000000 		.4byte	.LVL0
 1545 0024 20000000 		.4byte	.LVL4
 1546 0028 0200     		.2byte	0x2
 1547 002a 91       		.byte	0x91
 1548 002b 78       		.sleb128 -8
 1549 002c 22000000 		.4byte	.LVL5
 1550 0030 DC000000 		.4byte	.LFE112
 1551 0034 0100     		.2byte	0x1
 1552 0036 50       		.byte	0x50
 1553 0037 00000000 		.4byte	0
 1554 003b 00000000 		.4byte	0
 1555              	.LLST2:
 1556 003f 0A000000 		.4byte	.LVL1
ARM GAS  /tmp/ccV8CS10.s 			page 37


 1557 0043 1A000000 		.4byte	.LVL2
 1558 0047 0200     		.2byte	0x2
 1559 0049 91       		.byte	0x91
 1560 004a 7C       		.sleb128 -4
 1561 004b 1C000000 		.4byte	.LVL3
 1562 004f 24000000 		.4byte	.LVL6
 1563 0053 0100     		.2byte	0x1
 1564 0055 52       		.byte	0x52
 1565 0056 24000000 		.4byte	.LVL6
 1566 005a DC000000 		.4byte	.LFE112
 1567 005e 0200     		.2byte	0x2
 1568 0060 91       		.byte	0x91
 1569 0061 7C       		.sleb128 -4
 1570 0062 00000000 		.4byte	0
 1571 0066 00000000 		.4byte	0
 1572              	.LLST3:
 1573 006a 00000000 		.4byte	.LFB110
 1574 006e 02000000 		.4byte	.LCFI1
 1575 0072 0200     		.2byte	0x2
 1576 0074 7D       		.byte	0x7d
 1577 0075 00       		.sleb128 0
 1578 0076 02000000 		.4byte	.LCFI1
 1579 007a 50000000 		.4byte	.LFE110
 1580 007e 0200     		.2byte	0x2
 1581 0080 7D       		.byte	0x7d
 1582 0081 08       		.sleb128 8
 1583 0082 00000000 		.4byte	0
 1584 0086 00000000 		.4byte	0
 1585              	.LLST4:
 1586 008a 00000000 		.4byte	.LVL8
 1587 008e 06000000 		.4byte	.LVL9
 1588 0092 0200     		.2byte	0x2
 1589 0094 30       		.byte	0x30
 1590 0095 9F       		.byte	0x9f
 1591 0096 06000000 		.4byte	.LVL9
 1592 009a 0A000000 		.4byte	.LVL10
 1593 009e 0500     		.2byte	0x5
 1594 00a0 71       		.byte	0x71
 1595 00a1 00       		.sleb128 0
 1596 00a2 3C       		.byte	0x3c
 1597 00a3 1A       		.byte	0x1a
 1598 00a4 9F       		.byte	0x9f
 1599 00a5 0A000000 		.4byte	.LVL10
 1600 00a9 2E000000 		.4byte	.LVL13
 1601 00ad 0100     		.2byte	0x1
 1602 00af 50       		.byte	0x50
 1603 00b0 5A000000 		.4byte	.LVL19
 1604 00b4 78000000 		.4byte	.LFE111
 1605 00b8 0600     		.2byte	0x6
 1606 00ba 70       		.byte	0x70
 1607 00bb 00       		.sleb128 0
 1608 00bc 08       		.byte	0x8
 1609 00bd FF       		.byte	0xff
 1610 00be 1A       		.byte	0x1a
 1611 00bf 9F       		.byte	0x9f
 1612 00c0 00000000 		.4byte	0
 1613 00c4 00000000 		.4byte	0
ARM GAS  /tmp/ccV8CS10.s 			page 38


 1614              	.LLST5:
 1615 00c8 00000000 		.4byte	.LVL8
 1616 00cc 3C000000 		.4byte	.LVL16
 1617 00d0 0200     		.2byte	0x2
 1618 00d2 30       		.byte	0x30
 1619 00d3 9F       		.byte	0x9f
 1620 00d4 3C000000 		.4byte	.LVL16
 1621 00d8 4A000000 		.4byte	.LVL18
 1622 00dc 0100     		.2byte	0x1
 1623 00de 53       		.byte	0x53
 1624 00df 00000000 		.4byte	0
 1625 00e3 00000000 		.4byte	0
 1626              	.LLST6:
 1627 00e7 00000000 		.4byte	.LVL8
 1628 00eb 3C000000 		.4byte	.LVL16
 1629 00ef 0200     		.2byte	0x2
 1630 00f1 32       		.byte	0x32
 1631 00f2 9F       		.byte	0x9f
 1632 00f3 3C000000 		.4byte	.LVL16
 1633 00f7 44000000 		.4byte	.LVL17
 1634 00fb 0D00     		.2byte	0xd
 1635 00fd 71       		.byte	0x71
 1636 00fe 00       		.sleb128 0
 1637 00ff 48       		.byte	0x48
 1638 0100 3D       		.byte	0x3d
 1639 0101 24       		.byte	0x24
 1640 0102 1A       		.byte	0x1a
 1641 0103 40       		.byte	0x40
 1642 0104 25       		.byte	0x25
 1643 0105 23       		.byte	0x23
 1644 0106 01       		.uleb128 0x1
 1645 0107 31       		.byte	0x31
 1646 0108 24       		.byte	0x24
 1647 0109 9F       		.byte	0x9f
 1648 010a 00000000 		.4byte	0
 1649 010e 00000000 		.4byte	0
 1650              	.LLST7:
 1651 0112 00000000 		.4byte	.LVL8
 1652 0116 1C000000 		.4byte	.LVL11
 1653 011a 0200     		.2byte	0x2
 1654 011c 30       		.byte	0x30
 1655 011d 9F       		.byte	0x9f
 1656 011e 1C000000 		.4byte	.LVL11
 1657 0122 24000000 		.4byte	.LVL12
 1658 0126 0900     		.2byte	0x9
 1659 0128 71       		.byte	0x71
 1660 0129 00       		.sleb128 0
 1661 012a 40       		.byte	0x40
 1662 012b 42       		.byte	0x42
 1663 012c 24       		.byte	0x24
 1664 012d 1A       		.byte	0x1a
 1665 012e 46       		.byte	0x46
 1666 012f 25       		.byte	0x25
 1667 0130 9F       		.byte	0x9f
 1668 0131 00000000 		.4byte	0
 1669 0135 00000000 		.4byte	0
 1670              	.LLST8:
ARM GAS  /tmp/ccV8CS10.s 			page 39


 1671 0139 00000000 		.4byte	.LVL8
 1672 013d 2E000000 		.4byte	.LVL13
 1673 0141 0200     		.2byte	0x2
 1674 0143 32       		.byte	0x32
 1675 0144 9F       		.byte	0x9f
 1676 0145 2E000000 		.4byte	.LVL13
 1677 0149 34000000 		.4byte	.LVL14
 1678 014d 0100     		.2byte	0x1
 1679 014f 50       		.byte	0x50
 1680 0150 34000000 		.4byte	.LVL14
 1681 0154 38000000 		.4byte	.LVL15
 1682 0158 0600     		.2byte	0x6
 1683 015a 72       		.byte	0x72
 1684 015b 00       		.sleb128 0
 1685 015c 08       		.byte	0x8
 1686 015d 3F       		.byte	0x3f
 1687 015e 1A       		.byte	0x1a
 1688 015f 9F       		.byte	0x9f
 1689 0160 00000000 		.4byte	0
 1690 0164 00000000 		.4byte	0
 1691              		.section	.debug_aranges,"",%progbits
 1692 0000 2C000000 		.4byte	0x2c
 1693 0004 0200     		.2byte	0x2
 1694 0006 00000000 		.4byte	.Ldebug_info0
 1695 000a 04       		.byte	0x4
 1696 000b 00       		.byte	0
 1697 000c 0000     		.2byte	0
 1698 000e 0000     		.2byte	0
 1699 0010 00000000 		.4byte	.LFB112
 1700 0014 DC000000 		.4byte	.LFE112-.LFB112
 1701 0018 00000000 		.4byte	.LFB110
 1702 001c 50000000 		.4byte	.LFE110-.LFB110
 1703 0020 00000000 		.4byte	.LFB111
 1704 0024 78000000 		.4byte	.LFE111-.LFB111
 1705 0028 00000000 		.4byte	0
 1706 002c 00000000 		.4byte	0
 1707              		.section	.debug_ranges,"",%progbits
 1708              	.Ldebug_ranges0:
 1709 0000 00000000 		.4byte	.LFB112
 1710 0004 DC000000 		.4byte	.LFE112
 1711 0008 00000000 		.4byte	.LFB110
 1712 000c 50000000 		.4byte	.LFE110
 1713 0010 00000000 		.4byte	.LFB111
 1714 0014 78000000 		.4byte	.LFE111
 1715 0018 00000000 		.4byte	0
 1716 001c 00000000 		.4byte	0
 1717              		.section	.debug_line,"",%progbits
 1718              	.Ldebug_line0:
 1719 0000 46010000 		.section	.debug_str,"MS",%progbits,1
 1719      0200A200 
 1719      00000201 
 1719      FB0E0D00 
 1719      01010101 
 1720              	.LASF51:
 1721 0000 41484231 		.ascii	"AHB1LPENR\000"
 1721      4C50454E 
 1721      5200
ARM GAS  /tmp/ccV8CS10.s 			page 40


 1722              	.LASF36:
 1723 000a 504C4C43 		.ascii	"PLLCFGR\000"
 1723      46475200 
 1724              	.LASF41:
 1725 0012 41504231 		.ascii	"APB1RSTR\000"
 1725      52535452 
 1725      00
 1726              	.LASF45:
 1727 001b 41484232 		.ascii	"AHB2ENR\000"
 1727      454E5200 
 1728              	.LASF76:
 1729 0023 2F686F6D 		.ascii	"/home/xavier/Documents/Xav/dev/stm32code/bitbox/boo"
 1729      652F7861 
 1729      76696572 
 1729      2F446F63 
 1729      756D656E 
 1730 0056 746C6F61 		.ascii	"tloader/FATFS-DBG\000"
 1730      6465722F 
 1730      46415446 
 1730      532D4442 
 1730      4700
 1731              	.LASF13:
 1732 0068 73697A65 		.ascii	"sizetype\000"
 1732      74797065 
 1732      00
 1733              	.LASF58:
 1734 0071 42444352 		.ascii	"BDCR\000"
 1734      00
 1735              	.LASF61:
 1736 0076 504C4C49 		.ascii	"PLLI2SCFGR\000"
 1736      32534346 
 1736      475200
 1737              	.LASF35:
 1738 0081 5057525F 		.ascii	"PWR_TypeDef\000"
 1738      54797065 
 1738      44656600 
 1739              	.LASF60:
 1740 008d 53534347 		.ascii	"SSCGR\000"
 1740      5200
 1741              	.LASF64:
 1742 0093 48534553 		.ascii	"HSEStatus\000"
 1742      74617475 
 1742      7300
 1743              	.LASF14:
 1744 009d 43505549 		.ascii	"CPUID\000"
 1744      4400
 1745              	.LASF53:
 1746 00a3 41484233 		.ascii	"AHB3LPENR\000"
 1746      4C50454E 
 1746      5200
 1747              	.LASF37:
 1748 00ad 43464752 		.ascii	"CFGR\000"
 1748      00
 1749              	.LASF50:
 1750 00b2 52455345 		.ascii	"RESERVED3\000"
 1750      52564544 
 1750      3300
ARM GAS  /tmp/ccV8CS10.s 			page 41


 1751              	.LASF3:
 1752 00bc 75696E74 		.ascii	"uint8_t\000"
 1752      385F7400 
 1753              	.LASF29:
 1754 00c4 5343425F 		.ascii	"SCB_Type\000"
 1754      54797065 
 1754      00
 1755              	.LASF48:
 1756 00cd 41504231 		.ascii	"APB1ENR\000"
 1756      454E5200 
 1757              	.LASF73:
 1758 00d5 41484250 		.ascii	"AHBPrescTable\000"
 1758      72657363 
 1758      5461626C 
 1758      6500
 1759              	.LASF8:
 1760 00e3 75696E74 		.ascii	"uint32_t\000"
 1760      33325F74 
 1760      00
 1761              	.LASF2:
 1762 00ec 73686F72 		.ascii	"short int\000"
 1762      7420696E 
 1762      7400
 1763              	.LASF15:
 1764 00f6 49435352 		.ascii	"ICSR\000"
 1764      00
 1765              	.LASF32:
 1766 00fb 4F50544B 		.ascii	"OPTKEYR\000"
 1766      45595200 
 1767              	.LASF10:
 1768 0103 6C6F6E67 		.ascii	"long long int\000"
 1768      206C6F6E 
 1768      6720696E 
 1768      7400
 1769              	.LASF23:
 1770 0111 42464152 		.ascii	"BFAR\000"
 1770      00
 1771              	.LASF7:
 1772 0116 6C6F6E67 		.ascii	"long int\000"
 1772      20696E74 
 1772      00
 1773              	.LASF62:
 1774 011f 5243435F 		.ascii	"RCC_TypeDef\000"
 1774      54797065 
 1774      44656600 
 1775              	.LASF42:
 1776 012b 41504232 		.ascii	"APB2RSTR\000"
 1776      52535452 
 1776      00
 1777              	.LASF19:
 1778 0134 43465352 		.ascii	"CFSR\000"
 1778      00
 1779              	.LASF39:
 1780 0139 41484232 		.ascii	"AHB2RSTR\000"
 1780      52535452 
 1780      00
 1781              	.LASF69:
ARM GAS  /tmp/ccV8CS10.s 			page 42


 1782 0142 706C6C73 		.ascii	"pllsource\000"
 1782      6F757263 
 1782      6500
 1783              	.LASF46:
 1784 014c 41484233 		.ascii	"AHB3ENR\000"
 1784      454E5200 
 1785              	.LASF31:
 1786 0154 4B455952 		.ascii	"KEYR\000"
 1786      00
 1787              	.LASF70:
 1788 0159 706C6C6D 		.ascii	"pllm\000"
 1788      00
 1789              	.LASF68:
 1790 015e 706C6C70 		.ascii	"pllp\000"
 1790      00
 1791              	.LASF17:
 1792 0163 41495243 		.ascii	"AIRCR\000"
 1792      5200
 1793              	.LASF1:
 1794 0169 756E7369 		.ascii	"unsigned char\000"
 1794      676E6564 
 1794      20636861 
 1794      7200
 1795              	.LASF49:
 1796 0177 41504232 		.ascii	"APB2ENR\000"
 1796      454E5200 
 1797              	.LASF63:
 1798 017f 53746172 		.ascii	"StartUpCounter\000"
 1798      74557043 
 1798      6F756E74 
 1798      657200
 1799              	.LASF0:
 1800 018e 7369676E 		.ascii	"signed char\000"
 1800      65642063 
 1800      68617200 
 1801              	.LASF11:
 1802 019a 6C6F6E67 		.ascii	"long long unsigned int\000"
 1802      206C6F6E 
 1802      6720756E 
 1802      7369676E 
 1802      65642069 
 1803              	.LASF18:
 1804 01b1 53484353 		.ascii	"SHCSR\000"
 1804      5200
 1805              	.LASF12:
 1806 01b7 756E7369 		.ascii	"unsigned int\000"
 1806      676E6564 
 1806      20696E74 
 1806      00
 1807              	.LASF74:
 1808 01c4 474E5520 		.ascii	"GNU C 4.7.4 20130913 (release) [ARM/embedded-4_7-br"
 1808      4320342E 
 1808      372E3420 
 1808      32303133 
 1808      30393133 
 1809 01f7 616E6368 		.ascii	"anch revision 202601]\000"
 1809      20726576 
ARM GAS  /tmp/ccV8CS10.s 			page 43


 1809      6973696F 
 1809      6E203230 
 1809      32363031 
 1810              	.LASF9:
 1811 020d 6C6F6E67 		.ascii	"long unsigned int\000"
 1811      20756E73 
 1811      69676E65 
 1811      6420696E 
 1811      7400
 1812              	.LASF66:
 1813 021f 53797374 		.ascii	"SystemCoreClockUpdate\000"
 1813      656D436F 
 1813      7265436C 
 1813      6F636B55 
 1813      70646174 
 1814              	.LASF22:
 1815 0235 4D4D4641 		.ascii	"MMFAR\000"
 1815      5200
 1816              	.LASF65:
 1817 023b 53797374 		.ascii	"SystemInit\000"
 1817      656D496E 
 1817      697400
 1818              	.LASF5:
 1819 0246 73686F72 		.ascii	"short unsigned int\000"
 1819      7420756E 
 1819      7369676E 
 1819      65642069 
 1819      6E7400
 1820              	.LASF55:
 1821 0259 41504231 		.ascii	"APB1LPENR\000"
 1821      4C50454E 
 1821      5200
 1822              	.LASF67:
 1823 0263 706C6C76 		.ascii	"pllvco\000"
 1823      636F00
 1824              	.LASF4:
 1825 026a 75696E74 		.ascii	"uint16_t\000"
 1825      31365F74 
 1825      00
 1826              	.LASF16:
 1827 0273 56544F52 		.ascii	"VTOR\000"
 1827      00
 1828              	.LASF6:
 1829 0278 696E7433 		.ascii	"int32_t\000"
 1829      325F7400 
 1830              	.LASF26:
 1831 0280 49534152 		.ascii	"ISAR\000"
 1831      00
 1832              	.LASF21:
 1833 0285 44465352 		.ascii	"DFSR\000"
 1833      00
 1834              	.LASF72:
 1835 028a 53797374 		.ascii	"SystemCoreClock\000"
 1835      656D436F 
 1835      7265436C 
 1835      6F636B00 
 1836              	.LASF20:
ARM GAS  /tmp/ccV8CS10.s 			page 44


 1837 029a 48465352 		.ascii	"HFSR\000"
 1837      00
 1838              	.LASF52:
 1839 029f 41484232 		.ascii	"AHB2LPENR\000"
 1839      4C50454E 
 1839      5200
 1840              	.LASF25:
 1841 02a9 4D4D4652 		.ascii	"MMFR\000"
 1841      00
 1842              	.LASF27:
 1843 02ae 52455345 		.ascii	"RESERVED0\000"
 1843      52564544 
 1843      3000
 1844              	.LASF43:
 1845 02b8 52455345 		.ascii	"RESERVED1\000"
 1845      52564544 
 1845      3100
 1846              	.LASF47:
 1847 02c2 52455345 		.ascii	"RESERVED2\000"
 1847      52564544 
 1847      3200
 1848              	.LASF77:
 1849 02cc 53657453 		.ascii	"SetSysClock\000"
 1849      7973436C 
 1849      6F636B00 
 1850              	.LASF54:
 1851 02d8 52455345 		.ascii	"RESERVED4\000"
 1851      52564544 
 1851      3400
 1852              	.LASF57:
 1853 02e2 52455345 		.ascii	"RESERVED5\000"
 1853      52564544 
 1853      3500
 1854              	.LASF59:
 1855 02ec 52455345 		.ascii	"RESERVED6\000"
 1855      52564544 
 1855      3600
 1856              	.LASF44:
 1857 02f6 41484231 		.ascii	"AHB1ENR\000"
 1857      454E5200 
 1858              	.LASF30:
 1859 02fe 52455345 		.ascii	"RESET\000"
 1859      5400
 1860              	.LASF38:
 1861 0304 41484231 		.ascii	"AHB1RSTR\000"
 1861      52535452 
 1861      00
 1862              	.LASF75:
 1863 030d 73797374 		.ascii	"system_stm32f4xx.c\000"
 1863      656D5F73 
 1863      746D3332 
 1863      66347878 
 1863      2E6300
 1864              	.LASF24:
 1865 0320 41465352 		.ascii	"AFSR\000"
 1865      00
 1866              	.LASF40:
ARM GAS  /tmp/ccV8CS10.s 			page 45


 1867 0325 41484233 		.ascii	"AHB3RSTR\000"
 1867      52535452 
 1867      00
 1868              	.LASF34:
 1869 032e 464C4153 		.ascii	"FLASH_TypeDef\000"
 1869      485F5479 
 1869      70654465 
 1869      6600
 1870              	.LASF71:
 1871 033c 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1871      52784275 
 1871      66666572 
 1871      00
 1872              	.LASF28:
 1873 0349 43504143 		.ascii	"CPACR\000"
 1873      5200
 1874              	.LASF56:
 1875 034f 41504232 		.ascii	"APB2LPENR\000"
 1875      4C50454E 
 1875      5200
 1876              	.LASF33:
 1877 0359 4F505443 		.ascii	"OPTCR\000"
 1877      5200
 1878              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.7.4 20130913 (release) [ARM/embedded-4_7-br
ARM GAS  /tmp/ccV8CS10.s 			page 46


DEFINED SYMBOLS
                            *ABS*:0000000000000000 system_stm32f4xx.c
     /tmp/ccV8CS10.s:70     .text.SetSysClock:0000000000000000 $t
     /tmp/ccV8CS10.s:74     .text.SetSysClock:0000000000000000 SetSysClock
     /tmp/ccV8CS10.s:219    .text.SetSysClock:00000000000000c8 $d
     /tmp/ccV8CS10.s:228    .text.SystemInit:0000000000000000 $t
     /tmp/ccV8CS10.s:233    .text.SystemInit:0000000000000000 SystemInit
     /tmp/ccV8CS10.s:287    .text.SystemInit:0000000000000044 $d
     /tmp/ccV8CS10.s:294    .text.SystemCoreClockUpdate:0000000000000000 $t
     /tmp/ccV8CS10.s:299    .text.SystemCoreClockUpdate:0000000000000000 SystemCoreClockUpdate
     /tmp/ccV8CS10.s:387    .text.SystemCoreClockUpdate:0000000000000064 $d
     /tmp/ccV8CS10.s:401    .data.AHBPrescTable:0000000000000000 AHBPrescTable
     /tmp/ccV8CS10.s:423    .data.SystemCoreClock:0000000000000000 SystemCoreClock
     /tmp/ccV8CS10.s:419    .data.SystemCoreClock:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

NO UNDEFINED SYMBOLS
