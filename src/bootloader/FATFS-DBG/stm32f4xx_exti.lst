ARM GAS  /tmp/ccsCjCvg.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3	@ Tag_ABI_HardFP_use
   4              		.eabi_attribute 28, 1	@ Tag_ABI_VFP_args
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1	@ Tag_ABI_FP_denormal
   7              		.eabi_attribute 21, 1	@ Tag_ABI_FP_exceptions
   8              		.eabi_attribute 23, 3	@ Tag_ABI_FP_number_model
   9              		.eabi_attribute 24, 1	@ Tag_ABI_align8_needed
  10              		.eabi_attribute 25, 1	@ Tag_ABI_align8_preserved
  11              		.eabi_attribute 26, 1	@ Tag_ABI_enum_size
  12              		.eabi_attribute 30, 4	@ Tag_ABI_optimization_goals
  13              		.eabi_attribute 34, 1	@ Tag_CPU_unaligned_access
  14              		.eabi_attribute 18, 4	@ Tag_ABI_PCS_wchar_t
  15              		.file	"stm32f4xx_exti.c"
  16              	@ GNU C (GNU Tools for ARM Embedded Processors) version 4.7.4 20130913 (release) [ARM/embedded-4_7-
  17              	@	compiled by GNU C version 4.7.3, GMP version 5.0.5, MPFR version 3.1.1-p2, MPC version 0.9
  18              	@ GGC heuristics: --param ggc-min-expand=100 --param ggc-min-heapsize=131072
  19              	@ options passed:  -I . -I ../ -I cmsis/ -imultilib armv7e-m/fpu
  20              	@ -iprefix /usr/bin/../lib/gcc/arm-none-eabi/4.7.4/
  21              	@ -isysroot /usr/bin/../arm-none-eabi -MD stm32f4xx_exti.d
  22              	@ -MF .dep/stm32f4xx_exti.o.d -MP -MQ stm32f4xx_exti.o -D__USES_INITFINI__
  23              	@ -D __FPU_USED=1 -D __arm__ -D __ASSEMBLY__ -D USE_STDPERIPH_DRIVER
  24              	@ -D STM32F4XX -D HSE_VALUE=8000000 -D __FPU_PRESENT=1 -D __FPU_USED=1
  25              	@ -D STM32F405VG -D USE_USB_OTG_FS -D RUN_FROM_FLASH=1 stm32f4xx_exti.c
  26              	@ -mthumb -mcpu=cortex-m4 -mfloat-abi=hard -mfpu=fpv4-sp-d16 -mthumb
  27              	@ -auxbase-strip stm32f4xx_exti.o -gdwarf-2 -Os -Wall -Wstrict-prototypes
  28              	@ -std=gnu99 -falign-functions=16 -fno-inline -fomit-frame-pointer
  29              	@ -fverbose-asm -ffunction-sections -fdata-sections
  30              	@ options enabled:  -fauto-inc-dec -fbranch-count-reg -fcaller-saves
  31              	@ -fcombine-stack-adjustments -fcommon -fcompare-elim -fcprop-registers
  32              	@ -fcrossjumping -fcse-follow-jumps -fdata-sections -fdebug-types-section
  33              	@ -fdefer-pop -fdelete-null-pointer-checks -fdevirtualize -fdwarf2-cfi-asm
  34              	@ -fearly-inlining -feliminate-unused-debug-types -fexpensive-optimizations
  35              	@ -fforward-propagate -ffunction-cse -ffunction-sections -fgcse -fgcse-lm
  36              	@ -fgnu-runtime -fguess-branch-probability -fident -fif-conversion
  37              	@ -fif-conversion2 -findirect-inlining -finline-atomics -finline-functions
  38              	@ -finline-functions-called-once -finline-small-functions -fipa-cp
  39              	@ -fipa-profile -fipa-pure-const -fipa-reference -fipa-sra
  40              	@ -fira-share-save-slots -fira-share-spill-slots -fivopts
  41              	@ -fkeep-static-consts -fleading-underscore -fmath-errno -fmerge-constants
  42              	@ -fmerge-debug-strings -fomit-frame-pointer -foptimize-register-move
  43              	@ -foptimize-sibling-calls -fpartial-inlining -fpeephole -fpeephole2
  44              	@ -fprefetch-loop-arrays -freg-struct-return -fregmove -frename-registers
  45              	@ -freorder-blocks -freorder-functions -frerun-cse-after-loop
  46              	@ -fsched-critical-path-heuristic -fsched-dep-count-heuristic
  47              	@ -fsched-group-heuristic -fsched-interblock -fsched-last-insn-heuristic
  48              	@ -fsched-rank-heuristic -fsched-spec -fsched-spec-insn-heuristic
  49              	@ -fsched-stalled-insns-dep -fschedule-insns2 -fsection-anchors
  50              	@ -fshow-column -fshrink-wrap -fsigned-zeros -fsplit-ivs-in-unroller
  51              	@ -fsplit-wide-types -fstrict-aliasing -fstrict-overflow
  52              	@ -fstrict-volatile-bitfields -fthread-jumps -ftoplevel-reorder
  53              	@ -ftrapping-math -ftree-bit-ccp -ftree-builtin-call-dce -ftree-ccp
  54              	@ -ftree-ch -ftree-copy-prop -ftree-copyrename -ftree-cselim -ftree-dce
  55              	@ -ftree-dominator-opts -ftree-dse -ftree-forwprop -ftree-fre
  56              	@ -ftree-loop-if-convert -ftree-loop-im -ftree-loop-ivcanon
  57              	@ -ftree-loop-optimize -ftree-parallelize-loops= -ftree-phiprop -ftree-pre
ARM GAS  /tmp/ccsCjCvg.s 			page 2


  58              	@ -ftree-pta -ftree-reassoc -ftree-scev-cprop -ftree-sink
  59              	@ -ftree-slp-vectorize -ftree-sra -ftree-switch-conversion
  60              	@ -ftree-tail-merge -ftree-ter -ftree-vect-loop-version -ftree-vrp
  61              	@ -funit-at-a-time -funroll-loops -fvar-tracking -fvar-tracking-assignments
  62              	@ -fverbose-asm -fweb -fzero-initialized-in-bss -mlittle-endian
  63              	@ -msched-prolog -mthumb -munaligned-access -mvectorize-with-neon-quad
  64              	
  65              		.text
  66              	.Ltext0:
  67              		.cfi_sections	.debug_frame
  68              		.section	.text.EXTI_DeInit,"ax",%progbits
  69              		.align	1
  70              		.global	EXTI_DeInit
  71              		.thumb
  72              		.thumb_func
  73              		.type	EXTI_DeInit, %function
  74              	EXTI_DeInit:
  75              	.LFB110:
  76              		.file 1 "stm32f4xx_exti.c"
   1:stm32f4xx_exti.c **** /**
   2:stm32f4xx_exti.c ****   ******************************************************************************
   3:stm32f4xx_exti.c ****   * @file    stm32f4xx_exti.c
   4:stm32f4xx_exti.c ****   * @author  MCD Application Team
   5:stm32f4xx_exti.c ****   * @version V1.1.0
   6:stm32f4xx_exti.c ****   * @date    11-January-2013
   7:stm32f4xx_exti.c ****   * @brief   This file provides firmware functions to manage the following 
   8:stm32f4xx_exti.c ****   *          functionalities of the EXTI peripheral:           
   9:stm32f4xx_exti.c ****   *           + Initialization and Configuration
  10:stm32f4xx_exti.c ****   *           + Interrupts and flags management
  11:stm32f4xx_exti.c ****   *
  12:stm32f4xx_exti.c **** @verbatim  
  13:stm32f4xx_exti.c **** 
  14:stm32f4xx_exti.c ****  ===================================================================
  15:stm32f4xx_exti.c ****                        ##### EXTI features #####
  16:stm32f4xx_exti.c ****  ===================================================================
  17:stm32f4xx_exti.c **** 
  18:stm32f4xx_exti.c ****  [..] External interrupt/event lines are mapped as following:
  19:stm32f4xx_exti.c ****    (#) All available GPIO pins are connected to the 16 external 
  20:stm32f4xx_exti.c ****        interrupt/event lines from EXTI0 to EXTI15.
  21:stm32f4xx_exti.c ****    (#) EXTI line 16 is connected to the PVD Output
  22:stm32f4xx_exti.c ****    (#) EXTI line 17 is connected to the RTC Alarm event
  23:stm32f4xx_exti.c ****    (#) EXTI line 18 is connected to the USB OTG FS Wakeup from suspend event                       
  24:stm32f4xx_exti.c ****    (#) EXTI line 19 is connected to the Ethernet Wakeup event
  25:stm32f4xx_exti.c ****    (#) EXTI line 20 is connected to the USB OTG HS (configured in FS) Wakeup event 
  26:stm32f4xx_exti.c ****    (#) EXTI line 21 is connected to the RTC Tamper and Time Stamp events                           
  27:stm32f4xx_exti.c ****    (#) EXTI line 22 is connected to the RTC Wakeup event
  28:stm32f4xx_exti.c ****           
  29:stm32f4xx_exti.c ****           
  30:stm32f4xx_exti.c ****                 ##### How to use this driver #####
  31:stm32f4xx_exti.c ****  ===================================================================  
  32:stm32f4xx_exti.c ****  
  33:stm32f4xx_exti.c ****  [..] In order to use an I/O pin as an external interrupt source, follow steps 
  34:stm32f4xx_exti.c ****       below:
  35:stm32f4xx_exti.c ****    (#) Configure the I/O in input mode using GPIO_Init()
  36:stm32f4xx_exti.c ****    (#) Select the input source pin for the EXTI line using SYSCFG_EXTILineConfig()
  37:stm32f4xx_exti.c ****    (#) Select the mode(interrupt, event) and configure the trigger 
  38:stm32f4xx_exti.c ****        selection (Rising, falling or both) using EXTI_Init()
ARM GAS  /tmp/ccsCjCvg.s 			page 3


  39:stm32f4xx_exti.c ****    (#) Configure NVIC IRQ channel mapped to the EXTI line using NVIC_Init()
  40:stm32f4xx_exti.c **** 
  41:stm32f4xx_exti.c ****  [..]     
  42:stm32f4xx_exti.c ****    (@) SYSCFG APB clock must be enabled to get write access to SYSCFG_EXTICRx
  43:stm32f4xx_exti.c ****        registers using RCC_APB2PeriphClockCmd(RCC_APB2Periph_SYSCFG, ENABLE);
  44:stm32f4xx_exti.c ****             
  45:stm32f4xx_exti.c **** @endverbatim                  
  46:stm32f4xx_exti.c ****   *
  47:stm32f4xx_exti.c ****   ******************************************************************************
  48:stm32f4xx_exti.c ****   * @attention
  49:stm32f4xx_exti.c ****   *
  50:stm32f4xx_exti.c ****   * <h2><center>&copy; COPYRIGHT 2013 STMicroelectronics</center></h2>
  51:stm32f4xx_exti.c ****   *
  52:stm32f4xx_exti.c ****   * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  53:stm32f4xx_exti.c ****   * You may not use this file except in compliance with the License.
  54:stm32f4xx_exti.c ****   * You may obtain a copy of the License at:
  55:stm32f4xx_exti.c ****   *
  56:stm32f4xx_exti.c ****   *        http://www.st.com/software_license_agreement_liberty_v2
  57:stm32f4xx_exti.c ****   *
  58:stm32f4xx_exti.c ****   * Unless required by applicable law or agreed to in writing, software 
  59:stm32f4xx_exti.c ****   * distributed under the License is distributed on an "AS IS" BASIS, 
  60:stm32f4xx_exti.c ****   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  61:stm32f4xx_exti.c ****   * See the License for the specific language governing permissions and
  62:stm32f4xx_exti.c ****   * limitations under the License.
  63:stm32f4xx_exti.c ****   *
  64:stm32f4xx_exti.c ****   ******************************************************************************
  65:stm32f4xx_exti.c ****   */
  66:stm32f4xx_exti.c **** 
  67:stm32f4xx_exti.c **** /* Includes ------------------------------------------------------------------*/
  68:stm32f4xx_exti.c **** #include "stm32f4xx_exti.h"
  69:stm32f4xx_exti.c **** 
  70:stm32f4xx_exti.c **** /** @addtogroup STM32F4xx_StdPeriph_Driver
  71:stm32f4xx_exti.c ****   * @{
  72:stm32f4xx_exti.c ****   */
  73:stm32f4xx_exti.c **** 
  74:stm32f4xx_exti.c **** /** @defgroup EXTI 
  75:stm32f4xx_exti.c ****   * @brief EXTI driver modules
  76:stm32f4xx_exti.c ****   * @{
  77:stm32f4xx_exti.c ****   */
  78:stm32f4xx_exti.c **** 
  79:stm32f4xx_exti.c **** /* Private typedef -----------------------------------------------------------*/
  80:stm32f4xx_exti.c **** /* Private define ------------------------------------------------------------*/
  81:stm32f4xx_exti.c **** 
  82:stm32f4xx_exti.c **** #define EXTI_LINENONE    ((uint32_t)0x00000)  /* No interrupt selected */
  83:stm32f4xx_exti.c **** 
  84:stm32f4xx_exti.c **** /* Private macro -------------------------------------------------------------*/
  85:stm32f4xx_exti.c **** /* Private variables ---------------------------------------------------------*/
  86:stm32f4xx_exti.c **** /* Private function prototypes -----------------------------------------------*/
  87:stm32f4xx_exti.c **** /* Private functions ---------------------------------------------------------*/
  88:stm32f4xx_exti.c **** 
  89:stm32f4xx_exti.c **** /** @defgroup EXTI_Private_Functions
  90:stm32f4xx_exti.c ****   * @{
  91:stm32f4xx_exti.c ****   */
  92:stm32f4xx_exti.c **** 
  93:stm32f4xx_exti.c **** /** @defgroup EXTI_Group1 Initialization and Configuration functions
  94:stm32f4xx_exti.c ****  *  @brief   Initialization and Configuration functions 
  95:stm32f4xx_exti.c ****  *
ARM GAS  /tmp/ccsCjCvg.s 			page 4


  96:stm32f4xx_exti.c **** @verbatim   
  97:stm32f4xx_exti.c ****  ===============================================================================
  98:stm32f4xx_exti.c ****              ##### Initialization and Configuration functions #####
  99:stm32f4xx_exti.c ****  ===============================================================================  
 100:stm32f4xx_exti.c **** 
 101:stm32f4xx_exti.c **** @endverbatim
 102:stm32f4xx_exti.c ****   * @{
 103:stm32f4xx_exti.c ****   */
 104:stm32f4xx_exti.c **** 
 105:stm32f4xx_exti.c **** /**
 106:stm32f4xx_exti.c ****   * @brief  Deinitializes the EXTI peripheral registers to their default reset values.
 107:stm32f4xx_exti.c ****   * @param  None
 108:stm32f4xx_exti.c ****   * @retval None
 109:stm32f4xx_exti.c ****   */
 110:stm32f4xx_exti.c **** void EXTI_DeInit(void)
 111:stm32f4xx_exti.c **** {
  77              		.loc 1 111 0
  78              		.cfi_startproc
  79              		@ args = 0, pretend = 0, frame = 0
  80              		@ frame_needed = 0, uses_anonymous_args = 0
  81              		@ link register save eliminated.
 112:stm32f4xx_exti.c ****   EXTI->IMR = 0x00000000;
  82              		.loc 1 112 0
  83 0000 044B     		ldr	r3, .L2	@ tmp134,
 113:stm32f4xx_exti.c ****   EXTI->EMR = 0x00000000;
 114:stm32f4xx_exti.c ****   EXTI->RTSR = 0x00000000;
 115:stm32f4xx_exti.c ****   EXTI->FTSR = 0x00000000;
 116:stm32f4xx_exti.c ****   EXTI->PR = 0x007FFFFF;
  84              		.loc 1 116 0
  85 0002 0548     		ldr	r0, .L2+4	@ tmp143,
 112:stm32f4xx_exti.c ****   EXTI->IMR = 0x00000000;
  86              		.loc 1 112 0
  87 0004 0022     		movs	r2, #0	@ tmp135,
  88 0006 1A60     		str	r2, [r3, #0]	@ tmp135, MEM[(struct EXTI_TypeDef *)1073822720B].IMR
 113:stm32f4xx_exti.c ****   EXTI->EMR = 0x00000000;
  89              		.loc 1 113 0
  90 0008 5A60     		str	r2, [r3, #4]	@ tmp135, MEM[(struct EXTI_TypeDef *)1073822720B].EMR
 114:stm32f4xx_exti.c ****   EXTI->RTSR = 0x00000000;
  91              		.loc 1 114 0
  92 000a 9A60     		str	r2, [r3, #8]	@ tmp135, MEM[(struct EXTI_TypeDef *)1073822720B].RTSR
 115:stm32f4xx_exti.c ****   EXTI->FTSR = 0x00000000;
  93              		.loc 1 115 0
  94 000c DA60     		str	r2, [r3, #12]	@ tmp135, MEM[(struct EXTI_TypeDef *)1073822720B].FTSR
  95              		.loc 1 116 0
  96 000e 5861     		str	r0, [r3, #20]	@ tmp143, MEM[(struct EXTI_TypeDef *)1073822720B].PR
  97 0010 7047     		bx	lr	@
  98              	.L3:
  99 0012 00BF     		.align	2
 100              	.L2:
 101 0014 003C0140 		.word	1073822720
 102 0018 FFFF7F00 		.word	8388607
 103              		.cfi_endproc
 104              	.LFE110:
 105              		.size	EXTI_DeInit, .-EXTI_DeInit
 106              		.section	.text.EXTI_Init,"ax",%progbits
 107              		.align	1
 108              		.global	EXTI_Init
ARM GAS  /tmp/ccsCjCvg.s 			page 5


 109              		.thumb
 110              		.thumb_func
 111              		.type	EXTI_Init, %function
 112              	EXTI_Init:
 113              	.LFB111:
 117:stm32f4xx_exti.c **** }
 118:stm32f4xx_exti.c **** 
 119:stm32f4xx_exti.c **** /**
 120:stm32f4xx_exti.c ****   * @brief  Initializes the EXTI peripheral according to the specified
 121:stm32f4xx_exti.c ****   *         parameters in the EXTI_InitStruct.
 122:stm32f4xx_exti.c ****   * @param  EXTI_InitStruct: pointer to a EXTI_InitTypeDef structure
 123:stm32f4xx_exti.c ****   *         that contains the configuration information for the EXTI peripheral.
 124:stm32f4xx_exti.c ****   * @retval None
 125:stm32f4xx_exti.c ****   */
 126:stm32f4xx_exti.c **** void EXTI_Init(EXTI_InitTypeDef* EXTI_InitStruct)
 127:stm32f4xx_exti.c **** {
 114              		.loc 1 127 0
 115              		.cfi_startproc
 116              		@ args = 0, pretend = 0, frame = 0
 117              		@ frame_needed = 0, uses_anonymous_args = 0
 118              	.LVL0:
 128:stm32f4xx_exti.c ****   uint32_t tmp = 0;
 129:stm32f4xx_exti.c **** 
 130:stm32f4xx_exti.c ****   /* Check the parameters */
 131:stm32f4xx_exti.c ****   assert_param(IS_EXTI_MODE(EXTI_InitStruct->EXTI_Mode));
 132:stm32f4xx_exti.c ****   assert_param(IS_EXTI_TRIGGER(EXTI_InitStruct->EXTI_Trigger));
 133:stm32f4xx_exti.c ****   assert_param(IS_EXTI_LINE(EXTI_InitStruct->EXTI_Line));  
 134:stm32f4xx_exti.c ****   assert_param(IS_FUNCTIONAL_STATE(EXTI_InitStruct->EXTI_LineCmd));
 135:stm32f4xx_exti.c **** 
 136:stm32f4xx_exti.c ****   tmp = (uint32_t)EXTI_BASE;
 137:stm32f4xx_exti.c ****      
 138:stm32f4xx_exti.c ****   if (EXTI_InitStruct->EXTI_LineCmd != DISABLE)
 119              		.loc 1 138 0
 120 0000 8379     		ldrb	r3, [r0, #6]	@ zero_extendqisi2	@ EXTI_InitStruct_3(D)->EXTI_LineCmd, EXTI_InitStruct_3(D)->E
 127:stm32f4xx_exti.c **** {
 121              		.loc 1 127 0
 122 0002 10B5     		push	{r4, lr}	@
 123              	.LCFI0:
 124              		.cfi_def_cfa_offset 8
 125              		.cfi_offset 4, -8
 126              		.cfi_offset 14, -4
 127              		.loc 1 138 0
 128 0004 002B     		cmp	r3, #0	@ EXTI_InitStruct_3(D)->EXTI_LineCmd
 129 0006 2AD0     		beq	.L5	@
 139:stm32f4xx_exti.c ****   {
 140:stm32f4xx_exti.c ****     /* Clear EXTI line configuration */
 141:stm32f4xx_exti.c ****     EXTI->IMR &= ~EXTI_InitStruct->EXTI_Line;
 130              		.loc 1 141 0
 131 0008 1A4B     		ldr	r3, .L10	@ tmp173,
 132 000a 0168     		ldr	r1, [r0, #0]	@ D.5965, EXTI_InitStruct_3(D)->EXTI_Line
 133 000c 1C68     		ldr	r4, [r3, #0]	@ D.5964, MEM[(struct EXTI_TypeDef *)1073822720B].IMR
 134 000e CA43     		mvns	r2, r1	@ D.5966, D.5965
 135 0010 1440     		ands	r4, r4, r2	@, D.5967, D.5964, D.5966
 136 0012 1C60     		str	r4, [r3, #0]	@ D.5967, MEM[(struct EXTI_TypeDef *)1073822720B].IMR
 142:stm32f4xx_exti.c ****     EXTI->EMR &= ~EXTI_InitStruct->EXTI_Line;
 137              		.loc 1 142 0
 138 0014 5C68     		ldr	r4, [r3, #4]	@ D.5968, MEM[(struct EXTI_TypeDef *)1073822720B].EMR
ARM GAS  /tmp/ccsCjCvg.s 			page 6


 139 0016 2240     		ands	r2, r2, r4	@, D.5969, D.5966, D.5968
 140 0018 5A60     		str	r2, [r3, #4]	@ D.5969, MEM[(struct EXTI_TypeDef *)1073822720B].EMR
 141              	.LVL1:
 143:stm32f4xx_exti.c ****     
 144:stm32f4xx_exti.c ****     tmp += EXTI_InitStruct->EXTI_Mode;
 142              		.loc 1 144 0
 143 001a 0279     		ldrb	r2, [r0, #4]	@ zero_extendqisi2	@ EXTI_InitStruct_3(D)->EXTI_Mode, EXTI_InitStruct_3(D)->EXTI
 144 001c 02F18044 		add	r4, r2, #1073741824	@ tmp178, EXTI_InitStruct_3(D)->EXTI_Mode,
 145 0020 04F59E32 		add	r2, r4, #80896	@ tmp.0, tmp178,
 145:stm32f4xx_exti.c **** 
 146:stm32f4xx_exti.c ****     *(__IO uint32_t *) tmp |= EXTI_InitStruct->EXTI_Line;
 146              		.loc 1 146 0
 147 0024 1468     		ldr	r4, [r2, #0]	@ D.5973, *tmp.0_21
 148 0026 2143     		orrs	r1, r1, r4	@, D.5974, D.5965, D.5973
 149 0028 1160     		str	r1, [r2, #0]	@ D.5974, *tmp.0_21
 147:stm32f4xx_exti.c **** 
 148:stm32f4xx_exti.c ****     /* Clear Rising Falling edge configuration */
 149:stm32f4xx_exti.c ****     EXTI->RTSR &= ~EXTI_InitStruct->EXTI_Line;
 150              		.loc 1 149 0
 151 002a 0268     		ldr	r2, [r0, #0]	@ D.5965, EXTI_InitStruct_3(D)->EXTI_Line
 152 002c 9C68     		ldr	r4, [r3, #8]	@ D.5975, MEM[(struct EXTI_TypeDef *)1073822720B].RTSR
 150:stm32f4xx_exti.c ****     EXTI->FTSR &= ~EXTI_InitStruct->EXTI_Line;
 151:stm32f4xx_exti.c ****     
 152:stm32f4xx_exti.c ****     /* Select the trigger for the selected external interrupts */
 153:stm32f4xx_exti.c ****     if (EXTI_InitStruct->EXTI_Trigger == EXTI_Trigger_Rising_Falling)
 153              		.loc 1 153 0
 154 002e 4079     		ldrb	r0, [r0, #5]	@ zero_extendqisi2	@ D.5979, EXTI_InitStruct_3(D)->EXTI_Trigger
 155              	.LVL2:
 149:stm32f4xx_exti.c ****     EXTI->RTSR &= ~EXTI_InitStruct->EXTI_Line;
 156              		.loc 1 149 0
 157 0030 D143     		mvns	r1, r2	@ D.5966, D.5965
 158 0032 0C40     		ands	r4, r4, r1	@, D.5976, D.5975, D.5966
 159 0034 9C60     		str	r4, [r3, #8]	@ D.5976, MEM[(struct EXTI_TypeDef *)1073822720B].RTSR
 150:stm32f4xx_exti.c ****     EXTI->FTSR &= ~EXTI_InitStruct->EXTI_Line;
 160              		.loc 1 150 0
 161 0036 DC68     		ldr	r4, [r3, #12]	@ D.5977, MEM[(struct EXTI_TypeDef *)1073822720B].FTSR
 162              		.loc 1 153 0
 163 0038 1028     		cmp	r0, #16	@ D.5979,
 150:stm32f4xx_exti.c ****     EXTI->FTSR &= ~EXTI_InitStruct->EXTI_Line;
 164              		.loc 1 150 0
 165 003a 01EA0401 		and	r1, r1, r4	@ D.5978, D.5966, D.5977
 166 003e D960     		str	r1, [r3, #12]	@ D.5978, MEM[(struct EXTI_TypeDef *)1073822720B].FTSR
 167              		.loc 1 153 0
 168 0040 06D1     		bne	.L6	@,
 154:stm32f4xx_exti.c ****     {
 155:stm32f4xx_exti.c ****       /* Rising Falling edge */
 156:stm32f4xx_exti.c ****       EXTI->RTSR |= EXTI_InitStruct->EXTI_Line;
 169              		.loc 1 156 0
 170 0042 9868     		ldr	r0, [r3, #8]	@ D.5982, MEM[(struct EXTI_TypeDef *)1073822720B].RTSR
 171 0044 1043     		orrs	r0, r0, r2	@, D.5983, D.5982, D.5965
 172 0046 9860     		str	r0, [r3, #8]	@ D.5983, MEM[(struct EXTI_TypeDef *)1073822720B].RTSR
 157:stm32f4xx_exti.c ****       EXTI->FTSR |= EXTI_InitStruct->EXTI_Line;
 173              		.loc 1 157 0
 174 0048 D968     		ldr	r1, [r3, #12]	@ D.5984, MEM[(struct EXTI_TypeDef *)1073822720B].FTSR
 175 004a 0A43     		orrs	r2, r2, r1	@, D.5985, D.5965, D.5984
 176 004c DA60     		str	r2, [r3, #12]	@ D.5985, MEM[(struct EXTI_TypeDef *)1073822720B].FTSR
 177 004e 10BD     		pop	{r4, pc}	@
ARM GAS  /tmp/ccsCjCvg.s 			page 7


 178              	.L6:
 179              	.LVL3:
 158:stm32f4xx_exti.c ****     }
 159:stm32f4xx_exti.c ****     else
 160:stm32f4xx_exti.c ****     {
 161:stm32f4xx_exti.c ****       tmp = (uint32_t)EXTI_BASE;
 162:stm32f4xx_exti.c ****       tmp += EXTI_InitStruct->EXTI_Trigger;
 180              		.loc 1 162 0
 181 0050 00F18043 		add	r3, r0, #1073741824	@ tmp187, D.5979,
 182 0054 03F59E33 		add	r3, r3, #80896	@ tmp.0, tmp187,
 163:stm32f4xx_exti.c **** 
 164:stm32f4xx_exti.c ****       *(__IO uint32_t *) tmp |= EXTI_InitStruct->EXTI_Line;
 183              		.loc 1 164 0
 184 0058 1968     		ldr	r1, [r3, #0]	@ D.5988, *tmp.0_53
 185 005a 0A43     		orrs	r2, r2, r1	@, D.5989, D.5965, D.5988
 186 005c 08E0     		b	.L8	@
 187              	.LVL4:
 188              	.L5:
 165:stm32f4xx_exti.c ****     }
 166:stm32f4xx_exti.c ****   }
 167:stm32f4xx_exti.c ****   else
 168:stm32f4xx_exti.c ****   {
 169:stm32f4xx_exti.c ****     tmp += EXTI_InitStruct->EXTI_Mode;
 189              		.loc 1 169 0
 190 005e 0179     		ldrb	r1, [r0, #4]	@ zero_extendqisi2	@ EXTI_InitStruct_3(D)->EXTI_Mode, EXTI_InitStruct_3(D)->EXTI
 170:stm32f4xx_exti.c **** 
 171:stm32f4xx_exti.c ****     /* Disable the selected external lines */
 172:stm32f4xx_exti.c ****     *(__IO uint32_t *) tmp &= ~EXTI_InitStruct->EXTI_Line;
 191              		.loc 1 172 0
 192 0060 0068     		ldr	r0, [r0, #0]	@ EXTI_InitStruct_3(D)->EXTI_Line, EXTI_InitStruct_3(D)->EXTI_Line
 193              	.LVL5:
 169:stm32f4xx_exti.c ****     tmp += EXTI_InitStruct->EXTI_Mode;
 194              		.loc 1 169 0
 195 0062 01F18042 		add	r2, r1, #1073741824	@ tmp189, EXTI_InitStruct_3(D)->EXTI_Mode,
 196 0066 02F59E33 		add	r3, r2, #80896	@ tmp.0, tmp189,
 197              		.loc 1 172 0
 198 006a 1A68     		ldr	r2, [r3, #0]	@ D.5991, *tmp.0_61
 199 006c 22EA0002 		bic	r2, r2, r0	@ D.5992, D.5991, EXTI_InitStruct_3(D)->EXTI_Line
 200              	.LVL6:
 201              	.L8:
 202 0070 1A60     		str	r2, [r3, #0]	@ D.5992,* tmp.0
 203 0072 10BD     		pop	{r4, pc}	@
 204              	.L11:
 205              		.align	2
 206              	.L10:
 207 0074 003C0140 		.word	1073822720
 208              		.cfi_endproc
 209              	.LFE111:
 210              		.size	EXTI_Init, .-EXTI_Init
 211              		.section	.text.EXTI_StructInit,"ax",%progbits
 212              		.align	1
 213              		.global	EXTI_StructInit
 214              		.thumb
 215              		.thumb_func
 216              		.type	EXTI_StructInit, %function
 217              	EXTI_StructInit:
 218              	.LFB112:
ARM GAS  /tmp/ccsCjCvg.s 			page 8


 173:stm32f4xx_exti.c ****   }
 174:stm32f4xx_exti.c **** }
 175:stm32f4xx_exti.c **** 
 176:stm32f4xx_exti.c **** /**
 177:stm32f4xx_exti.c ****   * @brief  Fills each EXTI_InitStruct member with its reset value.
 178:stm32f4xx_exti.c ****   * @param  EXTI_InitStruct: pointer to a EXTI_InitTypeDef structure which will
 179:stm32f4xx_exti.c ****   *         be initialized.
 180:stm32f4xx_exti.c ****   * @retval None
 181:stm32f4xx_exti.c ****   */
 182:stm32f4xx_exti.c **** void EXTI_StructInit(EXTI_InitTypeDef* EXTI_InitStruct)
 183:stm32f4xx_exti.c **** {
 219              		.loc 1 183 0
 220              		.cfi_startproc
 221              		@ args = 0, pretend = 0, frame = 0
 222              		@ frame_needed = 0, uses_anonymous_args = 0
 223              		@ link register save eliminated.
 224              	.LVL7:
 184:stm32f4xx_exti.c ****   EXTI_InitStruct->EXTI_Line = EXTI_LINENONE;
 225              		.loc 1 184 0
 226 0000 0023     		movs	r3, #0	@ tmp135,
 185:stm32f4xx_exti.c ****   EXTI_InitStruct->EXTI_Mode = EXTI_Mode_Interrupt;
 186:stm32f4xx_exti.c ****   EXTI_InitStruct->EXTI_Trigger = EXTI_Trigger_Falling;
 227              		.loc 1 186 0
 228 0002 0C22     		movs	r2, #12	@ tmp138,
 184:stm32f4xx_exti.c ****   EXTI_InitStruct->EXTI_Line = EXTI_LINENONE;
 229              		.loc 1 184 0
 230 0004 0360     		str	r3, [r0, #0]	@ tmp135, EXTI_InitStruct_1(D)->EXTI_Line
 185:stm32f4xx_exti.c ****   EXTI_InitStruct->EXTI_Mode = EXTI_Mode_Interrupt;
 231              		.loc 1 185 0
 232 0006 0371     		strb	r3, [r0, #4]	@ tmp135, EXTI_InitStruct_1(D)->EXTI_Mode
 233              		.loc 1 186 0
 234 0008 4271     		strb	r2, [r0, #5]	@ tmp138, EXTI_InitStruct_1(D)->EXTI_Trigger
 187:stm32f4xx_exti.c ****   EXTI_InitStruct->EXTI_LineCmd = DISABLE;
 235              		.loc 1 187 0
 236 000a 8371     		strb	r3, [r0, #6]	@ tmp135, EXTI_InitStruct_1(D)->EXTI_LineCmd
 237 000c 7047     		bx	lr	@
 238              		.cfi_endproc
 239              	.LFE112:
 240              		.size	EXTI_StructInit, .-EXTI_StructInit
 241              		.section	.text.EXTI_GenerateSWInterrupt,"ax",%progbits
 242              		.align	1
 243              		.global	EXTI_GenerateSWInterrupt
 244              		.thumb
 245              		.thumb_func
 246              		.type	EXTI_GenerateSWInterrupt, %function
 247              	EXTI_GenerateSWInterrupt:
 248              	.LFB113:
 188:stm32f4xx_exti.c **** }
 189:stm32f4xx_exti.c **** 
 190:stm32f4xx_exti.c **** /**
 191:stm32f4xx_exti.c ****   * @brief  Generates a Software interrupt on selected EXTI line.
 192:stm32f4xx_exti.c ****   * @param  EXTI_Line: specifies the EXTI line on which the software interrupt
 193:stm32f4xx_exti.c ****   *         will be generated.
 194:stm32f4xx_exti.c ****   *         This parameter can be any combination of EXTI_Linex where x can be (0..22)
 195:stm32f4xx_exti.c ****   * @retval None
 196:stm32f4xx_exti.c ****   */
 197:stm32f4xx_exti.c **** void EXTI_GenerateSWInterrupt(uint32_t EXTI_Line)
ARM GAS  /tmp/ccsCjCvg.s 			page 9


 198:stm32f4xx_exti.c **** {
 249              		.loc 1 198 0
 250              		.cfi_startproc
 251              		@ args = 0, pretend = 0, frame = 0
 252              		@ frame_needed = 0, uses_anonymous_args = 0
 253              		@ link register save eliminated.
 254              	.LVL8:
 199:stm32f4xx_exti.c ****   /* Check the parameters */
 200:stm32f4xx_exti.c ****   assert_param(IS_EXTI_LINE(EXTI_Line));
 201:stm32f4xx_exti.c ****   
 202:stm32f4xx_exti.c ****   EXTI->SWIER |= EXTI_Line;
 255              		.loc 1 202 0
 256 0000 024B     		ldr	r3, .L14	@ tmp137,
 257 0002 1A69     		ldr	r2, [r3, #16]	@ D.5958, MEM[(struct EXTI_TypeDef *)1073822720B].SWIER
 258 0004 1043     		orrs	r0, r0, r2	@, D.5959, EXTI_Line, D.5958
 259              	.LVL9:
 260 0006 1861     		str	r0, [r3, #16]	@ D.5959, MEM[(struct EXTI_TypeDef *)1073822720B].SWIER
 261 0008 7047     		bx	lr	@
 262              	.L15:
 263 000a 00BF     		.align	2
 264              	.L14:
 265 000c 003C0140 		.word	1073822720
 266              		.cfi_endproc
 267              	.LFE113:
 268              		.size	EXTI_GenerateSWInterrupt, .-EXTI_GenerateSWInterrupt
 269              		.section	.text.EXTI_GetFlagStatus,"ax",%progbits
 270              		.align	1
 271              		.global	EXTI_GetFlagStatus
 272              		.thumb
 273              		.thumb_func
 274              		.type	EXTI_GetFlagStatus, %function
 275              	EXTI_GetFlagStatus:
 276              	.LFB114:
 203:stm32f4xx_exti.c **** }
 204:stm32f4xx_exti.c **** 
 205:stm32f4xx_exti.c **** /**
 206:stm32f4xx_exti.c ****   * @}
 207:stm32f4xx_exti.c ****   */
 208:stm32f4xx_exti.c **** 
 209:stm32f4xx_exti.c **** /** @defgroup EXTI_Group2 Interrupts and flags management functions
 210:stm32f4xx_exti.c ****  *  @brief   Interrupts and flags management functions 
 211:stm32f4xx_exti.c ****  *
 212:stm32f4xx_exti.c **** @verbatim   
 213:stm32f4xx_exti.c ****  ===============================================================================
 214:stm32f4xx_exti.c ****              ##### Interrupts and flags management functions #####
 215:stm32f4xx_exti.c ****  ===============================================================================  
 216:stm32f4xx_exti.c **** 
 217:stm32f4xx_exti.c **** @endverbatim
 218:stm32f4xx_exti.c ****   * @{
 219:stm32f4xx_exti.c ****   */
 220:stm32f4xx_exti.c **** 
 221:stm32f4xx_exti.c **** /**
 222:stm32f4xx_exti.c ****   * @brief  Checks whether the specified EXTI line flag is set or not.
 223:stm32f4xx_exti.c ****   * @param  EXTI_Line: specifies the EXTI line flag to check.
 224:stm32f4xx_exti.c ****   *          This parameter can be EXTI_Linex where x can be(0..22)
 225:stm32f4xx_exti.c ****   * @retval The new state of EXTI_Line (SET or RESET).
 226:stm32f4xx_exti.c ****   */
ARM GAS  /tmp/ccsCjCvg.s 			page 10


 227:stm32f4xx_exti.c **** FlagStatus EXTI_GetFlagStatus(uint32_t EXTI_Line)
 228:stm32f4xx_exti.c **** {
 277              		.loc 1 228 0
 278              		.cfi_startproc
 279              		@ args = 0, pretend = 0, frame = 0
 280              		@ frame_needed = 0, uses_anonymous_args = 0
 281              		@ link register save eliminated.
 282              	.LVL10:
 229:stm32f4xx_exti.c ****   FlagStatus bitstatus = RESET;
 230:stm32f4xx_exti.c ****   /* Check the parameters */
 231:stm32f4xx_exti.c ****   assert_param(IS_GET_EXTI_LINE(EXTI_Line));
 232:stm32f4xx_exti.c ****   
 233:stm32f4xx_exti.c ****   if ((EXTI->PR & EXTI_Line) != (uint32_t)RESET)
 283              		.loc 1 233 0
 284 0000 034B     		ldr	r3, .L17	@ tmp140,
 285 0002 5969     		ldr	r1, [r3, #20]	@ D.5950, MEM[(struct EXTI_TypeDef *)1073822720B].PR
 286              	.LVL11:
 287 0004 0842     		tst	r0, r1	@ EXTI_Line, D.5950
 234:stm32f4xx_exti.c ****   {
 235:stm32f4xx_exti.c ****     bitstatus = SET;
 236:stm32f4xx_exti.c ****   }
 237:stm32f4xx_exti.c ****   else
 238:stm32f4xx_exti.c ****   {
 239:stm32f4xx_exti.c ****     bitstatus = RESET;
 240:stm32f4xx_exti.c ****   }
 241:stm32f4xx_exti.c ****   return bitstatus;
 242:stm32f4xx_exti.c **** }
 288              		.loc 1 242 0
 289 0006 0CBF     		ite	eq	@
 290 0008 0020     		moveq	r0, #0	@,
 291 000a 0120     		movne	r0, #1	@,
 292              	.LVL12:
 293 000c 7047     		bx	lr	@
 294              	.L18:
 295 000e 00BF     		.align	2
 296              	.L17:
 297 0010 003C0140 		.word	1073822720
 298              		.cfi_endproc
 299              	.LFE114:
 300              		.size	EXTI_GetFlagStatus, .-EXTI_GetFlagStatus
 301              		.section	.text.EXTI_ClearFlag,"ax",%progbits
 302              		.align	1
 303              		.global	EXTI_ClearFlag
 304              		.thumb
 305              		.thumb_func
 306              		.type	EXTI_ClearFlag, %function
 307              	EXTI_ClearFlag:
 308              	.LFB115:
 243:stm32f4xx_exti.c **** 
 244:stm32f4xx_exti.c **** /**
 245:stm32f4xx_exti.c ****   * @brief  Clears the EXTI's line pending flags.
 246:stm32f4xx_exti.c ****   * @param  EXTI_Line: specifies the EXTI lines flags to clear.
 247:stm32f4xx_exti.c ****   *          This parameter can be any combination of EXTI_Linex where x can be (0..22)
 248:stm32f4xx_exti.c ****   * @retval None
 249:stm32f4xx_exti.c ****   */
 250:stm32f4xx_exti.c **** void EXTI_ClearFlag(uint32_t EXTI_Line)
 251:stm32f4xx_exti.c **** {
ARM GAS  /tmp/ccsCjCvg.s 			page 11


 309              		.loc 1 251 0
 310              		.cfi_startproc
 311              		@ args = 0, pretend = 0, frame = 0
 312              		@ frame_needed = 0, uses_anonymous_args = 0
 313              		@ link register save eliminated.
 314              	.LVL13:
 252:stm32f4xx_exti.c ****   /* Check the parameters */
 253:stm32f4xx_exti.c ****   assert_param(IS_EXTI_LINE(EXTI_Line));
 254:stm32f4xx_exti.c ****   
 255:stm32f4xx_exti.c ****   EXTI->PR = EXTI_Line;
 315              		.loc 1 255 0
 316 0000 014B     		ldr	r3, .L20	@ tmp135,
 317 0002 5861     		str	r0, [r3, #20]	@ EXTI_Line, MEM[(struct EXTI_TypeDef *)1073822720B].PR
 318 0004 7047     		bx	lr	@
 319              	.L21:
 320 0006 00BF     		.align	2
 321              	.L20:
 322 0008 003C0140 		.word	1073822720
 323              		.cfi_endproc
 324              	.LFE115:
 325              		.size	EXTI_ClearFlag, .-EXTI_ClearFlag
 326              		.section	.text.EXTI_GetITStatus,"ax",%progbits
 327              		.align	1
 328              		.global	EXTI_GetITStatus
 329              		.thumb
 330              		.thumb_func
 331              		.type	EXTI_GetITStatus, %function
 332              	EXTI_GetITStatus:
 333              	.LFB116:
 256:stm32f4xx_exti.c **** }
 257:stm32f4xx_exti.c **** 
 258:stm32f4xx_exti.c **** /**
 259:stm32f4xx_exti.c ****   * @brief  Checks whether the specified EXTI line is asserted or not.
 260:stm32f4xx_exti.c ****   * @param  EXTI_Line: specifies the EXTI line to check.
 261:stm32f4xx_exti.c ****   *          This parameter can be EXTI_Linex where x can be(0..22)
 262:stm32f4xx_exti.c ****   * @retval The new state of EXTI_Line (SET or RESET).
 263:stm32f4xx_exti.c ****   */
 264:stm32f4xx_exti.c **** ITStatus EXTI_GetITStatus(uint32_t EXTI_Line)
 265:stm32f4xx_exti.c **** {
 334              		.loc 1 265 0
 335              		.cfi_startproc
 336              		@ args = 0, pretend = 0, frame = 0
 337              		@ frame_needed = 0, uses_anonymous_args = 0
 338              		@ link register save eliminated.
 339              	.LVL14:
 266:stm32f4xx_exti.c ****   ITStatus bitstatus = RESET;
 267:stm32f4xx_exti.c ****   uint32_t enablestatus = 0;
 268:stm32f4xx_exti.c ****   /* Check the parameters */
 269:stm32f4xx_exti.c ****   assert_param(IS_GET_EXTI_LINE(EXTI_Line));
 270:stm32f4xx_exti.c ****   
 271:stm32f4xx_exti.c ****   enablestatus =  EXTI->IMR & EXTI_Line;
 340              		.loc 1 271 0
 341 0000 064B     		ldr	r3, .L25	@ tmp142,
 342 0002 1A68     		ldr	r2, [r3, #0]	@ D.5939, MEM[(struct EXTI_TypeDef *)1073822720B].IMR
 343              	.LVL15:
 272:stm32f4xx_exti.c ****   if (((EXTI->PR & EXTI_Line) != (uint32_t)RESET) && (enablestatus != (uint32_t)RESET))
 344              		.loc 1 272 0
ARM GAS  /tmp/ccsCjCvg.s 			page 12


 345 0004 5969     		ldr	r1, [r3, #20]	@ D.5942, MEM[(struct EXTI_TypeDef *)1073822720B].PR
 346 0006 10EA0103 		ands	r3, r0, r1	@ tmp144, EXTI_Line, D.5942
 347 000a 04D0     		beq	.L24	@,
 348              		.loc 1 272 0 is_stmt 0 discriminator 1
 349 000c 1042     		tst	r0, r2	@ EXTI_Line, D.5939
 273:stm32f4xx_exti.c ****   {
 274:stm32f4xx_exti.c ****     bitstatus = SET;
 350              		.loc 1 274 0 is_stmt 1 discriminator 1
 351 000e 0CBF     		ite	eq	@
 352 0010 0020     		moveq	r0, #0	@, bitstatus
 353 0012 0120     		movne	r0, #1	@, bitstatus
 354              	.LVL16:
 355 0014 7047     		bx	lr	@
 356              	.LVL17:
 357              	.L24:
 275:stm32f4xx_exti.c ****   }
 276:stm32f4xx_exti.c ****   else
 277:stm32f4xx_exti.c ****   {
 278:stm32f4xx_exti.c ****     bitstatus = RESET;
 358              		.loc 1 278 0
 359 0016 1846     		mov	r0, r3	@ bitstatus, tmp144
 360              	.LVL18:
 279:stm32f4xx_exti.c ****   }
 280:stm32f4xx_exti.c ****   return bitstatus;
 281:stm32f4xx_exti.c **** }
 361              		.loc 1 281 0
 362 0018 7047     		bx	lr	@
 363              	.L26:
 364 001a 00BF     		.align	2
 365              	.L25:
 366 001c 003C0140 		.word	1073822720
 367              		.cfi_endproc
 368              	.LFE116:
 369              		.size	EXTI_GetITStatus, .-EXTI_GetITStatus
 370              		.section	.text.EXTI_ClearITPendingBit,"ax",%progbits
 371              		.align	1
 372              		.global	EXTI_ClearITPendingBit
 373              		.thumb
 374              		.thumb_func
 375              		.type	EXTI_ClearITPendingBit, %function
 376              	EXTI_ClearITPendingBit:
 377              	.LFB117:
 282:stm32f4xx_exti.c **** 
 283:stm32f4xx_exti.c **** /**
 284:stm32f4xx_exti.c ****   * @brief  Clears the EXTI's line pending bits.
 285:stm32f4xx_exti.c ****   * @param  EXTI_Line: specifies the EXTI lines to clear.
 286:stm32f4xx_exti.c ****   *          This parameter can be any combination of EXTI_Linex where x can be (0..22)
 287:stm32f4xx_exti.c ****   * @retval None
 288:stm32f4xx_exti.c ****   */
 289:stm32f4xx_exti.c **** void EXTI_ClearITPendingBit(uint32_t EXTI_Line)
 290:stm32f4xx_exti.c **** {
 378              		.loc 1 290 0
 379              		.cfi_startproc
 380              		@ args = 0, pretend = 0, frame = 0
 381              		@ frame_needed = 0, uses_anonymous_args = 0
 382              		@ link register save eliminated.
 383              	.LVL19:
ARM GAS  /tmp/ccsCjCvg.s 			page 13


 291:stm32f4xx_exti.c ****   /* Check the parameters */
 292:stm32f4xx_exti.c ****   assert_param(IS_EXTI_LINE(EXTI_Line));
 293:stm32f4xx_exti.c ****   
 294:stm32f4xx_exti.c ****   EXTI->PR = EXTI_Line;
 384              		.loc 1 294 0
 385 0000 014B     		ldr	r3, .L28	@ tmp135,
 386 0002 5861     		str	r0, [r3, #20]	@ EXTI_Line, MEM[(struct EXTI_TypeDef *)1073822720B].PR
 387 0004 7047     		bx	lr	@
 388              	.L29:
 389 0006 00BF     		.align	2
 390              	.L28:
 391 0008 003C0140 		.word	1073822720
 392              		.cfi_endproc
 393              	.LFE117:
 394              		.size	EXTI_ClearITPendingBit, .-EXTI_ClearITPendingBit
 395              		.text
 396              	.Letext0:
 397              		.file 2 "/usr/bin/../lib/gcc/arm-none-eabi/4.7.4/../../../../arm-none-eabi/include/stdint.h"
 398              		.file 3 "stm32f4xx.h"
 399              		.file 4 "stm32f4xx_exti.h"
 400              		.file 5 "cmsis/core_cm4.h"
 401              		.section	.debug_info,"",%progbits
 402              	.Ldebug_info0:
 403 0000 71030000 		.4byte	0x371
 404 0004 0200     		.2byte	0x2
 405 0006 00000000 		.4byte	.Ldebug_abbrev0
 406 000a 04       		.byte	0x4
 407 000b 01       		.uleb128 0x1
 408 000c 74010000 		.4byte	.LASF44
 409 0010 01       		.byte	0x1
 410 0011 04010000 		.4byte	.LASF45
 411 0015 66020000 		.4byte	.LASF46
 412 0019 00000000 		.4byte	.Ldebug_ranges0+0
 413 001d 00000000 		.4byte	0
 414 0021 00000000 		.4byte	0
 415 0025 00000000 		.4byte	.Ldebug_line0
 416 0029 02       		.uleb128 0x2
 417 002a 01       		.byte	0x1
 418 002b 06       		.byte	0x6
 419 002c EB020000 		.4byte	.LASF0
 420 0030 02       		.uleb128 0x2
 421 0031 01       		.byte	0x1
 422 0032 08       		.byte	0x8
 423 0033 EB000000 		.4byte	.LASF1
 424 0037 02       		.uleb128 0x2
 425 0038 02       		.byte	0x2
 426 0039 05       		.byte	0x5
 427 003a D3020000 		.4byte	.LASF2
 428 003e 02       		.uleb128 0x2
 429 003f 02       		.byte	0x2
 430 0040 07       		.byte	0x7
 431 0041 69000000 		.4byte	.LASF3
 432 0045 03       		.uleb128 0x3
 433 0046 47020000 		.4byte	.LASF5
 434 004a 02       		.byte	0x2
 435 004b 4F       		.byte	0x4f
 436 004c 50000000 		.4byte	0x50
ARM GAS  /tmp/ccsCjCvg.s 			page 14


 437 0050 02       		.uleb128 0x2
 438 0051 04       		.byte	0x4
 439 0052 05       		.byte	0x5
 440 0053 E2020000 		.4byte	.LASF4
 441 0057 03       		.uleb128 0x3
 442 0058 BD010000 		.4byte	.LASF6
 443 005c 02       		.byte	0x2
 444 005d 50       		.byte	0x50
 445 005e 62000000 		.4byte	0x62
 446 0062 02       		.uleb128 0x2
 447 0063 04       		.byte	0x4
 448 0064 07       		.byte	0x7
 449 0065 24010000 		.4byte	.LASF7
 450 0069 02       		.uleb128 0x2
 451 006a 08       		.byte	0x8
 452 006b 05       		.byte	0x5
 453 006c 58020000 		.4byte	.LASF8
 454 0070 02       		.uleb128 0x2
 455 0071 08       		.byte	0x8
 456 0072 07       		.byte	0x7
 457 0073 20020000 		.4byte	.LASF9
 458 0077 04       		.uleb128 0x4
 459 0078 04       		.byte	0x4
 460 0079 05       		.byte	0x5
 461 007a 696E7400 		.ascii	"int\000"
 462 007e 02       		.uleb128 0x2
 463 007f 04       		.byte	0x4
 464 0080 07       		.byte	0x7
 465 0081 F6010000 		.4byte	.LASF10
 466 0085 02       		.uleb128 0x2
 467 0086 04       		.byte	0x4
 468 0087 07       		.byte	0x7
 469 0088 4F020000 		.4byte	.LASF11
 470 008c 05       		.uleb128 0x5
 471 008d 57000000 		.4byte	0x57
 472 0091 05       		.uleb128 0x5
 473 0092 45000000 		.4byte	0x45
 474 0096 06       		.uleb128 0x6
 475 0097 01       		.byte	0x1
 476 0098 03       		.byte	0x3
 477 0099 1D01     		.2byte	0x11d
 478 009b AC000000 		.4byte	0xac
 479 009f 07       		.uleb128 0x7
 480 00a0 36010000 		.4byte	.LASF12
 481 00a4 00       		.sleb128 0
 482 00a5 08       		.uleb128 0x8
 483 00a6 53455400 		.ascii	"SET\000"
 484 00aa 01       		.sleb128 1
 485 00ab 00       		.byte	0
 486 00ac 09       		.uleb128 0x9
 487 00ad F9000000 		.4byte	.LASF13
 488 00b1 03       		.byte	0x3
 489 00b2 1D01     		.2byte	0x11d
 490 00b4 96000000 		.4byte	0x96
 491 00b8 09       		.uleb128 0x9
 492 00b9 14000000 		.4byte	.LASF14
 493 00bd 03       		.byte	0x3
ARM GAS  /tmp/ccsCjCvg.s 			page 15


 494 00be 1D01     		.2byte	0x11d
 495 00c0 96000000 		.4byte	0x96
 496 00c4 06       		.uleb128 0x6
 497 00c5 01       		.byte	0x1
 498 00c6 03       		.byte	0x3
 499 00c7 1F01     		.2byte	0x11f
 500 00c9 DA000000 		.4byte	0xda
 501 00cd 07       		.uleb128 0x7
 502 00ce 5A010000 		.4byte	.LASF15
 503 00d2 00       		.sleb128 0
 504 00d3 07       		.uleb128 0x7
 505 00d4 D0000000 		.4byte	.LASF16
 506 00d8 01       		.sleb128 1
 507 00d9 00       		.byte	0
 508 00da 09       		.uleb128 0x9
 509 00db 7C000000 		.4byte	.LASF17
 510 00df 03       		.byte	0x3
 511 00e0 1F01     		.2byte	0x11f
 512 00e2 C4000000 		.4byte	0xc4
 513 00e6 0A       		.uleb128 0xa
 514 00e7 18       		.byte	0x18
 515 00e8 03       		.byte	0x3
 516 00e9 3702     		.2byte	0x237
 517 00eb 49010000 		.4byte	0x149
 518 00ef 0B       		.uleb128 0xb
 519 00f0 494D5200 		.ascii	"IMR\000"
 520 00f4 03       		.byte	0x3
 521 00f5 3902     		.2byte	0x239
 522 00f7 8C000000 		.4byte	0x8c
 523 00fb 02       		.byte	0x2
 524 00fc 23       		.byte	0x23
 525 00fd 00       		.uleb128 0
 526 00fe 0B       		.uleb128 0xb
 527 00ff 454D5200 		.ascii	"EMR\000"
 528 0103 03       		.byte	0x3
 529 0104 3A02     		.2byte	0x23a
 530 0106 8C000000 		.4byte	0x8c
 531 010a 02       		.byte	0x2
 532 010b 23       		.byte	0x23
 533 010c 04       		.uleb128 0x4
 534 010d 0C       		.uleb128 0xc
 535 010e 6F010000 		.4byte	.LASF18
 536 0112 03       		.byte	0x3
 537 0113 3B02     		.2byte	0x23b
 538 0115 8C000000 		.4byte	0x8c
 539 0119 02       		.byte	0x2
 540 011a 23       		.byte	0x23
 541 011b 08       		.uleb128 0x8
 542 011c 0C       		.uleb128 0xc
 543 011d DD020000 		.4byte	.LASF19
 544 0121 03       		.byte	0x3
 545 0122 3C02     		.2byte	0x23c
 546 0124 8C000000 		.4byte	0x8c
 547 0128 02       		.byte	0x2
 548 0129 23       		.byte	0x23
 549 012a 0C       		.uleb128 0xc
 550 012b 0C       		.uleb128 0xc
ARM GAS  /tmp/ccsCjCvg.s 			page 16


 551 012c 0B030000 		.4byte	.LASF20
 552 0130 03       		.byte	0x3
 553 0131 3D02     		.2byte	0x23d
 554 0133 8C000000 		.4byte	0x8c
 555 0137 02       		.byte	0x2
 556 0138 23       		.byte	0x23
 557 0139 10       		.uleb128 0x10
 558 013a 0B       		.uleb128 0xb
 559 013b 505200   		.ascii	"PR\000"
 560 013e 03       		.byte	0x3
 561 013f 3E02     		.2byte	0x23e
 562 0141 8C000000 		.4byte	0x8c
 563 0145 02       		.byte	0x2
 564 0146 23       		.byte	0x23
 565 0147 14       		.uleb128 0x14
 566 0148 00       		.byte	0
 567 0149 09       		.uleb128 0x9
 568 014a 4D010000 		.4byte	.LASF21
 569 014e 03       		.byte	0x3
 570 014f 3F02     		.2byte	0x23f
 571 0151 E6000000 		.4byte	0xe6
 572 0155 0D       		.uleb128 0xd
 573 0156 01       		.byte	0x1
 574 0157 04       		.byte	0x4
 575 0158 37       		.byte	0x37
 576 0159 6A010000 		.4byte	0x16a
 577 015d 07       		.uleb128 0x7
 578 015e D7000000 		.4byte	.LASF22
 579 0162 00       		.sleb128 0
 580 0163 07       		.uleb128 0x7
 581 0164 59000000 		.4byte	.LASF23
 582 0168 04       		.sleb128 4
 583 0169 00       		.byte	0
 584 016a 03       		.uleb128 0x3
 585 016b 3C010000 		.4byte	.LASF24
 586 016f 04       		.byte	0x4
 587 0170 3A       		.byte	0x3a
 588 0171 55010000 		.4byte	0x155
 589 0175 0D       		.uleb128 0xd
 590 0176 01       		.byte	0x1
 591 0177 04       		.byte	0x4
 592 0178 43       		.byte	0x43
 593 0179 90010000 		.4byte	0x190
 594 017d 07       		.uleb128 0x7
 595 017e C6010000 		.4byte	.LASF25
 596 0182 08       		.sleb128 8
 597 0183 07       		.uleb128 0x7
 598 0184 44000000 		.4byte	.LASF26
 599 0188 0C       		.sleb128 12
 600 0189 07       		.uleb128 0x7
 601 018a DA010000 		.4byte	.LASF27
 602 018e 10       		.sleb128 16
 603 018f 00       		.byte	0
 604 0190 03       		.uleb128 0x3
 605 0191 F7020000 		.4byte	.LASF28
 606 0195 04       		.byte	0x4
 607 0196 47       		.byte	0x47
ARM GAS  /tmp/ccsCjCvg.s 			page 17


 608 0197 75010000 		.4byte	0x175
 609 019b 0E       		.uleb128 0xe
 610 019c 08       		.byte	0x8
 611 019d 04       		.byte	0x4
 612 019e 50       		.byte	0x50
 613 019f DC010000 		.4byte	0x1dc
 614 01a3 0F       		.uleb128 0xf
 615 01a4 00000000 		.4byte	.LASF29
 616 01a8 04       		.byte	0x4
 617 01a9 52       		.byte	0x52
 618 01aa 57000000 		.4byte	0x57
 619 01ae 02       		.byte	0x2
 620 01af 23       		.byte	0x23
 621 01b0 00       		.uleb128 0
 622 01b1 0F       		.uleb128 0xf
 623 01b2 0A000000 		.4byte	.LASF30
 624 01b6 04       		.byte	0x4
 625 01b7 55       		.byte	0x55
 626 01b8 6A010000 		.4byte	0x16a
 627 01bc 02       		.byte	0x2
 628 01bd 23       		.byte	0x23
 629 01be 04       		.uleb128 0x4
 630 01bf 0F       		.uleb128 0xf
 631 01c0 37000000 		.4byte	.LASF31
 632 01c4 04       		.byte	0x4
 633 01c5 58       		.byte	0x58
 634 01c6 90010000 		.4byte	0x190
 635 01ca 02       		.byte	0x2
 636 01cb 23       		.byte	0x23
 637 01cc 05       		.uleb128 0x5
 638 01cd 0F       		.uleb128 0xf
 639 01ce 2A000000 		.4byte	.LASF32
 640 01d2 04       		.byte	0x4
 641 01d3 5B       		.byte	0x5b
 642 01d4 DA000000 		.4byte	0xda
 643 01d8 02       		.byte	0x2
 644 01d9 23       		.byte	0x23
 645 01da 06       		.uleb128 0x6
 646 01db 00       		.byte	0
 647 01dc 03       		.uleb128 0x3
 648 01dd AF000000 		.4byte	.LASF33
 649 01e1 04       		.byte	0x4
 650 01e2 5D       		.byte	0x5d
 651 01e3 9B010000 		.4byte	0x19b
 652 01e7 10       		.uleb128 0x10
 653 01e8 01       		.byte	0x1
 654 01e9 11030000 		.4byte	.LASF47
 655 01ed 01       		.byte	0x1
 656 01ee 6E       		.byte	0x6e
 657 01ef 01       		.byte	0x1
 658 01f0 00000000 		.4byte	.LFB110
 659 01f4 1C000000 		.4byte	.LFE110
 660 01f8 02       		.byte	0x2
 661 01f9 7D       		.byte	0x7d
 662 01fa 00       		.sleb128 0
 663 01fb 01       		.byte	0x1
 664 01fc 11       		.uleb128 0x11
ARM GAS  /tmp/ccsCjCvg.s 			page 18


 665 01fd 01       		.byte	0x1
 666 01fe 03020000 		.4byte	.LASF34
 667 0202 01       		.byte	0x1
 668 0203 7E       		.byte	0x7e
 669 0204 01       		.byte	0x1
 670 0205 00000000 		.4byte	.LFB111
 671 0209 78000000 		.4byte	.LFE111
 672 020d 00000000 		.4byte	.LLST0
 673 0211 01       		.byte	0x1
 674 0212 35020000 		.4byte	0x235
 675 0216 12       		.uleb128 0x12
 676 0217 C0000000 		.4byte	.LASF36
 677 021b 01       		.byte	0x1
 678 021c 7E       		.byte	0x7e
 679 021d 35020000 		.4byte	0x235
 680 0221 20000000 		.4byte	.LLST1
 681 0225 13       		.uleb128 0x13
 682 0226 746D7000 		.ascii	"tmp\000"
 683 022a 01       		.byte	0x1
 684 022b 80       		.byte	0x80
 685 022c 57000000 		.4byte	0x57
 686 0230 5A000000 		.4byte	.LLST2
 687 0234 00       		.byte	0
 688 0235 14       		.uleb128 0x14
 689 0236 04       		.byte	0x4
 690 0237 DC010000 		.4byte	0x1dc
 691 023b 15       		.uleb128 0x15
 692 023c 01       		.byte	0x1
 693 023d 37020000 		.4byte	.LASF35
 694 0241 01       		.byte	0x1
 695 0242 B6       		.byte	0xb6
 696 0243 01       		.byte	0x1
 697 0244 00000000 		.4byte	.LFB112
 698 0248 0E000000 		.4byte	.LFE112
 699 024c 02       		.byte	0x2
 700 024d 7D       		.byte	0x7d
 701 024e 00       		.sleb128 0
 702 024f 01       		.byte	0x1
 703 0250 62020000 		.4byte	0x262
 704 0254 16       		.uleb128 0x16
 705 0255 C0000000 		.4byte	.LASF36
 706 0259 01       		.byte	0x1
 707 025a B6       		.byte	0xb6
 708 025b 35020000 		.4byte	0x235
 709 025f 01       		.byte	0x1
 710 0260 50       		.byte	0x50
 711 0261 00       		.byte	0
 712 0262 15       		.uleb128 0x15
 713 0263 01       		.byte	0x1
 714 0264 96000000 		.4byte	.LASF37
 715 0268 01       		.byte	0x1
 716 0269 C5       		.byte	0xc5
 717 026a 01       		.byte	0x1
 718 026b 00000000 		.4byte	.LFB113
 719 026f 10000000 		.4byte	.LFE113
 720 0273 02       		.byte	0x2
 721 0274 7D       		.byte	0x7d
ARM GAS  /tmp/ccsCjCvg.s 			page 19


 722 0275 00       		.sleb128 0
 723 0276 01       		.byte	0x1
 724 0277 8B020000 		.4byte	0x28b
 725 027b 12       		.uleb128 0x12
 726 027c 00000000 		.4byte	.LASF29
 727 0280 01       		.byte	0x1
 728 0281 C5       		.byte	0xc5
 729 0282 57000000 		.4byte	0x57
 730 0286 EE000000 		.4byte	.LLST3
 731 028a 00       		.byte	0
 732 028b 17       		.uleb128 0x17
 733 028c 01       		.byte	0x1
 734 028d 0D020000 		.4byte	.LASF40
 735 0291 01       		.byte	0x1
 736 0292 E3       		.byte	0xe3
 737 0293 01       		.byte	0x1
 738 0294 AC000000 		.4byte	0xac
 739 0298 00000000 		.4byte	.LFB114
 740 029c 14000000 		.4byte	.LFE114
 741 02a0 02       		.byte	0x2
 742 02a1 7D       		.byte	0x7d
 743 02a2 00       		.sleb128 0
 744 02a3 01       		.byte	0x1
 745 02a4 C7020000 		.4byte	0x2c7
 746 02a8 12       		.uleb128 0x12
 747 02a9 00000000 		.4byte	.LASF29
 748 02ad 01       		.byte	0x1
 749 02ae E3       		.byte	0xe3
 750 02af 57000000 		.4byte	0x57
 751 02b3 0F010000 		.4byte	.LLST4
 752 02b7 18       		.uleb128 0x18
 753 02b8 8C000000 		.4byte	.LASF38
 754 02bc 01       		.byte	0x1
 755 02bd E5       		.byte	0xe5
 756 02be AC000000 		.4byte	0xac
 757 02c2 30010000 		.4byte	.LLST5
 758 02c6 00       		.byte	0
 759 02c7 15       		.uleb128 0x15
 760 02c8 01       		.byte	0x1
 761 02c9 15010000 		.4byte	.LASF39
 762 02cd 01       		.byte	0x1
 763 02ce FA       		.byte	0xfa
 764 02cf 01       		.byte	0x1
 765 02d0 00000000 		.4byte	.LFB115
 766 02d4 0C000000 		.4byte	.LFE115
 767 02d8 02       		.byte	0x2
 768 02d9 7D       		.byte	0x7d
 769 02da 00       		.sleb128 0
 770 02db 01       		.byte	0x1
 771 02dc EE020000 		.4byte	0x2ee
 772 02e0 16       		.uleb128 0x16
 773 02e1 00000000 		.4byte	.LASF29
 774 02e5 01       		.byte	0x1
 775 02e6 FA       		.byte	0xfa
 776 02e7 57000000 		.4byte	0x57
 777 02eb 01       		.byte	0x1
 778 02ec 50       		.byte	0x50
ARM GAS  /tmp/ccsCjCvg.s 			page 20


 779 02ed 00       		.byte	0
 780 02ee 19       		.uleb128 0x19
 781 02ef 01       		.byte	0x1
 782 02f0 AB020000 		.4byte	.LASF41
 783 02f4 01       		.byte	0x1
 784 02f5 0801     		.2byte	0x108
 785 02f7 01       		.byte	0x1
 786 02f8 B8000000 		.4byte	0xb8
 787 02fc 00000000 		.4byte	.LFB116
 788 0300 20000000 		.4byte	.LFE116
 789 0304 02       		.byte	0x2
 790 0305 7D       		.byte	0x7d
 791 0306 00       		.sleb128 0
 792 0307 01       		.byte	0x1
 793 0308 3D030000 		.4byte	0x33d
 794 030c 1A       		.uleb128 0x1a
 795 030d 00000000 		.4byte	.LASF29
 796 0311 01       		.byte	0x1
 797 0312 0801     		.2byte	0x108
 798 0314 57000000 		.4byte	0x57
 799 0318 69010000 		.4byte	.LLST6
 800 031c 1B       		.uleb128 0x1b
 801 031d 8C000000 		.4byte	.LASF38
 802 0321 01       		.byte	0x1
 803 0322 0A01     		.2byte	0x10a
 804 0324 B8000000 		.4byte	0xb8
 805 0328 A3010000 		.4byte	.LLST7
 806 032c 1B       		.uleb128 0x1b
 807 032d 1D000000 		.4byte	.LASF42
 808 0331 01       		.byte	0x1
 809 0332 0B01     		.2byte	0x10b
 810 0334 57000000 		.4byte	0x57
 811 0338 C2010000 		.4byte	.LLST8
 812 033c 00       		.byte	0
 813 033d 1C       		.uleb128 0x1c
 814 033e 01       		.byte	0x1
 815 033f BC020000 		.4byte	.LASF43
 816 0343 01       		.byte	0x1
 817 0344 2101     		.2byte	0x121
 818 0346 01       		.byte	0x1
 819 0347 00000000 		.4byte	.LFB117
 820 034b 0C000000 		.4byte	.LFE117
 821 034f 02       		.byte	0x2
 822 0350 7D       		.byte	0x7d
 823 0351 00       		.sleb128 0
 824 0352 01       		.byte	0x1
 825 0353 66030000 		.4byte	0x366
 826 0357 1D       		.uleb128 0x1d
 827 0358 00000000 		.4byte	.LASF29
 828 035c 01       		.byte	0x1
 829 035d 2101     		.2byte	0x121
 830 035f 57000000 		.4byte	0x57
 831 0363 01       		.byte	0x1
 832 0364 50       		.byte	0x50
 833 0365 00       		.byte	0
 834 0366 1E       		.uleb128 0x1e
 835 0367 62010000 		.4byte	.LASF48
ARM GAS  /tmp/ccsCjCvg.s 			page 21


 836 036b 05       		.byte	0x5
 837 036c 9806     		.2byte	0x698
 838 036e 91000000 		.4byte	0x91
 839 0372 01       		.byte	0x1
 840 0373 01       		.byte	0x1
 841 0374 00       		.byte	0
 842              		.section	.debug_abbrev,"",%progbits
 843              	.Ldebug_abbrev0:
 844 0000 01       		.uleb128 0x1
 845 0001 11       		.uleb128 0x11
 846 0002 01       		.byte	0x1
 847 0003 25       		.uleb128 0x25
 848 0004 0E       		.uleb128 0xe
 849 0005 13       		.uleb128 0x13
 850 0006 0B       		.uleb128 0xb
 851 0007 03       		.uleb128 0x3
 852 0008 0E       		.uleb128 0xe
 853 0009 1B       		.uleb128 0x1b
 854 000a 0E       		.uleb128 0xe
 855 000b 55       		.uleb128 0x55
 856 000c 06       		.uleb128 0x6
 857 000d 11       		.uleb128 0x11
 858 000e 01       		.uleb128 0x1
 859 000f 52       		.uleb128 0x52
 860 0010 01       		.uleb128 0x1
 861 0011 10       		.uleb128 0x10
 862 0012 06       		.uleb128 0x6
 863 0013 00       		.byte	0
 864 0014 00       		.byte	0
 865 0015 02       		.uleb128 0x2
 866 0016 24       		.uleb128 0x24
 867 0017 00       		.byte	0
 868 0018 0B       		.uleb128 0xb
 869 0019 0B       		.uleb128 0xb
 870 001a 3E       		.uleb128 0x3e
 871 001b 0B       		.uleb128 0xb
 872 001c 03       		.uleb128 0x3
 873 001d 0E       		.uleb128 0xe
 874 001e 00       		.byte	0
 875 001f 00       		.byte	0
 876 0020 03       		.uleb128 0x3
 877 0021 16       		.uleb128 0x16
 878 0022 00       		.byte	0
 879 0023 03       		.uleb128 0x3
 880 0024 0E       		.uleb128 0xe
 881 0025 3A       		.uleb128 0x3a
 882 0026 0B       		.uleb128 0xb
 883 0027 3B       		.uleb128 0x3b
 884 0028 0B       		.uleb128 0xb
 885 0029 49       		.uleb128 0x49
 886 002a 13       		.uleb128 0x13
 887 002b 00       		.byte	0
 888 002c 00       		.byte	0
 889 002d 04       		.uleb128 0x4
 890 002e 24       		.uleb128 0x24
 891 002f 00       		.byte	0
 892 0030 0B       		.uleb128 0xb
ARM GAS  /tmp/ccsCjCvg.s 			page 22


 893 0031 0B       		.uleb128 0xb
 894 0032 3E       		.uleb128 0x3e
 895 0033 0B       		.uleb128 0xb
 896 0034 03       		.uleb128 0x3
 897 0035 08       		.uleb128 0x8
 898 0036 00       		.byte	0
 899 0037 00       		.byte	0
 900 0038 05       		.uleb128 0x5
 901 0039 35       		.uleb128 0x35
 902 003a 00       		.byte	0
 903 003b 49       		.uleb128 0x49
 904 003c 13       		.uleb128 0x13
 905 003d 00       		.byte	0
 906 003e 00       		.byte	0
 907 003f 06       		.uleb128 0x6
 908 0040 04       		.uleb128 0x4
 909 0041 01       		.byte	0x1
 910 0042 0B       		.uleb128 0xb
 911 0043 0B       		.uleb128 0xb
 912 0044 3A       		.uleb128 0x3a
 913 0045 0B       		.uleb128 0xb
 914 0046 3B       		.uleb128 0x3b
 915 0047 05       		.uleb128 0x5
 916 0048 01       		.uleb128 0x1
 917 0049 13       		.uleb128 0x13
 918 004a 00       		.byte	0
 919 004b 00       		.byte	0
 920 004c 07       		.uleb128 0x7
 921 004d 28       		.uleb128 0x28
 922 004e 00       		.byte	0
 923 004f 03       		.uleb128 0x3
 924 0050 0E       		.uleb128 0xe
 925 0051 1C       		.uleb128 0x1c
 926 0052 0D       		.uleb128 0xd
 927 0053 00       		.byte	0
 928 0054 00       		.byte	0
 929 0055 08       		.uleb128 0x8
 930 0056 28       		.uleb128 0x28
 931 0057 00       		.byte	0
 932 0058 03       		.uleb128 0x3
 933 0059 08       		.uleb128 0x8
 934 005a 1C       		.uleb128 0x1c
 935 005b 0D       		.uleb128 0xd
 936 005c 00       		.byte	0
 937 005d 00       		.byte	0
 938 005e 09       		.uleb128 0x9
 939 005f 16       		.uleb128 0x16
 940 0060 00       		.byte	0
 941 0061 03       		.uleb128 0x3
 942 0062 0E       		.uleb128 0xe
 943 0063 3A       		.uleb128 0x3a
 944 0064 0B       		.uleb128 0xb
 945 0065 3B       		.uleb128 0x3b
 946 0066 05       		.uleb128 0x5
 947 0067 49       		.uleb128 0x49
 948 0068 13       		.uleb128 0x13
 949 0069 00       		.byte	0
ARM GAS  /tmp/ccsCjCvg.s 			page 23


 950 006a 00       		.byte	0
 951 006b 0A       		.uleb128 0xa
 952 006c 13       		.uleb128 0x13
 953 006d 01       		.byte	0x1
 954 006e 0B       		.uleb128 0xb
 955 006f 0B       		.uleb128 0xb
 956 0070 3A       		.uleb128 0x3a
 957 0071 0B       		.uleb128 0xb
 958 0072 3B       		.uleb128 0x3b
 959 0073 05       		.uleb128 0x5
 960 0074 01       		.uleb128 0x1
 961 0075 13       		.uleb128 0x13
 962 0076 00       		.byte	0
 963 0077 00       		.byte	0
 964 0078 0B       		.uleb128 0xb
 965 0079 0D       		.uleb128 0xd
 966 007a 00       		.byte	0
 967 007b 03       		.uleb128 0x3
 968 007c 08       		.uleb128 0x8
 969 007d 3A       		.uleb128 0x3a
 970 007e 0B       		.uleb128 0xb
 971 007f 3B       		.uleb128 0x3b
 972 0080 05       		.uleb128 0x5
 973 0081 49       		.uleb128 0x49
 974 0082 13       		.uleb128 0x13
 975 0083 38       		.uleb128 0x38
 976 0084 0A       		.uleb128 0xa
 977 0085 00       		.byte	0
 978 0086 00       		.byte	0
 979 0087 0C       		.uleb128 0xc
 980 0088 0D       		.uleb128 0xd
 981 0089 00       		.byte	0
 982 008a 03       		.uleb128 0x3
 983 008b 0E       		.uleb128 0xe
 984 008c 3A       		.uleb128 0x3a
 985 008d 0B       		.uleb128 0xb
 986 008e 3B       		.uleb128 0x3b
 987 008f 05       		.uleb128 0x5
 988 0090 49       		.uleb128 0x49
 989 0091 13       		.uleb128 0x13
 990 0092 38       		.uleb128 0x38
 991 0093 0A       		.uleb128 0xa
 992 0094 00       		.byte	0
 993 0095 00       		.byte	0
 994 0096 0D       		.uleb128 0xd
 995 0097 04       		.uleb128 0x4
 996 0098 01       		.byte	0x1
 997 0099 0B       		.uleb128 0xb
 998 009a 0B       		.uleb128 0xb
 999 009b 3A       		.uleb128 0x3a
 1000 009c 0B       		.uleb128 0xb
 1001 009d 3B       		.uleb128 0x3b
 1002 009e 0B       		.uleb128 0xb
 1003 009f 01       		.uleb128 0x1
 1004 00a0 13       		.uleb128 0x13
 1005 00a1 00       		.byte	0
 1006 00a2 00       		.byte	0
ARM GAS  /tmp/ccsCjCvg.s 			page 24


 1007 00a3 0E       		.uleb128 0xe
 1008 00a4 13       		.uleb128 0x13
 1009 00a5 01       		.byte	0x1
 1010 00a6 0B       		.uleb128 0xb
 1011 00a7 0B       		.uleb128 0xb
 1012 00a8 3A       		.uleb128 0x3a
 1013 00a9 0B       		.uleb128 0xb
 1014 00aa 3B       		.uleb128 0x3b
 1015 00ab 0B       		.uleb128 0xb
 1016 00ac 01       		.uleb128 0x1
 1017 00ad 13       		.uleb128 0x13
 1018 00ae 00       		.byte	0
 1019 00af 00       		.byte	0
 1020 00b0 0F       		.uleb128 0xf
 1021 00b1 0D       		.uleb128 0xd
 1022 00b2 00       		.byte	0
 1023 00b3 03       		.uleb128 0x3
 1024 00b4 0E       		.uleb128 0xe
 1025 00b5 3A       		.uleb128 0x3a
 1026 00b6 0B       		.uleb128 0xb
 1027 00b7 3B       		.uleb128 0x3b
 1028 00b8 0B       		.uleb128 0xb
 1029 00b9 49       		.uleb128 0x49
 1030 00ba 13       		.uleb128 0x13
 1031 00bb 38       		.uleb128 0x38
 1032 00bc 0A       		.uleb128 0xa
 1033 00bd 00       		.byte	0
 1034 00be 00       		.byte	0
 1035 00bf 10       		.uleb128 0x10
 1036 00c0 2E       		.uleb128 0x2e
 1037 00c1 00       		.byte	0
 1038 00c2 3F       		.uleb128 0x3f
 1039 00c3 0C       		.uleb128 0xc
 1040 00c4 03       		.uleb128 0x3
 1041 00c5 0E       		.uleb128 0xe
 1042 00c6 3A       		.uleb128 0x3a
 1043 00c7 0B       		.uleb128 0xb
 1044 00c8 3B       		.uleb128 0x3b
 1045 00c9 0B       		.uleb128 0xb
 1046 00ca 27       		.uleb128 0x27
 1047 00cb 0C       		.uleb128 0xc
 1048 00cc 11       		.uleb128 0x11
 1049 00cd 01       		.uleb128 0x1
 1050 00ce 12       		.uleb128 0x12
 1051 00cf 01       		.uleb128 0x1
 1052 00d0 40       		.uleb128 0x40
 1053 00d1 0A       		.uleb128 0xa
 1054 00d2 9742     		.uleb128 0x2117
 1055 00d4 0C       		.uleb128 0xc
 1056 00d5 00       		.byte	0
 1057 00d6 00       		.byte	0
 1058 00d7 11       		.uleb128 0x11
 1059 00d8 2E       		.uleb128 0x2e
 1060 00d9 01       		.byte	0x1
 1061 00da 3F       		.uleb128 0x3f
 1062 00db 0C       		.uleb128 0xc
 1063 00dc 03       		.uleb128 0x3
ARM GAS  /tmp/ccsCjCvg.s 			page 25


 1064 00dd 0E       		.uleb128 0xe
 1065 00de 3A       		.uleb128 0x3a
 1066 00df 0B       		.uleb128 0xb
 1067 00e0 3B       		.uleb128 0x3b
 1068 00e1 0B       		.uleb128 0xb
 1069 00e2 27       		.uleb128 0x27
 1070 00e3 0C       		.uleb128 0xc
 1071 00e4 11       		.uleb128 0x11
 1072 00e5 01       		.uleb128 0x1
 1073 00e6 12       		.uleb128 0x12
 1074 00e7 01       		.uleb128 0x1
 1075 00e8 40       		.uleb128 0x40
 1076 00e9 06       		.uleb128 0x6
 1077 00ea 9742     		.uleb128 0x2117
 1078 00ec 0C       		.uleb128 0xc
 1079 00ed 01       		.uleb128 0x1
 1080 00ee 13       		.uleb128 0x13
 1081 00ef 00       		.byte	0
 1082 00f0 00       		.byte	0
 1083 00f1 12       		.uleb128 0x12
 1084 00f2 05       		.uleb128 0x5
 1085 00f3 00       		.byte	0
 1086 00f4 03       		.uleb128 0x3
 1087 00f5 0E       		.uleb128 0xe
 1088 00f6 3A       		.uleb128 0x3a
 1089 00f7 0B       		.uleb128 0xb
 1090 00f8 3B       		.uleb128 0x3b
 1091 00f9 0B       		.uleb128 0xb
 1092 00fa 49       		.uleb128 0x49
 1093 00fb 13       		.uleb128 0x13
 1094 00fc 02       		.uleb128 0x2
 1095 00fd 06       		.uleb128 0x6
 1096 00fe 00       		.byte	0
 1097 00ff 00       		.byte	0
 1098 0100 13       		.uleb128 0x13
 1099 0101 34       		.uleb128 0x34
 1100 0102 00       		.byte	0
 1101 0103 03       		.uleb128 0x3
 1102 0104 08       		.uleb128 0x8
 1103 0105 3A       		.uleb128 0x3a
 1104 0106 0B       		.uleb128 0xb
 1105 0107 3B       		.uleb128 0x3b
 1106 0108 0B       		.uleb128 0xb
 1107 0109 49       		.uleb128 0x49
 1108 010a 13       		.uleb128 0x13
 1109 010b 02       		.uleb128 0x2
 1110 010c 06       		.uleb128 0x6
 1111 010d 00       		.byte	0
 1112 010e 00       		.byte	0
 1113 010f 14       		.uleb128 0x14
 1114 0110 0F       		.uleb128 0xf
 1115 0111 00       		.byte	0
 1116 0112 0B       		.uleb128 0xb
 1117 0113 0B       		.uleb128 0xb
 1118 0114 49       		.uleb128 0x49
 1119 0115 13       		.uleb128 0x13
 1120 0116 00       		.byte	0
ARM GAS  /tmp/ccsCjCvg.s 			page 26


 1121 0117 00       		.byte	0
 1122 0118 15       		.uleb128 0x15
 1123 0119 2E       		.uleb128 0x2e
 1124 011a 01       		.byte	0x1
 1125 011b 3F       		.uleb128 0x3f
 1126 011c 0C       		.uleb128 0xc
 1127 011d 03       		.uleb128 0x3
 1128 011e 0E       		.uleb128 0xe
 1129 011f 3A       		.uleb128 0x3a
 1130 0120 0B       		.uleb128 0xb
 1131 0121 3B       		.uleb128 0x3b
 1132 0122 0B       		.uleb128 0xb
 1133 0123 27       		.uleb128 0x27
 1134 0124 0C       		.uleb128 0xc
 1135 0125 11       		.uleb128 0x11
 1136 0126 01       		.uleb128 0x1
 1137 0127 12       		.uleb128 0x12
 1138 0128 01       		.uleb128 0x1
 1139 0129 40       		.uleb128 0x40
 1140 012a 0A       		.uleb128 0xa
 1141 012b 9742     		.uleb128 0x2117
 1142 012d 0C       		.uleb128 0xc
 1143 012e 01       		.uleb128 0x1
 1144 012f 13       		.uleb128 0x13
 1145 0130 00       		.byte	0
 1146 0131 00       		.byte	0
 1147 0132 16       		.uleb128 0x16
 1148 0133 05       		.uleb128 0x5
 1149 0134 00       		.byte	0
 1150 0135 03       		.uleb128 0x3
 1151 0136 0E       		.uleb128 0xe
 1152 0137 3A       		.uleb128 0x3a
 1153 0138 0B       		.uleb128 0xb
 1154 0139 3B       		.uleb128 0x3b
 1155 013a 0B       		.uleb128 0xb
 1156 013b 49       		.uleb128 0x49
 1157 013c 13       		.uleb128 0x13
 1158 013d 02       		.uleb128 0x2
 1159 013e 0A       		.uleb128 0xa
 1160 013f 00       		.byte	0
 1161 0140 00       		.byte	0
 1162 0141 17       		.uleb128 0x17
 1163 0142 2E       		.uleb128 0x2e
 1164 0143 01       		.byte	0x1
 1165 0144 3F       		.uleb128 0x3f
 1166 0145 0C       		.uleb128 0xc
 1167 0146 03       		.uleb128 0x3
 1168 0147 0E       		.uleb128 0xe
 1169 0148 3A       		.uleb128 0x3a
 1170 0149 0B       		.uleb128 0xb
 1171 014a 3B       		.uleb128 0x3b
 1172 014b 0B       		.uleb128 0xb
 1173 014c 27       		.uleb128 0x27
 1174 014d 0C       		.uleb128 0xc
 1175 014e 49       		.uleb128 0x49
 1176 014f 13       		.uleb128 0x13
 1177 0150 11       		.uleb128 0x11
ARM GAS  /tmp/ccsCjCvg.s 			page 27


 1178 0151 01       		.uleb128 0x1
 1179 0152 12       		.uleb128 0x12
 1180 0153 01       		.uleb128 0x1
 1181 0154 40       		.uleb128 0x40
 1182 0155 0A       		.uleb128 0xa
 1183 0156 9742     		.uleb128 0x2117
 1184 0158 0C       		.uleb128 0xc
 1185 0159 01       		.uleb128 0x1
 1186 015a 13       		.uleb128 0x13
 1187 015b 00       		.byte	0
 1188 015c 00       		.byte	0
 1189 015d 18       		.uleb128 0x18
 1190 015e 34       		.uleb128 0x34
 1191 015f 00       		.byte	0
 1192 0160 03       		.uleb128 0x3
 1193 0161 0E       		.uleb128 0xe
 1194 0162 3A       		.uleb128 0x3a
 1195 0163 0B       		.uleb128 0xb
 1196 0164 3B       		.uleb128 0x3b
 1197 0165 0B       		.uleb128 0xb
 1198 0166 49       		.uleb128 0x49
 1199 0167 13       		.uleb128 0x13
 1200 0168 02       		.uleb128 0x2
 1201 0169 06       		.uleb128 0x6
 1202 016a 00       		.byte	0
 1203 016b 00       		.byte	0
 1204 016c 19       		.uleb128 0x19
 1205 016d 2E       		.uleb128 0x2e
 1206 016e 01       		.byte	0x1
 1207 016f 3F       		.uleb128 0x3f
 1208 0170 0C       		.uleb128 0xc
 1209 0171 03       		.uleb128 0x3
 1210 0172 0E       		.uleb128 0xe
 1211 0173 3A       		.uleb128 0x3a
 1212 0174 0B       		.uleb128 0xb
 1213 0175 3B       		.uleb128 0x3b
 1214 0176 05       		.uleb128 0x5
 1215 0177 27       		.uleb128 0x27
 1216 0178 0C       		.uleb128 0xc
 1217 0179 49       		.uleb128 0x49
 1218 017a 13       		.uleb128 0x13
 1219 017b 11       		.uleb128 0x11
 1220 017c 01       		.uleb128 0x1
 1221 017d 12       		.uleb128 0x12
 1222 017e 01       		.uleb128 0x1
 1223 017f 40       		.uleb128 0x40
 1224 0180 0A       		.uleb128 0xa
 1225 0181 9742     		.uleb128 0x2117
 1226 0183 0C       		.uleb128 0xc
 1227 0184 01       		.uleb128 0x1
 1228 0185 13       		.uleb128 0x13
 1229 0186 00       		.byte	0
 1230 0187 00       		.byte	0
 1231 0188 1A       		.uleb128 0x1a
 1232 0189 05       		.uleb128 0x5
 1233 018a 00       		.byte	0
 1234 018b 03       		.uleb128 0x3
ARM GAS  /tmp/ccsCjCvg.s 			page 28


 1235 018c 0E       		.uleb128 0xe
 1236 018d 3A       		.uleb128 0x3a
 1237 018e 0B       		.uleb128 0xb
 1238 018f 3B       		.uleb128 0x3b
 1239 0190 05       		.uleb128 0x5
 1240 0191 49       		.uleb128 0x49
 1241 0192 13       		.uleb128 0x13
 1242 0193 02       		.uleb128 0x2
 1243 0194 06       		.uleb128 0x6
 1244 0195 00       		.byte	0
 1245 0196 00       		.byte	0
 1246 0197 1B       		.uleb128 0x1b
 1247 0198 34       		.uleb128 0x34
 1248 0199 00       		.byte	0
 1249 019a 03       		.uleb128 0x3
 1250 019b 0E       		.uleb128 0xe
 1251 019c 3A       		.uleb128 0x3a
 1252 019d 0B       		.uleb128 0xb
 1253 019e 3B       		.uleb128 0x3b
 1254 019f 05       		.uleb128 0x5
 1255 01a0 49       		.uleb128 0x49
 1256 01a1 13       		.uleb128 0x13
 1257 01a2 02       		.uleb128 0x2
 1258 01a3 06       		.uleb128 0x6
 1259 01a4 00       		.byte	0
 1260 01a5 00       		.byte	0
 1261 01a6 1C       		.uleb128 0x1c
 1262 01a7 2E       		.uleb128 0x2e
 1263 01a8 01       		.byte	0x1
 1264 01a9 3F       		.uleb128 0x3f
 1265 01aa 0C       		.uleb128 0xc
 1266 01ab 03       		.uleb128 0x3
 1267 01ac 0E       		.uleb128 0xe
 1268 01ad 3A       		.uleb128 0x3a
 1269 01ae 0B       		.uleb128 0xb
 1270 01af 3B       		.uleb128 0x3b
 1271 01b0 05       		.uleb128 0x5
 1272 01b1 27       		.uleb128 0x27
 1273 01b2 0C       		.uleb128 0xc
 1274 01b3 11       		.uleb128 0x11
 1275 01b4 01       		.uleb128 0x1
 1276 01b5 12       		.uleb128 0x12
 1277 01b6 01       		.uleb128 0x1
 1278 01b7 40       		.uleb128 0x40
 1279 01b8 0A       		.uleb128 0xa
 1280 01b9 9742     		.uleb128 0x2117
 1281 01bb 0C       		.uleb128 0xc
 1282 01bc 01       		.uleb128 0x1
 1283 01bd 13       		.uleb128 0x13
 1284 01be 00       		.byte	0
 1285 01bf 00       		.byte	0
 1286 01c0 1D       		.uleb128 0x1d
 1287 01c1 05       		.uleb128 0x5
 1288 01c2 00       		.byte	0
 1289 01c3 03       		.uleb128 0x3
 1290 01c4 0E       		.uleb128 0xe
 1291 01c5 3A       		.uleb128 0x3a
ARM GAS  /tmp/ccsCjCvg.s 			page 29


 1292 01c6 0B       		.uleb128 0xb
 1293 01c7 3B       		.uleb128 0x3b
 1294 01c8 05       		.uleb128 0x5
 1295 01c9 49       		.uleb128 0x49
 1296 01ca 13       		.uleb128 0x13
 1297 01cb 02       		.uleb128 0x2
 1298 01cc 0A       		.uleb128 0xa
 1299 01cd 00       		.byte	0
 1300 01ce 00       		.byte	0
 1301 01cf 1E       		.uleb128 0x1e
 1302 01d0 34       		.uleb128 0x34
 1303 01d1 00       		.byte	0
 1304 01d2 03       		.uleb128 0x3
 1305 01d3 0E       		.uleb128 0xe
 1306 01d4 3A       		.uleb128 0x3a
 1307 01d5 0B       		.uleb128 0xb
 1308 01d6 3B       		.uleb128 0x3b
 1309 01d7 05       		.uleb128 0x5
 1310 01d8 49       		.uleb128 0x49
 1311 01d9 13       		.uleb128 0x13
 1312 01da 3F       		.uleb128 0x3f
 1313 01db 0C       		.uleb128 0xc
 1314 01dc 3C       		.uleb128 0x3c
 1315 01dd 0C       		.uleb128 0xc
 1316 01de 00       		.byte	0
 1317 01df 00       		.byte	0
 1318 01e0 00       		.byte	0
 1319              		.section	.debug_loc,"",%progbits
 1320              	.Ldebug_loc0:
 1321              	.LLST0:
 1322 0000 00000000 		.4byte	.LFB111
 1323 0004 04000000 		.4byte	.LCFI0
 1324 0008 0200     		.2byte	0x2
 1325 000a 7D       		.byte	0x7d
 1326 000b 00       		.sleb128 0
 1327 000c 04000000 		.4byte	.LCFI0
 1328 0010 78000000 		.4byte	.LFE111
 1329 0014 0200     		.2byte	0x2
 1330 0016 7D       		.byte	0x7d
 1331 0017 08       		.sleb128 8
 1332 0018 00000000 		.4byte	0
 1333 001c 00000000 		.4byte	0
 1334              	.LLST1:
 1335 0020 00000000 		.4byte	.LVL0
 1336 0024 30000000 		.4byte	.LVL2
 1337 0028 0100     		.2byte	0x1
 1338 002a 50       		.byte	0x50
 1339 002b 30000000 		.4byte	.LVL2
 1340 002f 5E000000 		.4byte	.LVL4
 1341 0033 0400     		.2byte	0x4
 1342 0035 F3       		.byte	0xf3
 1343 0036 01       		.uleb128 0x1
 1344 0037 50       		.byte	0x50
 1345 0038 9F       		.byte	0x9f
 1346 0039 5E000000 		.4byte	.LVL4
 1347 003d 62000000 		.4byte	.LVL5
 1348 0041 0100     		.2byte	0x1
ARM GAS  /tmp/ccsCjCvg.s 			page 30


 1349 0043 50       		.byte	0x50
 1350 0044 62000000 		.4byte	.LVL5
 1351 0048 78000000 		.4byte	.LFE111
 1352 004c 0400     		.2byte	0x4
 1353 004e F3       		.byte	0xf3
 1354 004f 01       		.uleb128 0x1
 1355 0050 50       		.byte	0x50
 1356 0051 9F       		.byte	0x9f
 1357 0052 00000000 		.4byte	0
 1358 0056 00000000 		.4byte	0
 1359              	.LLST2:
 1360 005a 00000000 		.4byte	.LVL0
 1361 005e 1A000000 		.4byte	.LVL1
 1362 0062 0600     		.2byte	0x6
 1363 0064 0C       		.byte	0xc
 1364 0065 003C0140 		.4byte	0x40013c00
 1365 0069 9F       		.byte	0x9f
 1366 006a 1A000000 		.4byte	.LVL1
 1367 006e 30000000 		.4byte	.LVL2
 1368 0072 0E00     		.2byte	0xe
 1369 0074 70       		.byte	0x70
 1370 0075 04       		.sleb128 4
 1371 0076 94       		.byte	0x94
 1372 0077 01       		.byte	0x1
 1373 0078 08       		.byte	0x8
 1374 0079 FF       		.byte	0xff
 1375 007a 1A       		.byte	0x1a
 1376 007b 23       		.byte	0x23
 1377 007c 80F88480 		.uleb128 0x40013c00
 1377      04
 1378 0081 9F       		.byte	0x9f
 1379 0082 30000000 		.4byte	.LVL2
 1380 0086 50000000 		.4byte	.LVL3
 1381 008a 1100     		.2byte	0x11
 1382 008c F3       		.byte	0xf3
 1383 008d 01       		.uleb128 0x1
 1384 008e 50       		.byte	0x50
 1385 008f 23       		.byte	0x23
 1386 0090 04       		.uleb128 0x4
 1387 0091 94       		.byte	0x94
 1388 0092 01       		.byte	0x1
 1389 0093 08       		.byte	0x8
 1390 0094 FF       		.byte	0xff
 1391 0095 1A       		.byte	0x1a
 1392 0096 23       		.byte	0x23
 1393 0097 80F88480 		.uleb128 0x40013c00
 1393      04
 1394 009c 9F       		.byte	0x9f
 1395 009d 50000000 		.4byte	.LVL3
 1396 00a1 5E000000 		.4byte	.LVL4
 1397 00a5 0C00     		.2byte	0xc
 1398 00a7 70       		.byte	0x70
 1399 00a8 00       		.sleb128 0
 1400 00a9 08       		.byte	0x8
 1401 00aa FF       		.byte	0xff
 1402 00ab 1A       		.byte	0x1a
 1403 00ac 23       		.byte	0x23
ARM GAS  /tmp/ccsCjCvg.s 			page 31


 1404 00ad 80F88480 		.uleb128 0x40013c00
 1404      04
 1405 00b2 9F       		.byte	0x9f
 1406 00b3 5E000000 		.4byte	.LVL4
 1407 00b7 62000000 		.4byte	.LVL5
 1408 00bb 0E00     		.2byte	0xe
 1409 00bd 70       		.byte	0x70
 1410 00be 04       		.sleb128 4
 1411 00bf 94       		.byte	0x94
 1412 00c0 01       		.byte	0x1
 1413 00c1 08       		.byte	0x8
 1414 00c2 FF       		.byte	0xff
 1415 00c3 1A       		.byte	0x1a
 1416 00c4 23       		.byte	0x23
 1417 00c5 80F88480 		.uleb128 0x40013c00
 1417      04
 1418 00ca 9F       		.byte	0x9f
 1419 00cb 62000000 		.4byte	.LVL5
 1420 00cf 70000000 		.4byte	.LVL6
 1421 00d3 1100     		.2byte	0x11
 1422 00d5 F3       		.byte	0xf3
 1423 00d6 01       		.uleb128 0x1
 1424 00d7 50       		.byte	0x50
 1425 00d8 23       		.byte	0x23
 1426 00d9 04       		.uleb128 0x4
 1427 00da 94       		.byte	0x94
 1428 00db 01       		.byte	0x1
 1429 00dc 08       		.byte	0x8
 1430 00dd FF       		.byte	0xff
 1431 00de 1A       		.byte	0x1a
 1432 00df 23       		.byte	0x23
 1433 00e0 80F88480 		.uleb128 0x40013c00
 1433      04
 1434 00e5 9F       		.byte	0x9f
 1435 00e6 00000000 		.4byte	0
 1436 00ea 00000000 		.4byte	0
 1437              	.LLST3:
 1438 00ee 00000000 		.4byte	.LVL8
 1439 00f2 06000000 		.4byte	.LVL9
 1440 00f6 0100     		.2byte	0x1
 1441 00f8 50       		.byte	0x50
 1442 00f9 06000000 		.4byte	.LVL9
 1443 00fd 10000000 		.4byte	.LFE113
 1444 0101 0400     		.2byte	0x4
 1445 0103 F3       		.byte	0xf3
 1446 0104 01       		.uleb128 0x1
 1447 0105 50       		.byte	0x50
 1448 0106 9F       		.byte	0x9f
 1449 0107 00000000 		.4byte	0
 1450 010b 00000000 		.4byte	0
 1451              	.LLST4:
 1452 010f 00000000 		.4byte	.LVL10
 1453 0113 0C000000 		.4byte	.LVL12
 1454 0117 0100     		.2byte	0x1
 1455 0119 50       		.byte	0x50
 1456 011a 0C000000 		.4byte	.LVL12
 1457 011e 14000000 		.4byte	.LFE114
ARM GAS  /tmp/ccsCjCvg.s 			page 32


 1458 0122 0400     		.2byte	0x4
 1459 0124 F3       		.byte	0xf3
 1460 0125 01       		.uleb128 0x1
 1461 0126 50       		.byte	0x50
 1462 0127 9F       		.byte	0x9f
 1463 0128 00000000 		.4byte	0
 1464 012c 00000000 		.4byte	0
 1465              	.LLST5:
 1466 0130 00000000 		.4byte	.LVL10
 1467 0134 04000000 		.4byte	.LVL11
 1468 0138 0200     		.2byte	0x2
 1469 013a 30       		.byte	0x30
 1470 013b 9F       		.byte	0x9f
 1471 013c 04000000 		.4byte	.LVL11
 1472 0140 0C000000 		.4byte	.LVL12
 1473 0144 0800     		.2byte	0x8
 1474 0146 70       		.byte	0x70
 1475 0147 00       		.sleb128 0
 1476 0148 71       		.byte	0x71
 1477 0149 00       		.sleb128 0
 1478 014a 1A       		.byte	0x1a
 1479 014b 30       		.byte	0x30
 1480 014c 2E       		.byte	0x2e
 1481 014d 9F       		.byte	0x9f
 1482 014e 0C000000 		.4byte	.LVL12
 1483 0152 14000000 		.4byte	.LFE114
 1484 0156 0900     		.2byte	0x9
 1485 0158 F3       		.byte	0xf3
 1486 0159 01       		.uleb128 0x1
 1487 015a 50       		.byte	0x50
 1488 015b 71       		.byte	0x71
 1489 015c 00       		.sleb128 0
 1490 015d 1A       		.byte	0x1a
 1491 015e 30       		.byte	0x30
 1492 015f 2E       		.byte	0x2e
 1493 0160 9F       		.byte	0x9f
 1494 0161 00000000 		.4byte	0
 1495 0165 00000000 		.4byte	0
 1496              	.LLST6:
 1497 0169 00000000 		.4byte	.LVL14
 1498 016d 14000000 		.4byte	.LVL16
 1499 0171 0100     		.2byte	0x1
 1500 0173 50       		.byte	0x50
 1501 0174 14000000 		.4byte	.LVL16
 1502 0178 16000000 		.4byte	.LVL17
 1503 017c 0400     		.2byte	0x4
 1504 017e F3       		.byte	0xf3
 1505 017f 01       		.uleb128 0x1
 1506 0180 50       		.byte	0x50
 1507 0181 9F       		.byte	0x9f
 1508 0182 16000000 		.4byte	.LVL17
 1509 0186 18000000 		.4byte	.LVL18
 1510 018a 0100     		.2byte	0x1
 1511 018c 50       		.byte	0x50
 1512 018d 18000000 		.4byte	.LVL18
 1513 0191 20000000 		.4byte	.LFE116
 1514 0195 0400     		.2byte	0x4
ARM GAS  /tmp/ccsCjCvg.s 			page 33


 1515 0197 F3       		.byte	0xf3
 1516 0198 01       		.uleb128 0x1
 1517 0199 50       		.byte	0x50
 1518 019a 9F       		.byte	0x9f
 1519 019b 00000000 		.4byte	0
 1520 019f 00000000 		.4byte	0
 1521              	.LLST7:
 1522 01a3 00000000 		.4byte	.LVL14
 1523 01a7 18000000 		.4byte	.LVL18
 1524 01ab 0200     		.2byte	0x2
 1525 01ad 30       		.byte	0x30
 1526 01ae 9F       		.byte	0x9f
 1527 01af 18000000 		.4byte	.LVL18
 1528 01b3 20000000 		.4byte	.LFE116
 1529 01b7 0100     		.2byte	0x1
 1530 01b9 50       		.byte	0x50
 1531 01ba 00000000 		.4byte	0
 1532 01be 00000000 		.4byte	0
 1533              	.LLST8:
 1534 01c2 00000000 		.4byte	.LVL14
 1535 01c6 04000000 		.4byte	.LVL15
 1536 01ca 0200     		.2byte	0x2
 1537 01cc 30       		.byte	0x30
 1538 01cd 9F       		.byte	0x9f
 1539 01ce 04000000 		.4byte	.LVL15
 1540 01d2 14000000 		.4byte	.LVL16
 1541 01d6 0600     		.2byte	0x6
 1542 01d8 70       		.byte	0x70
 1543 01d9 00       		.sleb128 0
 1544 01da 72       		.byte	0x72
 1545 01db 00       		.sleb128 0
 1546 01dc 1A       		.byte	0x1a
 1547 01dd 9F       		.byte	0x9f
 1548 01de 14000000 		.4byte	.LVL16
 1549 01e2 16000000 		.4byte	.LVL17
 1550 01e6 0700     		.2byte	0x7
 1551 01e8 F3       		.byte	0xf3
 1552 01e9 01       		.uleb128 0x1
 1553 01ea 50       		.byte	0x50
 1554 01eb 72       		.byte	0x72
 1555 01ec 00       		.sleb128 0
 1556 01ed 1A       		.byte	0x1a
 1557 01ee 9F       		.byte	0x9f
 1558 01ef 16000000 		.4byte	.LVL17
 1559 01f3 18000000 		.4byte	.LVL18
 1560 01f7 0600     		.2byte	0x6
 1561 01f9 70       		.byte	0x70
 1562 01fa 00       		.sleb128 0
 1563 01fb 72       		.byte	0x72
 1564 01fc 00       		.sleb128 0
 1565 01fd 1A       		.byte	0x1a
 1566 01fe 9F       		.byte	0x9f
 1567 01ff 18000000 		.4byte	.LVL18
 1568 0203 20000000 		.4byte	.LFE116
 1569 0207 0700     		.2byte	0x7
 1570 0209 F3       		.byte	0xf3
 1571 020a 01       		.uleb128 0x1
ARM GAS  /tmp/ccsCjCvg.s 			page 34


 1572 020b 50       		.byte	0x50
 1573 020c 72       		.byte	0x72
 1574 020d 00       		.sleb128 0
 1575 020e 1A       		.byte	0x1a
 1576 020f 9F       		.byte	0x9f
 1577 0210 00000000 		.4byte	0
 1578 0214 00000000 		.4byte	0
 1579              		.section	.debug_aranges,"",%progbits
 1580 0000 54000000 		.4byte	0x54
 1581 0004 0200     		.2byte	0x2
 1582 0006 00000000 		.4byte	.Ldebug_info0
 1583 000a 04       		.byte	0x4
 1584 000b 00       		.byte	0
 1585 000c 0000     		.2byte	0
 1586 000e 0000     		.2byte	0
 1587 0010 00000000 		.4byte	.LFB110
 1588 0014 1C000000 		.4byte	.LFE110-.LFB110
 1589 0018 00000000 		.4byte	.LFB111
 1590 001c 78000000 		.4byte	.LFE111-.LFB111
 1591 0020 00000000 		.4byte	.LFB112
 1592 0024 0E000000 		.4byte	.LFE112-.LFB112
 1593 0028 00000000 		.4byte	.LFB113
 1594 002c 10000000 		.4byte	.LFE113-.LFB113
 1595 0030 00000000 		.4byte	.LFB114
 1596 0034 14000000 		.4byte	.LFE114-.LFB114
 1597 0038 00000000 		.4byte	.LFB115
 1598 003c 0C000000 		.4byte	.LFE115-.LFB115
 1599 0040 00000000 		.4byte	.LFB116
 1600 0044 20000000 		.4byte	.LFE116-.LFB116
 1601 0048 00000000 		.4byte	.LFB117
 1602 004c 0C000000 		.4byte	.LFE117-.LFB117
 1603 0050 00000000 		.4byte	0
 1604 0054 00000000 		.4byte	0
 1605              		.section	.debug_ranges,"",%progbits
 1606              	.Ldebug_ranges0:
 1607 0000 00000000 		.4byte	.LFB110
 1608 0004 1C000000 		.4byte	.LFE110
 1609 0008 00000000 		.4byte	.LFB111
 1610 000c 78000000 		.4byte	.LFE111
 1611 0010 00000000 		.4byte	.LFB112
 1612 0014 0E000000 		.4byte	.LFE112
 1613 0018 00000000 		.4byte	.LFB113
 1614 001c 10000000 		.4byte	.LFE113
 1615 0020 00000000 		.4byte	.LFB114
 1616 0024 14000000 		.4byte	.LFE114
 1617 0028 00000000 		.4byte	.LFB115
 1618 002c 0C000000 		.4byte	.LFE115
 1619 0030 00000000 		.4byte	.LFB116
 1620 0034 20000000 		.4byte	.LFE116
 1621 0038 00000000 		.4byte	.LFB117
 1622 003c 0C000000 		.4byte	.LFE117
 1623 0040 00000000 		.4byte	0
 1624 0044 00000000 		.4byte	0
 1625              		.section	.debug_line,"",%progbits
 1626              	.Ldebug_line0:
 1627 0000 7A010000 		.section	.debug_str,"MS",%progbits,1
 1627      0200B400 
ARM GAS  /tmp/ccsCjCvg.s 			page 35


 1627      00000201 
 1627      FB0E0D00 
 1627      01010101 
 1628              	.LASF29:
 1629 0000 45585449 		.ascii	"EXTI_Line\000"
 1629      5F4C696E 
 1629      6500
 1630              	.LASF30:
 1631 000a 45585449 		.ascii	"EXTI_Mode\000"
 1631      5F4D6F64 
 1631      6500
 1632              	.LASF14:
 1633 0014 49545374 		.ascii	"ITStatus\000"
 1633      61747573 
 1633      00
 1634              	.LASF42:
 1635 001d 656E6162 		.ascii	"enablestatus\000"
 1635      6C657374 
 1635      61747573 
 1635      00
 1636              	.LASF32:
 1637 002a 45585449 		.ascii	"EXTI_LineCmd\000"
 1637      5F4C696E 
 1637      65436D64 
 1637      00
 1638              	.LASF31:
 1639 0037 45585449 		.ascii	"EXTI_Trigger\000"
 1639      5F547269 
 1639      67676572 
 1639      00
 1640              	.LASF26:
 1641 0044 45585449 		.ascii	"EXTI_Trigger_Falling\000"
 1641      5F547269 
 1641      67676572 
 1641      5F46616C 
 1641      6C696E67 
 1642              	.LASF23:
 1643 0059 45585449 		.ascii	"EXTI_Mode_Event\000"
 1643      5F4D6F64 
 1643      655F4576 
 1643      656E7400 
 1644              	.LASF3:
 1645 0069 73686F72 		.ascii	"short unsigned int\000"
 1645      7420756E 
 1645      7369676E 
 1645      65642069 
 1645      6E7400
 1646              	.LASF17:
 1647 007c 46756E63 		.ascii	"FunctionalState\000"
 1647      74696F6E 
 1647      616C5374 
 1647      61746500 
 1648              	.LASF38:
 1649 008c 62697473 		.ascii	"bitstatus\000"
 1649      74617475 
 1649      7300
 1650              	.LASF37:
ARM GAS  /tmp/ccsCjCvg.s 			page 36


 1651 0096 45585449 		.ascii	"EXTI_GenerateSWInterrupt\000"
 1651      5F47656E 
 1651      65726174 
 1651      65535749 
 1651      6E746572 
 1652              	.LASF33:
 1653 00af 45585449 		.ascii	"EXTI_InitTypeDef\000"
 1653      5F496E69 
 1653      74547970 
 1653      65446566 
 1653      00
 1654              	.LASF36:
 1655 00c0 45585449 		.ascii	"EXTI_InitStruct\000"
 1655      5F496E69 
 1655      74537472 
 1655      75637400 
 1656              	.LASF16:
 1657 00d0 454E4142 		.ascii	"ENABLE\000"
 1657      4C4500
 1658              	.LASF22:
 1659 00d7 45585449 		.ascii	"EXTI_Mode_Interrupt\000"
 1659      5F4D6F64 
 1659      655F496E 
 1659      74657272 
 1659      75707400 
 1660              	.LASF1:
 1661 00eb 756E7369 		.ascii	"unsigned char\000"
 1661      676E6564 
 1661      20636861 
 1661      7200
 1662              	.LASF13:
 1663 00f9 466C6167 		.ascii	"FlagStatus\000"
 1663      53746174 
 1663      757300
 1664              	.LASF45:
 1665 0104 73746D33 		.ascii	"stm32f4xx_exti.c\000"
 1665      32663478 
 1665      785F6578 
 1665      74692E63 
 1665      00
 1666              	.LASF39:
 1667 0115 45585449 		.ascii	"EXTI_ClearFlag\000"
 1667      5F436C65 
 1667      6172466C 
 1667      616700
 1668              	.LASF7:
 1669 0124 6C6F6E67 		.ascii	"long unsigned int\000"
 1669      20756E73 
 1669      69676E65 
 1669      6420696E 
 1669      7400
 1670              	.LASF12:
 1671 0136 52455345 		.ascii	"RESET\000"
 1671      5400
 1672              	.LASF24:
 1673 013c 45585449 		.ascii	"EXTIMode_TypeDef\000"
 1673      4D6F6465 
ARM GAS  /tmp/ccsCjCvg.s 			page 37


 1673      5F547970 
 1673      65446566 
 1673      00
 1674              	.LASF21:
 1675 014d 45585449 		.ascii	"EXTI_TypeDef\000"
 1675      5F547970 
 1675      65446566 
 1675      00
 1676              	.LASF15:
 1677 015a 44495341 		.ascii	"DISABLE\000"
 1677      424C4500 
 1678              	.LASF48:
 1679 0162 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1679      52784275 
 1679      66666572 
 1679      00
 1680              	.LASF18:
 1681 016f 52545352 		.ascii	"RTSR\000"
 1681      00
 1682              	.LASF44:
 1683 0174 474E5520 		.ascii	"GNU C 4.7.4 20130913 (release) [ARM/embedded-4_7-br"
 1683      4320342E 
 1683      372E3420 
 1683      32303133 
 1683      30393133 
 1684 01a7 616E6368 		.ascii	"anch revision 202601]\000"
 1684      20726576 
 1684      6973696F 
 1684      6E203230 
 1684      32363031 
 1685              	.LASF6:
 1686 01bd 75696E74 		.ascii	"uint32_t\000"
 1686      33325F74 
 1686      00
 1687              	.LASF25:
 1688 01c6 45585449 		.ascii	"EXTI_Trigger_Rising\000"
 1688      5F547269 
 1688      67676572 
 1688      5F526973 
 1688      696E6700 
 1689              	.LASF27:
 1690 01da 45585449 		.ascii	"EXTI_Trigger_Rising_Falling\000"
 1690      5F547269 
 1690      67676572 
 1690      5F526973 
 1690      696E675F 
 1691              	.LASF10:
 1692 01f6 756E7369 		.ascii	"unsigned int\000"
 1692      676E6564 
 1692      20696E74 
 1692      00
 1693              	.LASF34:
 1694 0203 45585449 		.ascii	"EXTI_Init\000"
 1694      5F496E69 
 1694      7400
 1695              	.LASF40:
 1696 020d 45585449 		.ascii	"EXTI_GetFlagStatus\000"
ARM GAS  /tmp/ccsCjCvg.s 			page 38


 1696      5F476574 
 1696      466C6167 
 1696      53746174 
 1696      757300
 1697              	.LASF9:
 1698 0220 6C6F6E67 		.ascii	"long long unsigned int\000"
 1698      206C6F6E 
 1698      6720756E 
 1698      7369676E 
 1698      65642069 
 1699              	.LASF35:
 1700 0237 45585449 		.ascii	"EXTI_StructInit\000"
 1700      5F537472 
 1700      75637449 
 1700      6E697400 
 1701              	.LASF5:
 1702 0247 696E7433 		.ascii	"int32_t\000"
 1702      325F7400 
 1703              	.LASF11:
 1704 024f 73697A65 		.ascii	"sizetype\000"
 1704      74797065 
 1704      00
 1705              	.LASF8:
 1706 0258 6C6F6E67 		.ascii	"long long int\000"
 1706      206C6F6E 
 1706      6720696E 
 1706      7400
 1707              	.LASF46:
 1708 0266 2F686F6D 		.ascii	"/home/xavier/Documents/Xav/dev/stm32code/bitbox/boo"
 1708      652F7861 
 1708      76696572 
 1708      2F446F63 
 1708      756D656E 
 1709 0299 746C6F61 		.ascii	"tloader/FATFS-DBG\000"
 1709      6465722F 
 1709      46415446 
 1709      532D4442 
 1709      4700
 1710              	.LASF41:
 1711 02ab 45585449 		.ascii	"EXTI_GetITStatus\000"
 1711      5F476574 
 1711      49545374 
 1711      61747573 
 1711      00
 1712              	.LASF43:
 1713 02bc 45585449 		.ascii	"EXTI_ClearITPendingBit\000"
 1713      5F436C65 
 1713      61724954 
 1713      50656E64 
 1713      696E6742 
 1714              	.LASF2:
 1715 02d3 73686F72 		.ascii	"short int\000"
 1715      7420696E 
 1715      7400
 1716              	.LASF19:
 1717 02dd 46545352 		.ascii	"FTSR\000"
 1717      00
ARM GAS  /tmp/ccsCjCvg.s 			page 39


 1718              	.LASF4:
 1719 02e2 6C6F6E67 		.ascii	"long int\000"
 1719      20696E74 
 1719      00
 1720              	.LASF0:
 1721 02eb 7369676E 		.ascii	"signed char\000"
 1721      65642063 
 1721      68617200 
 1722              	.LASF28:
 1723 02f7 45585449 		.ascii	"EXTITrigger_TypeDef\000"
 1723      54726967 
 1723      6765725F 
 1723      54797065 
 1723      44656600 
 1724              	.LASF20:
 1725 030b 53574945 		.ascii	"SWIER\000"
 1725      5200
 1726              	.LASF47:
 1727 0311 45585449 		.ascii	"EXTI_DeInit\000"
 1727      5F446549 
 1727      6E697400 
 1728              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.7.4 20130913 (release) [ARM/embedded-4_7-br
ARM GAS  /tmp/ccsCjCvg.s 			page 40


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_exti.c
     /tmp/ccsCjCvg.s:69     .text.EXTI_DeInit:0000000000000000 $t
     /tmp/ccsCjCvg.s:74     .text.EXTI_DeInit:0000000000000000 EXTI_DeInit
     /tmp/ccsCjCvg.s:101    .text.EXTI_DeInit:0000000000000014 $d
     /tmp/ccsCjCvg.s:107    .text.EXTI_Init:0000000000000000 $t
     /tmp/ccsCjCvg.s:112    .text.EXTI_Init:0000000000000000 EXTI_Init
     /tmp/ccsCjCvg.s:207    .text.EXTI_Init:0000000000000074 $d
     /tmp/ccsCjCvg.s:212    .text.EXTI_StructInit:0000000000000000 $t
     /tmp/ccsCjCvg.s:217    .text.EXTI_StructInit:0000000000000000 EXTI_StructInit
     /tmp/ccsCjCvg.s:242    .text.EXTI_GenerateSWInterrupt:0000000000000000 $t
     /tmp/ccsCjCvg.s:247    .text.EXTI_GenerateSWInterrupt:0000000000000000 EXTI_GenerateSWInterrupt
     /tmp/ccsCjCvg.s:265    .text.EXTI_GenerateSWInterrupt:000000000000000c $d
     /tmp/ccsCjCvg.s:270    .text.EXTI_GetFlagStatus:0000000000000000 $t
     /tmp/ccsCjCvg.s:275    .text.EXTI_GetFlagStatus:0000000000000000 EXTI_GetFlagStatus
     /tmp/ccsCjCvg.s:297    .text.EXTI_GetFlagStatus:0000000000000010 $d
     /tmp/ccsCjCvg.s:302    .text.EXTI_ClearFlag:0000000000000000 $t
     /tmp/ccsCjCvg.s:307    .text.EXTI_ClearFlag:0000000000000000 EXTI_ClearFlag
     /tmp/ccsCjCvg.s:322    .text.EXTI_ClearFlag:0000000000000008 $d
     /tmp/ccsCjCvg.s:327    .text.EXTI_GetITStatus:0000000000000000 $t
     /tmp/ccsCjCvg.s:332    .text.EXTI_GetITStatus:0000000000000000 EXTI_GetITStatus
     /tmp/ccsCjCvg.s:366    .text.EXTI_GetITStatus:000000000000001c $d
     /tmp/ccsCjCvg.s:371    .text.EXTI_ClearITPendingBit:0000000000000000 $t
     /tmp/ccsCjCvg.s:376    .text.EXTI_ClearITPendingBit:0000000000000000 EXTI_ClearITPendingBit
     /tmp/ccsCjCvg.s:391    .text.EXTI_ClearITPendingBit:0000000000000008 $d
                     .debug_frame:0000000000000010 $d

NO UNDEFINED SYMBOLS
